{"version":3,"sources":["reducers/chosenDate.js","reducers/chosenGroup.js","reducers/addEventPopup.js","reducers/forceEventsRefresh.js","reducers/deleteEventPopup.js","reducers/chosenEvent.js","reducers/chosenTheme.js","reducers/editEventPopup.js","reducers/allEventsReducer.js","reducers/dayEventsReducer.js","reducers/eventTypesReducer.js","reducers/subjectsReducer.js","reducers/optionsPopup.js","reducers/groupsReducer.js","reducers/index.js","redux/slices/monthOffsetSlice.js","redux/slices/chosenDateSlice.js","redux/slices/dailyEvents.js","redux/slices/chosenGroupIDSlice.js","redux/slices/allEvents.js","redux/slices/addEventPopup.js","redux/slices/editEventPopup.js","redux/slices/settingsPopup.js","redux/slices/removeEventPopup.js","redux/slices/subjects.js","redux/slices/groups.js","redux/slices/types.js","redux/slices/forceEventsRefresh.js","redux/slices/chosenEvent.js","redux/store.js","components/other/Header/Header.jsx","components/other/Button/Button.jsx","components/other/Title/Title.jsx","components/user/MonthPagination/MonthPagination.jsx","components/other/LoginButton/LoginButton.jsx","components/other/Toolbar/Toolbar.jsx","components/user/DayNames/DayNames.jsx","components/user/DayFlags/DayFlags.jsx","components/user/DayFooter/DayFooter.jsx","components/user/Day/Day.jsx","components/user/Days/Days.jsx","components/user/Calendar/Calendar.jsx","components/other/ItemAdder/ItemAdder.jsx","components/other/ItemList/ItemList.jsx","components/user/EventCard/EventCard.jsx","components/user/DailyEvents/DailyEvents.jsx","components/admin/CourseInfo/CourseInfo.jsx","components/other/ItemBar/ItemBar.jsx","components/admin/AdminPanel/AdminPanel.jsx","components/user/Modal/Modal.jsx","components/user/Modals/AddEventModal.jsx","components/user/Modals/RemoveEventModal.jsx","components/API/UserBackgroundAPI.js","components/user/Modals/EditEventModal.jsx","components/user/Modals/SettingsModal.jsx","components/API/AdminBackgroundAPI.js","components/other/Panel/Panel.jsx","App.js","index.js"],"names":["dateReducer","state","action","type","payload","groupReducer","addEventPopupReducer","forceEventsRefreshReducer","deleteEventPopupReducer","chosenEventReducer","chosenThemeReducer","editEventPopupReducer","allEventsReducer","dayEventsReducer","eventTypesReducer","subjectsReducer","optionsPopupReducer","groupsReducer","combineReducers","allEvents","dayEvents","eventTypes","subjects","chosenDate","chosenGroup","addEventPopup","deleteEventPopup","editEventPopup","forceEventsRefresh","chosenEvent","chosenTheme","optionsPopup","groups","monthOffsetSlice","createSlice","name","initialState","value","reducers","incrementMonthOffset","decrementMonthOffset","setMonthOffset","actions","chosenDateSlice","dayjs","format","setChoosenDate","dailyEventsSlice","setDailyEvents","chosenGroupIDSlice","setChosenGroupID","allEventsSlice","setAllEvents","addEventPopupSlice","setAddEventPopup","editEventPopupSlice","setEditEventPopup","settingsPopupSlice","setSettingsPopup","removeEventPopupSlice","setRemoveEventPopup","subjectsSlice","setSubjects","groupsSlice","setGroups","typesSlice","setTypes","forceEventsRefreshSlice","chosenEventSlice","setChosenEvent","persistConfig","key","storage","stateReconciler","autoMergeLevel1","whitelist","monthOffset","monthOffsetReducer","chosenDateReducer","chosenGroupID","chosenGroupIDReducer","dailyEvents","dailyEventsReducer","removeEventPopup","removeEventPopupReducer","settingsPopup","settingsPopupReducer","types","typesReducer","_persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Header","props","className","children","Button","handleClick","modifier","onClick","Title","MonthPagination","dispatch","useDispatch","useSelector","parseInt","LoginButton","isAdmin","console","log","title","Toolbar","DayNames","DayFlags","handleResize","events","flags","useRef","useEffect","calculateOtherCount","window","addEventListener","els","Array","from","current","counter","i","length","offsetTop","ref","map","event","subjectShortName","DayFooter","day","otherCount","Day","date","active","useState","setOtherCount","selected","setSelected","choosenDate","classModifier","filter","Days","daysOfWeek","days","setDays","initializeMonthDays","desiredDay","add","daysTemp","startDayOfMonth","startOf","startingDay","subtract","isDayInCurrentMonth","thisMonth","Calendar","ItemAdder","ItemList","items","renderComponent","item","EventCard","subjectLongName","id","time","description","DailyEvents","CourseInfo","course","university","ItemBar","handleEdit","handleDelete","AdminPanel","shortName","groupName","Modal","ReactDOM","createPortal","document","querySelector","AddEventModal","currentlyChosenGroup","useParams","subjectID","setSubjectID","groupID","setGroupID","groupIDs","setGroupIDs","typeID","setTypeID","setTime","setDescription","password","setPassword","addEvent","a","requestOptions","method","headers","body","JSON","stringify","yearCourseId","groupIds","eventTypeId","mode","fetch","ok","htmlFor","onChange","e","target","subject","groupsTemp","group","push","formAllGroupArray","groupNumber","min","max","rows","cols","placeholder","preventDefault","RemoveEventModal","chosenEventID","deletePressed","UserBackgroundAPI","dataDownloaded","setDataDownloaded","eventsLocal","setEventsLocal","typesLocal","setTypesLocal","subjectsLocal","setSubjectsLocal","downloadData","buildEvents","buildDayEvents","getResource","extensionURL","URL","response","json","data","result","getEvents","getSubjects","getTypes","getGroups","checkGroupCorectness","eventsConnected","eventData","getPropertyFromObjectByID","subjectId","array","searchedID","searchedProperty","object","EditEventModal","setDate","setInitialEventData","removeEvent","SettingsModal","choosenGroupID","AdminBackgroundAPI","groupsLocal","setGroupsLocal","Panel","addEventsPopup","removeEventsPopup","exact","path","App","render","StrictMode","basename","loading","getElementById"],"mappings":"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","file":"static/js/main.6e467d82.chunk.js","sourcesContent":["const dateReducer = (state = \"2020-11-01\", action) => {\r\n    switch(action.type) {\r\n        case 'SET_DATE':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dateReducer;","const groupReducer = (state = 1, action) => {\r\n    switch (action.type) {\r\n        case 'SET_GROUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default groupReducer;\r\n","const addEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_ADD_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default addEventPopupReducer;\r\n","const forceEventsRefreshReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'REFRESH':\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default forceEventsRefreshReducer;\r\n","const deleteEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_DELETE_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default deleteEventPopupReducer;\r\n","const chosenEventReducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CHOSEN_EVENT':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default chosenEventReducer;\r\n","const chosenThemeReducer = (state = 'dark', action) => {\r\n    switch (action.type) {\r\n        case 'SET_CHOSEN_THEME':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default chosenThemeReducer;\r\n","const editEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_EDIT_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default editEventPopupReducer;\r\n","const allEventsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_ALL_EVENTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default allEventsReducer;\r\n","const dayEventsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_DAY_EVENTS':\r\n            return [...action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dayEventsReducer;\r\n","const eventTypesReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_EVENT_TYPES':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default eventTypesReducer;\r\n","const subjectsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_SUBJECTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default subjectsReducer;\r\n","const optionsPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_OPTIONS_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default optionsPopupReducer;\r\n","const groupsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_GROUPS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default groupsReducer;\r\n","import dateReducer from './chosenDate';\r\nimport groupReducer from './chosenGroup';\r\nimport { combineReducers } from 'redux';\r\nimport addEventPopupReducer from './addEventPopup';\r\nimport forceEventsRefreshReducer from './forceEventsRefresh';\r\nimport deleteEventPopupReducer from './deleteEventPopup';\r\nimport chosenEventReducer from './chosenEvent';\r\nimport chosenThemeReducer from './chosenTheme';\r\nimport editEventPopupReducer from './editEventPopup';\r\nimport allEventsReducer from './allEventsReducer';\r\nimport dayEventsReducer from './dayEventsReducer';\r\nimport eventTypesReducer from './eventTypesReducer';\r\nimport subjectsReducer from './subjectsReducer';\r\nimport optionsPopupReducer from './optionsPopup';\r\nimport groupsReducer from './groupsReducer';\r\n\r\nconst allReducers = combineReducers({\r\n    allEvents: allEventsReducer,\r\n    dayEvents: dayEventsReducer,\r\n    eventTypes: eventTypesReducer,\r\n    subjects: subjectsReducer,\r\n    chosenDate: dateReducer,\r\n    chosenGroup: groupReducer,\r\n    addEventPopup: addEventPopupReducer,\r\n    deleteEventPopup: deleteEventPopupReducer,\r\n    editEventPopup: editEventPopupReducer,\r\n    forceEventsRefresh: forceEventsRefreshReducer,\r\n    chosenEvent: chosenEventReducer,\r\n    chosenTheme: chosenThemeReducer,\r\n    optionsPopup: optionsPopupReducer,\r\n    groups: groupsReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const monthOffsetSlice = createSlice({\r\n  name: 'monthOffset',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    incrementMonthOffset: (state) => {\r\n      state.value += 1;\r\n    },\r\n    decrementMonthOffset: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    setMonthOffset: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  incrementMonthOffset: incrementMonthOffset,\r\n  decrementMonthOffset: decrementMonthOffset,\r\n  setMonthOffset: setMonthOffset,\r\n} = monthOffsetSlice.actions;\r\n\r\nexport default monthOffsetSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport dayjs from 'dayjs';\r\n\r\nexport const chosenDateSlice = createSlice({\r\n    name: 'chosenDate',\r\n    initialState: {\r\n        value: dayjs().format('YYYY-MM-DD'),\r\n    },\r\n    reducers: {\r\n        setChoosenDate: (state, action) => {\r\n            state.value = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setChoosenDate: setChoosenDate } = chosenDateSlice.actions;\r\n\r\nexport default chosenDateSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const dailyEventsSlice = createSlice({\r\n  name: 'dailyEvents',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setDailyEvents: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setDailyEvents: setDailyEvents } = dailyEventsSlice.actions;\r\n\r\nexport default dailyEventsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const chosenGroupIDSlice = createSlice({\r\n  name: 'chosenGroupID',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    setChosenGroupID: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setChosenGroupID: setChosenGroupID } = chosenGroupIDSlice.actions;\r\n\r\nexport default chosenGroupIDSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const allEventsSlice = createSlice({\r\n  name: 'allEvents',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setAllEvents: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAllEvents: setAllEvents } = allEventsSlice.actions;\r\n\r\nexport default allEventsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const addEventPopupSlice = createSlice({\r\n  name: 'addEventPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setAddEventPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAddEventPopup: setAddEventPopup } = addEventPopupSlice.actions;\r\n\r\nexport default addEventPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const editEventPopupSlice = createSlice({\r\n  name: 'editEventPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setEditEventPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setEditEventPopup: setEditEventPopup } = editEventPopupSlice.actions;\r\n\r\nexport default editEventPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const settingsPopupSlice = createSlice({\r\n  name: 'settingsPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setSettingsPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setSettingsPopup: setSettingsPopup } = settingsPopupSlice.actions;\r\n\r\nexport default settingsPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const removeEventPopupSlice = createSlice({\r\n  name: 'removeEventPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setRemoveEventPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setRemoveEventPopup: setRemoveEventPopup } = removeEventPopupSlice.actions;\r\n\r\nexport default removeEventPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const subjectsSlice = createSlice({\r\n  name: 'subjects',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setSubjects: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setSubjects: setSubjects } = subjectsSlice.actions;\r\n\r\nexport default subjectsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const groupsSlice = createSlice({\r\n  name: 'groups',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setGroups: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setGroups: setGroups } = groupsSlice.actions;\r\n\r\nexport default groupsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const typesSlice = createSlice({\r\n  name: 'types',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setTypes: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setTypes: setTypes } = typesSlice.actions;\r\n\r\nexport default typesSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const forceEventsRefreshSlice = createSlice({\r\n  name: 'forceEventsRefresh',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    forceEventsRefresh: (state, action) => {\r\n      state.value = !state.value;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { forceEventsRefresh: forceEventsRefresh } = forceEventsRefreshSlice.actions;\r\n\r\nexport default forceEventsRefreshSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport dayjs from 'dayjs';\r\n\r\nexport const chosenEventSlice = createSlice({\r\n  name: 'chosenEvent',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    setChosenEvent: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setChosenEvent: setChosenEvent } = chosenEventSlice.actions;\r\n\r\nexport default chosenEventSlice.reducer;\r\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistReducer,\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'reduxjs-toolkit-persist';\r\nimport storage from 'reduxjs-toolkit-persist/lib/storage';\r\nimport autoMergeLevel1 from 'reduxjs-toolkit-persist/lib/stateReconciler/autoMergeLevel1';\r\n\r\nimport monthOffsetReducer from './slices/monthOffsetSlice';\r\nimport chosenDateReducer from './slices/chosenDateSlice';\r\nimport dailyEventsReducer from './slices/dailyEvents';\r\nimport chosenGroupIDReducer from './slices/chosenGroupIDSlice';\r\nimport allEventsReducer from './slices/allEvents';\r\nimport addEventPopupReducer from './slices/addEventPopup';\r\nimport editEventPopupReducer from './slices/editEventPopup';\r\nimport settingsPopupReducer from './slices/settingsPopup';\r\nimport removeEventPopupReducer from './slices/removeEventPopup';\r\nimport subjectsReducer from './slices/subjects';\r\nimport groupsReducer from './slices/groups';\r\nimport typesReducer from './slices/types';\r\nimport forceEventsRefreshReducer from './slices/forceEventsRefresh';\r\nimport chosenEventReducer from './slices/chosenEvent';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: storage,\r\n  stateReconciler: autoMergeLevel1,\r\n  whitelist: ['chosenGroupID'],\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  monthOffset: monthOffsetReducer,\r\n  chosenDate: chosenDateReducer,\r\n  chosenGroupID: chosenGroupIDReducer,\r\n  dailyEvents: dailyEventsReducer,\r\n  allEvents: allEventsReducer,\r\n\r\n  addEventPopup: addEventPopupReducer,\r\n  removeEventPopup: removeEventPopupReducer,\r\n  editEventPopup: editEventPopupReducer,\r\n  settingsPopup: settingsPopupReducer,\r\n\r\n  subjects: subjectsReducer,\r\n  groups: groupsReducer,\r\n  types: typesReducer,\r\n  forceEventsRefresh: forceEventsRefreshReducer,\r\n  chosenEvent: chosenEventReducer,\r\n});\r\nconst _persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nconst store = configureStore({\r\n  reducer: _persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      /* ignore persistance actions */\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import './Header.scss';\r\n\r\nconst Header = (props) => <header className='header'>{props.children}</header>;\r\n\r\nexport default Header;\r\n","import './Button.scss';\r\n\r\nconst Button = ({ handleClick, children, modifier = '' }) => {\r\n    return (\r\n        <button className={`button ${modifier}`} onClick={handleClick}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import './Title.scss';\r\n\r\nconst Title = (props) => <h1 className='title'>{props.children}</h1>;\r\n\r\nexport default Title;\r\n","import dayjs from 'dayjs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { decrementMonthOffset, incrementMonthOffset } from '../../../redux/slices/monthOffsetSlice';\r\nimport Button from '../../other/Button/Button';\r\nimport Title from '../../other/Title/Title';\r\nimport './MonthPagination.scss';\r\n\r\nconst MonthPagination = () => {\r\n  const monthNames = [\r\n    'Styczeń',\r\n    'Luty',\r\n    'Marzec',\r\n    'Kwiecień',\r\n    'Maj',\r\n    'Czerwiec',\r\n    'Lipiec',\r\n    'Sierpień',\r\n    'Wrzesień',\r\n    'Październik',\r\n    'Listopad',\r\n    'Grudzień',\r\n  ];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const monthOffset = useSelector((state) => state.monthOffset.value);\r\n\r\n  return (\r\n    <div className='monthPagination'>\r\n      <Button handleClick={() => dispatch(decrementMonthOffset())}>\r\n        <span className='material-icons'>chevron_left</span>\r\n      </Button>\r\n      <Title>{monthNames[parseInt(dayjs().format('MM')) + monthOffset - 1]}</Title>\r\n      <Button handleClick={() => dispatch(incrementMonthOffset())}>\r\n        <span className='material-icons'>chevron_right</span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthPagination;\r\n","import Button from '../Button/Button';\r\n\r\nconst LoginButton = ({ isAdmin }) => {\r\n  const showLoginPanel = () => {\r\n    console.log('Showing Login Panel');\r\n  };\r\n\r\n  if (!isAdmin) {\r\n    return (\r\n      <Button\r\n        handleClick={showLoginPanel}\r\n        modifier='button--transparent button--verified'\r\n      >\r\n        <span title='Zalogowano jako Administrator' className='material-icons'>\r\n          check_circle_outline\r\n        </span>\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Button>\r\n      <span className='material-icons'>person</span>\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default LoginButton;\r\n","import { useDispatch } from 'react-redux';\r\nimport { setSettingsPopup } from '../../../redux/slices/settingsPopup';\r\nimport Button from '../Button/Button';\r\nimport LoginButton from '../LoginButton/LoginButton';\r\nimport './Toolbar.scss';\r\n\r\nconst Toolbar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const settingsClicked = () => {\r\n    dispatch(setSettingsPopup(true));\r\n  };\r\n\r\n  return (\r\n    <div className='toolbar'>\r\n      <Button handleClick={() => settingsClicked()}>\r\n        <span title='Ustawienia' className='material-icons'>\r\n          settings\r\n        </span>\r\n      </Button>\r\n      <Button>\r\n        <span title='Powiadomienia' className='material-icons'>\r\n          notifications\r\n        </span>\r\n      </Button>\r\n      <LoginButton />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import './DayNames.scss';\r\n\r\nconst DayNames = () => (\r\n  <div className='calendar__dayNames'>\r\n    <div>pon.</div>\r\n    <div>wt.</div>\r\n    <div>śr.</div>\r\n    <div>czw.</div>\r\n    <div>pt.</div>\r\n    <div>sb.</div>\r\n    <div>ndz.</div>\r\n  </div>\r\n);\r\n\r\nexport default DayNames;\r\n","import './DayFlags.scss';\r\nimport { useRef, useEffect } from 'react';\r\n\r\nconst DayFlags = ({ handleResize, events }) => {\r\n    const flags = useRef(null);\r\n\r\n    useEffect(() => {\r\n        handleResize(calculateOtherCount());\r\n    }, [handleResize]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => {\r\n            handleResize(calculateOtherCount);\r\n        });\r\n    }, [handleResize]);\r\n\r\n    const calculateOtherCount = () => {\r\n        const els = Array.from(flags.current.children);\r\n        let counter = 1;\r\n\r\n        for (let i = 1; i < els.length; i++) {\r\n            if (els[i].offsetTop <= els[0].offsetTop) {\r\n                break;\r\n            }\r\n\r\n            counter++;\r\n        }\r\n\r\n        return els.length - counter;\r\n    };\r\n\r\n    return (\r\n        <div ref={flags} className='day__flags'>\r\n            {events.length > 0 &&\r\n                events.map((event) => (\r\n                    <div className={`day__flag day__flag--${event.type}`}>{event.subjectShortName}</div>\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DayFlags;\r\n","import './DayFooter.scss';\r\n\r\nconst DayFooter = ({ day, otherCount }) => (\r\n  <div className='day__footer'>\r\n    <div className={`day__moreFlag ${otherCount > 0 ? '' : 'hidden'}`}>\r\n      {otherCount}+\r\n    </div>\r\n    <div className='day__number'>{day}</div>\r\n  </div>\r\n);\r\n\r\nexport default DayFooter;\r\n","import { useEffect, useState, useRef } from 'react';\r\nimport dayjs from 'dayjs';\r\n\r\nimport DayFlags from '../DayFlags/DayFlags';\r\nimport DayFooter from '../DayFooter/DayFooter';\r\nimport './Day.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setChoosenDate } from '../../../redux/slices/chosenDateSlice';\r\n\r\nconst Day = ({ date, active }) => {\r\n    const dispatch = useDispatch();\r\n    const ref = useRef();\r\n\r\n    const [otherCount, setOtherCount] = useState(0);\r\n    const [selected, setSelected] = useState(false);\r\n\r\n    const choosenDate = useSelector((state) => state.chosenDate.value);\r\n    const allEvents = useSelector((state) => state.allEvents.value);\r\n\r\n    useEffect(() => {\r\n        if (choosenDate == date) {\r\n            setSelected(true);\r\n        } else {\r\n            setSelected(false);\r\n        }\r\n    }, [choosenDate]);\r\n\r\n    const classModifier = () => {\r\n        if (!active) {\r\n            return 'day--inactive';\r\n        }\r\n    };\r\n\r\n    const handleClick = () => {\r\n        dispatch(setChoosenDate(date));\r\n    };\r\n\r\n    const eventsForThisDay = () => {\r\n        return allEvents.filter((event) => event.date == date);\r\n    };\r\n\r\n    return (\r\n        <div onClick={handleClick} ref={ref} className={`day ${classModifier()} ${selected ? 'day--selected' : ''}`}>\r\n            <DayFlags events={eventsForThisDay()} handleResize={setOtherCount} />\r\n            <DayFooter otherCount={otherCount} day={dayjs(date).format('DD')} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Day;\r\n","import React, { useEffect, useState } from 'react';\r\nimport dayjs from 'dayjs';\r\n\r\nimport Day from '../Day/Day';\r\nimport './Days.scss';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Days = () => {\r\n    const daysOfWeek = [7, 1, 2, 3, 4, 5, 6];\r\n\r\n    const monthOffset = useSelector((state) => state.monthOffset.value);\r\n\r\n    const [days, setDays] = useState([]);\r\n\r\n    useEffect(() => {\r\n        initializeMonthDays();\r\n    }, [monthOffset]);\r\n\r\n    const initializeMonthDays = () => {\r\n        const today = dayjs();\r\n        const desiredDay = today.add(monthOffset, 'month');\r\n        const daysTemp = new Array(42);\r\n        const startDayOfMonth = daysOfWeek[desiredDay.startOf('month').day()]; // 1 - monday, 7 sunday\r\n\r\n        const startingDay = desiredDay.startOf('month').subtract(startDayOfMonth - 1, 'day');\r\n\r\n        for (let i = 0; i < 42; i++) {\r\n            daysTemp[i] = startingDay.add(i, 'day').format('YYYY-MM-DD');\r\n        }\r\n\r\n        setDays(daysTemp);\r\n    };\r\n\r\n    const isDayInCurrentMonth = (day) => {\r\n        const today = dayjs();\r\n        const thisMonth = today.add(monthOffset, 'month');\r\n        return dayjs(day).format('MM') === thisMonth.format('MM');\r\n    };\r\n\r\n    return (\r\n        <div className='calendar__days'>\r\n            {days.map((day) => (\r\n                <Day key={day} date={day} active={isDayInCurrentMonth(day)} />\r\n            ))}\r\n\r\n            {/* <Day day='2' modifier='day--inactive' />\r\n            <Day day='3' modifier='day--inactive' />\r\n            <Day day='4' modifier='day--inactive' />\r\n            <Day day='5' modifier='day--inactive' />\r\n            <Day day='6' modifier='day--weekend' />\r\n            <Day day='7' modifier='day--weekend' />\r\n            <Day day='8' />\r\n            <Day day='9' />\r\n            <Day day='10' />\r\n            <Day day='11' />\r\n            <Day day='12' />\r\n            <Day day='13' modifier='day--weekend' />\r\n            <Day day='14' modifier='day--weekend' />\r\n            <Day day='15' />\r\n            <Day day='16' />\r\n            <Day day='17' />\r\n            <Day day='18' />\r\n            <Day day='19' />\r\n            <Day day='20' modifier='day--weekend' />\r\n            <Day day='21' modifier='day--weekend' />\r\n            <Day day='22' />\r\n            <Day day='23' />\r\n            <Day day='24' />\r\n            <Day day='25' />\r\n            <Day day='26' />\r\n            <Day day='27' modifier='day--weekend' />\r\n            <Day day='28' modifier='day--weekend' />\r\n            <Day day='29' />\r\n            <Day day='30' />\r\n            <Day day='31' />\r\n            <Day day='1' />\r\n            <Day day='2' />\r\n            <Day day='3' modifier='day--weekend' />\r\n            <Day day='4' modifier='day--weekend' />\r\n            <Day day='5' />\r\n            <Day day='6' modifier='day--inactive' />\r\n            <Day day='7' modifier='day--inactive' />\r\n            <Day day='8' modifier='day--inactive' />\r\n            <Day day='9' modifier='day--inactive' />\r\n            <Day day='10' modifier='day--inactive' />\r\n            <Day day='11' modifier='day--inactive' /> */}\r\n        </div>\r\n    );\r\n};\r\nexport default Days;\r\n","import DayNames from '../DayNames/DayNames';\r\nimport Days from '../Days/Days';\r\nimport './Calendar.scss';\r\n\r\nconst Calendar = () => (\r\n  <div className='calendar'>\r\n    <DayNames />\r\n    <Days />\r\n  </div>\r\n);\r\n\r\nexport default Calendar;\r\n","import './ItemAdder.scss';\r\n\r\nconst ItemAdder = ({ children, handleClick }) => (\r\n  <div className='itemAdder' onClick={handleClick}>\r\n    <span className='material-icons'>add</span>\r\n    <span className='itemAdder__text'>{children}</span>\r\n  </div>\r\n);\r\n\r\nexport default ItemAdder;\r\n","import { useDispatch } from 'react-redux';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport ItemAdder from '../ItemAdder/ItemAdder';\r\nimport './ItemList.scss';\r\n\r\nconst ItemList = ({ items, name, renderComponent }) => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className='itemList'>\r\n      <ItemAdder handleClick={() => dispatch(setAddEventPopup(true))}>Dodaj {name}</ItemAdder>\r\n      <div className='itemList__content'>{items.length > 0 && items.map((item) => renderComponent(item))}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemList;\r\n","import Button from '../../other/Button/Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport './EventCard.scss';\r\nimport { setRemoveEventPopup } from '../../../redux/slices/removeEventPopup';\r\nimport { setChosenEvent } from '../../../redux/slices/chosenEvent';\r\nimport { setEditEventPopup } from '../../../redux/slices/editEventPopup';\r\n\r\nconst EventCard = ({ event }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const editClicked = () => {\r\n    dispatch(setChosenEvent(event.id));\r\n    dispatch(setEditEventPopup(true));\r\n  };\r\n\r\n  const removeClicked = () => {\r\n    dispatch(setChosenEvent(event.id));\r\n    dispatch(setRemoveEventPopup(true));\r\n  };\r\n\r\n  return (\r\n    <div className='eventCard'>\r\n      <div className='eventCard__topbar eventCard__topbar--blue'>\r\n        <h3 className='eventCard__title'>{event.subjectLongName}</h3>\r\n        <div className='eventCard__buttons'>\r\n          <Button modifier='button--transparent button--edit button--small' handleClick={() => editClicked()}>\r\n            <span className='material-icons'>edit</span>\r\n          </Button>\r\n          <Button modifier='button--transparent button--delete button--small' handleClick={() => removeClicked()}>\r\n            <span className='material-icons'>delete</span>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className='eventCard__panel'>\r\n        <div className='eventCard__tags'>\r\n          <div className='eventCard__tag'>\r\n            <span className='material-icons'>label</span> {event.type}\r\n          </div>\r\n          <div className='eventCard__tag'>\r\n            <span className='material-icons'>schedule</span>\r\n            {event.time}\r\n          </div>\r\n          <div className='eventCard__tag'>\r\n            <span className='material-icons'>info</span>Informacja\r\n          </div>\r\n        </div>\r\n        <div className='eventCard__description'>{event.description}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventCard;\r\n","import { useSelector } from 'react-redux';\r\nimport ItemList from '../../other/ItemList/ItemList';\r\nimport EventCard from '../EventCard/EventCard';\r\nimport './DailyEvents.scss';\r\n\r\nconst objs = [\r\n    { name: 'Wytwarzanie Aplikacji Internetowych' },\r\n    { name: 'Grafika Komputerowa' },\r\n    { name: 'Architektura Komputerów' },\r\n    { name: 'Fizyka Współczesna' },\r\n    { name: 'Metody Numeryczne' },\r\n    { name: 'Metody Probabilistyczne' },\r\n    { name: 'Matematyka Elementarna' },\r\n    { name: 'Systemy Wbudowane i Mikroprocesory' },\r\n    { name: 'Heja' },\r\n    { name: 'Okej' },\r\n    { name: 'Siema' },\r\n];\r\n\r\nconst DailyEvents = () => {\r\n    const renderEvent = (event) => <EventCard key={event.id} event={event} />;\r\n    const dailyEvents = useSelector((state) => state.dailyEvents.value);\r\n\r\n    return (\r\n        <div className='dailyEvents'>\r\n            <ItemList name='Wydarzenie' items={dailyEvents} renderComponent={renderEvent} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DailyEvents;\r\n","import './CourseInfo.scss';\r\n\r\nconst CourseInfo = ({ course, university }) => (\r\n  <div className='courseInfo'>\r\n    <h3 className='courseInfo__subtitle'>{university}</h3>\r\n    <h2 className='courseInfo__title'>{course}</h2>\r\n  </div>\r\n);\r\n\r\nexport default CourseInfo;\r\n","import { useDispatch } from 'react-redux';\r\nimport Button from '../Button/Button';\r\nimport './ItemBar.scss';\r\n\r\nconst ItemBar = ({ children, handleEdit, handleDelete }) => {\r\n  const editPressed = () => {\r\n    handleEdit();\r\n  };\r\n\r\n  const deletePressed = () => {\r\n    handleDelete();\r\n  };\r\n\r\n  return (\r\n    <div className='itemBar'>\r\n      <h3 className='itemBar__title'>{children}</h3>\r\n      <div className='itemBar__buttons'>\r\n        <Button modifier='button--transparent button--edit' handleClick={() => editPressed()}>\r\n          <span className='material-icons'>edit</span>\r\n        </Button>\r\n        <Button modifier='button--transparent button--delete' handleClick={() => deletePressed()}>\r\n          <span className='material-icons'>delete</span>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemBar;\r\n","import ItemList from '../../other/ItemList/ItemList';\r\nimport CourseInfo from '../CourseInfo/CourseInfo';\r\nimport ItemBar from '../../other/ItemBar/ItemBar';\r\nimport './AdminPanel.scss';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AdminPanel = () => {\r\n  const subjects = useSelector((state) => state.subjects.value);\r\n  const groups = useSelector((state) => state.groups.value);\r\n\r\n  const renderBarCourses = ({ name, shortName }) => (\r\n    <ItemBar key={name} handleEdit={() => console.log('edit course')} handleDelete={() => console.log('delete course')}>\r\n      {name} ({shortName})\r\n    </ItemBar>\r\n  );\r\n\r\n  const renderBarGroups = ({ groupName }) => (\r\n    <ItemBar\r\n      key={groupName}\r\n      handleEdit={() => console.log('edit group')}\r\n      handleDelete={() => console.log('delete group')}\r\n    >\r\n      {groupName}\r\n    </ItemBar>\r\n  );\r\n\r\n  return (\r\n    <div className='adminPanel'>\r\n      <div className='scrollable'>\r\n        <ItemList renderComponent={renderBarCourses} items={subjects} name='Przedmiot' />\r\n      </div>\r\n      <div className='scrollable'>\r\n        <ItemList renderComponent={renderBarGroups} items={groups} name='Grupę' />\r\n      </div>\r\n      <CourseInfo course='Informatyka' university='Politechnika Gdańska' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import ReactDOM from 'react-dom';\r\nimport './Modal.scss';\r\n\r\nconst Modal = ({ children }) => {\r\n  return ReactDOM.createPortal(\r\n    <div className='modal__background'>\r\n      <div className='modal__body'>{children}</div>\r\n    </div>,\r\n    document.querySelector('#modal')\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport Modal from '../../user/Modal/Modal';\r\n\r\nconst AddEventModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const currentlyChosenGroup = useSelector((state) => state.chosenGroupID.value);\r\n  const subjects = useSelector((state) => state.subjects.value);\r\n  const groups = useSelector((state) => state.groups.value);\r\n  const types = useSelector((state) => state.types.value);\r\n  const date = useSelector((state) => state.chosenDate.value);\r\n\r\n  const { id } = useParams();\r\n  const [subjectID, setSubjectID] = useState(0);\r\n  const [groupID, setGroupID] = useState(0);\r\n  const [groupIDs, setGroupIDs] = useState([]);\r\n  const [typeID, setTypeID] = useState(0);\r\n  const [time, setTime] = useState('12:00');\r\n  const [description, setDescription] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    setTypeID(types[0].id);\r\n    setSubjectID(subjects[0].id);\r\n    setGroupID(currentlyChosenGroup);\r\n    setGroupIDs([currentlyChosenGroup]);\r\n  }, []);\r\n\r\n  const addEvent = async () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        subjectID: subjectID,\r\n        yearCourseId: id,\r\n        name: 'temporary name',\r\n        groupIds: groupIDs,\r\n        date: date + 'T' + time,\r\n        description: description,\r\n        eventTypeId: typeID,\r\n        password: password,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(\r\n      `https://kiedy-kolos-backend.azurewebsites.net/yearCourses/${id}/Events`,\r\n      requestOptions\r\n    );\r\n\r\n    if (response.ok) {\r\n      dispatch(setAddEventPopup(false));\r\n      dispatch(forceEventsRefresh());\r\n    }\r\n  };\r\n\r\n  const formAllGroupArray = () => {\r\n    let groupsTemp = [];\r\n    for (let group of groups) {\r\n      groupsTemp.push(group.id);\r\n    }\r\n\r\n    return groupsTemp;\r\n  };\r\n\r\n  const updateSubjectID = (e) => {\r\n    setSubjectID(e.target.value);\r\n  };\r\n\r\n  const updateGroupID = (e) => {\r\n    setGroupID(e.target.value);\r\n\r\n    if (e.target.value == -1) {\r\n      setGroupIDs(formAllGroupArray());\r\n    } else {\r\n      setGroupIDs([e.target.value]);\r\n    }\r\n  };\r\n\r\n  const updateTypeID = (e) => {\r\n    setTypeID(e.target.value);\r\n  };\r\n\r\n  const updateTime = (e) => {\r\n    setTime(e.target.value);\r\n  };\r\n\r\n  const updateDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleAcceptClick = (e) => {\r\n    e.preventDefault();\r\n    addEvent();\r\n  };\r\n\r\n  const handleCloseClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setAddEventPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Dodawanie wydarzenia</h2>\r\n      <label htmlFor='subject'>Przedmiot</label>\r\n      <br />\r\n      <select className='event-adder__input' id='subject' value={subjectID} onChange={updateSubjectID}>\r\n        {subjects.map((subject) => (\r\n          <option key={subject.id} value={subject.id}>\r\n            {subject.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='event-adder__label' htmlFor='group'>\r\n        Grupa\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='group' value={groupID} onChange={updateGroupID}>\r\n        <option key={0} value={-1}>\r\n          Wszystkie\r\n        </option>\r\n        {groups.map((group) => (\r\n          <option key={group.id} value={group.id}>\r\n            {group.groupNumber}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='event-adder__label' htmlFor='type'>\r\n        Typ\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='type' value={typeID} onChange={updateTypeID}>\r\n        {types.map((type) => (\r\n          <option key={type.id} value={type.id}>\r\n            {type.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='edition__label' htmlFor='time'>\r\n        Godzina\r\n      </label>\r\n      <br />\r\n      <input\r\n        type='time'\r\n        id='time'\r\n        name='time'\r\n        min='07:00'\r\n        value='16:00:00'\r\n        max='21:00'\r\n        value={time}\r\n        onChange={updateTime}\r\n      ></input>\r\n      <br />\r\n      <label className='edition__label' htmlFor='description'>\r\n        Opis\r\n      </label>\r\n      <br />\r\n      <textarea\r\n        id='description'\r\n        name='description'\r\n        rows='5'\r\n        cols='30'\r\n        placeholder='Tu wpisz opis...'\r\n        value={description}\r\n        onChange={updateDescription}\r\n      ></textarea>\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Hasło\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Hasło' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n        Anuluj\r\n      </button>\r\n      .......................\r\n      <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n        Utwórz wydarzenie\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddEventModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport { setRemoveEventPopup } from '../../../redux/slices/removeEventPopup';\r\nimport Modal from '../../user/Modal/Modal';\r\n\r\nconst RemoveEventModal = () => {\r\n  const dispatch = useDispatch();\r\n  const chosenEventID = useSelector((state) => state.chosenEvent.value);\r\n\r\n  const { id } = useParams();\r\n\r\n  const [password, setPassword] = useState('');\r\n\r\n  const deletePressed = async () => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(\r\n      `https://kiedy-kolos-backend.azurewebsites.net/yearCourses/${id}/Events/${chosenEventID}`,\r\n      requestOptions\r\n    );\r\n\r\n    if (response.ok) {\r\n      dispatch(setRemoveEventPopup(false));\r\n      dispatch(forceEventsRefresh());\r\n    }\r\n  };\r\n  const cancelPressed = () => {\r\n    dispatch(setRemoveEventPopup(false));\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Usuwanie wydarzenia {chosenEventID}</h2>\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Hasło\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Hasło' onChange={updatePassword}></input>\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={cancelPressed}>\r\n        Anuluj\r\n      </button>\r\n      .......................\r\n      <button className='event-adder__button--accept' onClick={deletePressed}>\r\n        Usuń\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveEventModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport dayjs from 'dayjs';\r\nimport { setDailyEvents } from '../../redux/slices/dailyEvents';\r\nimport { setAllEvents } from '../../redux/slices/allEvents';\r\nimport { setSubjects } from '../../redux/slices/subjects';\r\nimport { setGroups } from '../../redux/slices/groups';\r\nimport { setTypes } from '../../redux/slices/types';\r\nimport { setChosenGroupID } from '../../redux/slices/chosenGroupIDSlice';\r\n\r\nconst UserBackgroundAPI = () => {\r\n  const dispatch = useDispatch();\r\n  const baseURL = 'https://kiedy-kolos-backend.azurewebsites.net/';\r\n\r\n  const forceEventsRefresh = useSelector((state) => state.forceEventsRefresh.value);\r\n  const chosenDate = useSelector((state) => state.chosenDate.value);\r\n  const chosenGroup = useSelector((state) => state.chosenGroupID.value);\r\n\r\n  const [dataDownloaded, setDataDownloaded] = useState(false);\r\n  const [eventsLocal, setEventsLocal] = useState([]);\r\n  const [typesLocal, setTypesLocal] = useState([]);\r\n  const [subjectsLocal, setSubjectsLocal] = useState([]);\r\n  const [groupsLocal, setGroupsLocal] = useState([]);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    console.log('Downloading data...');\r\n\r\n    downloadData();\r\n  }, [forceEventsRefresh, chosenGroup]);\r\n\r\n  useEffect(() => {\r\n    buildEvents();\r\n    buildDayEvents(chosenDate);\r\n  }, [dataDownloaded]);\r\n\r\n  useEffect(() => {\r\n    buildDayEvents(chosenDate);\r\n  }, [chosenDate]);\r\n\r\n  const getResource = async (extensionURL) => {\r\n    const URL = baseURL + extensionURL;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n    return data.result;\r\n  };\r\n\r\n  const getEvents = async () => {\r\n    const data = await getResource(`yearCourses/${id}/groups/${chosenGroup}/events`);\r\n    return data;\r\n  };\r\n\r\n  const getSubjects = async () => {\r\n    const data = await getResource(`yearCourses/${id}/subjects`);\r\n    dispatch(setSubjects(data));\r\n    return data;\r\n  };\r\n\r\n  const getTypes = async () => {\r\n    const data = await getResource(`eventTypes`);\r\n    dispatch(setTypes(data));\r\n    return data;\r\n  };\r\n\r\n  const getGroups = async () => {\r\n    const data = await getResource(`yearCourses/${id}/groups`);\r\n    dispatch(setGroups(data));\r\n    return data;\r\n  };\r\n\r\n  const downloadData = async () => {\r\n    setEventsLocal(await getEvents());\r\n    setSubjectsLocal(await getSubjects());\r\n    setTypesLocal(await getTypes());\r\n\r\n    checkGroupCorectness(await getGroups());\r\n  };\r\n\r\n  const checkGroupCorectness = (groups) => {\r\n    for (let group of groups) {\r\n      if (chosenGroup == group.id) {\r\n        setDataDownloaded(!dataDownloaded);\r\n        return;\r\n      }\r\n    }\r\n\r\n    dispatch(setChosenGroupID(groups[0].id));\r\n    console.log('Unknown group ID. Changing to default...');\r\n  };\r\n\r\n  const buildEvents = async () => {\r\n    if (eventsLocal.length == 0) {\r\n      return;\r\n    }\r\n\r\n    let eventsConnected = [];\r\n    for (let event of eventsLocal) {\r\n      let eventData = {\r\n        date: dayjs(event.date).format('YYYY-MM-DD'),\r\n        subjectLongName: getPropertyFromObjectByID(subjectsLocal, event.subjectId, 'name'),\r\n        subjectShortName: getPropertyFromObjectByID(subjectsLocal, event.subjectId, 'shortName'),\r\n        type: getPropertyFromObjectByID(typesLocal, event.eventTypeId, 'name'),\r\n      };\r\n      eventsConnected.push(eventData);\r\n    }\r\n    dispatch(setAllEvents(eventsConnected));\r\n  };\r\n\r\n  const buildDayEvents = async (date) => {\r\n    let dayEvents = [];\r\n    for (let event of eventsLocal) {\r\n      if (dayjs(event.date).format('YYYY-MM-DD') != date) {\r\n        continue;\r\n      }\r\n      let eventData = {\r\n        id: event.id,\r\n        date: dayjs(event.date).format('YYYY-MM-DD'),\r\n        description: event.description,\r\n        subjectLongName: getPropertyFromObjectByID(subjectsLocal, event.subjectId, 'name'),\r\n        type: getPropertyFromObjectByID(typesLocal, event.eventTypeId, 'name'),\r\n        time: dayjs(event.date).format('HH:mm'),\r\n      };\r\n      dayEvents.push(eventData);\r\n    }\r\n    dispatch(setDailyEvents(dayEvents));\r\n  };\r\n\r\n  const getPropertyFromObjectByID = (array, searchedID, searchedProperty) => {\r\n    for (let object of array) {\r\n      if (object.id == searchedID) {\r\n        return object[searchedProperty];\r\n      }\r\n    }\r\n  };\r\n\r\n  return null;\r\n};\r\n\r\nexport default UserBackgroundAPI;\r\n","import dayjs from 'dayjs';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { setEditEventPopup } from '../../../redux/slices/editEventPopup';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport Modal from '../../user/Modal/Modal';\r\n\r\nconst EditEventModal = () => {\r\n  const dispatch = useDispatch();\r\n  const subjects = useSelector((state) => state.subjects.value);\r\n  const groups = useSelector((state) => state.groups.value);\r\n  const types = useSelector((state) => state.types.value);\r\n  const chosenEventID = useSelector((state) => state.chosenEvent.value);\r\n\r\n  const { id } = useParams();\r\n  const [subjectID, setSubjectID] = useState(0);\r\n  const [groupID, setGroupID] = useState(0);\r\n  const [groupIDs, setGroupIDs] = useState([]);\r\n  const [typeID, setTypeID] = useState(0);\r\n  const [time, setTime] = useState('12:00');\r\n  const [date, setDate] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    setInitialEventData();\r\n    formAllGroupArray();\r\n  }, []);\r\n\r\n  const setInitialEventData = async () => {\r\n    const response = await fetch(\r\n      `https://kiedy-kolos-backend.azurewebsites.net/yearCourses/${id}/Events/${chosenEventID}`\r\n    );\r\n    const json = await response.json();\r\n    const eventData = await json.result;\r\n\r\n    setTypeID(eventData.eventTypeId);\r\n    setSubjectID(eventData.subjectId);\r\n    setGroupID(eventData.groupIds[0]);\r\n    setGroupIDs([eventData.groupIds[0]]);\r\n\r\n    setDescription(eventData.description);\r\n    setTime(dayjs(eventData.date).format('HH:mm'));\r\n    setDate(dayjs(eventData.date).format('YYYY-MM-DD'));\r\n  };\r\n\r\n  const formAllGroupArray = () => {\r\n    let groupsTemp = [];\r\n    for (let group of groups) {\r\n      groupsTemp.push(group.id);\r\n    }\r\n\r\n    return groupsTemp;\r\n  };\r\n\r\n  const removeEvent = async () => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(\r\n      `https://kiedy-kolos-backend.azurewebsites.net/yearCourses/${id}/Events/${chosenEventID}`,\r\n      requestOptions\r\n    );\r\n\r\n    if (response.ok) {\r\n      dispatch(setEditEventPopup(false));\r\n      dispatch(forceEventsRefresh());\r\n    }\r\n  };\r\n\r\n  const addEvent = async () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        subjectID: subjectID,\r\n        yearCourseId: id,\r\n        name: 'temporary name',\r\n        groupIds: groupIDs,\r\n        date: date + 'T' + time,\r\n        description: description,\r\n        eventTypeId: typeID,\r\n        password: password,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(\r\n      `https://kiedy-kolos-backend.azurewebsites.net/yearCourses/${id}/Events`,\r\n      requestOptions\r\n    );\r\n\r\n    if (response.ok) {\r\n      dispatch(setEditEventPopup(false));\r\n      dispatch(forceEventsRefresh());\r\n    }\r\n  };\r\n\r\n  const updateSubjectID = (e) => {\r\n    setSubjectID(e.target.value);\r\n  };\r\n\r\n  const updateGroupID = (e) => {\r\n    setGroupID(e.target.value);\r\n\r\n    if (e.target.value == -1) {\r\n      setGroupIDs(formAllGroupArray());\r\n    } else {\r\n      setGroupIDs([e.target.value]);\r\n    }\r\n  };\r\n\r\n  const updateTypeID = (e) => {\r\n    setTypeID(e.target.value);\r\n  };\r\n\r\n  const updateTime = (e) => {\r\n    setTime(e.target.value);\r\n  };\r\n\r\n  const updateDate = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n\r\n  const updateDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const acceptClicked = (e) => {\r\n    e.preventDefault();\r\n    removeEvent();\r\n    addEvent();\r\n  };\r\n\r\n  const closeClicked = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setEditEventPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Edytowanie wydarzenia {chosenEventID}</h2>\r\n      <label htmlFor='subject'>Przedmiot</label>\r\n      <br />\r\n      <select className='event-adder__input' id='subject' value={subjectID} onChange={updateSubjectID}>\r\n        {subjects.map((subject) => (\r\n          <option key={subject.id} value={subject.id}>\r\n            {subject.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='event-adder__label' htmlFor='group'>\r\n        Grupa\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='group' value={groupID} onChange={updateGroupID}>\r\n        <option key={0} value={-1}>\r\n          Wszystkie\r\n        </option>\r\n        {groups.map((group) => (\r\n          <option key={group.id} value={group.id}>\r\n            {group.groupNumber}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='event-adder__label' htmlFor='type'>\r\n        Typ\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='type' value={typeID} onChange={updateTypeID}>\r\n        {types.map((type) => (\r\n          <option key={type.id} value={type.id}>\r\n            {type.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='edition__label' htmlFor='time'>\r\n        Godzina\r\n      </label>\r\n      <br />\r\n      <input\r\n        type='time'\r\n        id='time'\r\n        name='time'\r\n        min='07:00'\r\n        value='16:00:00'\r\n        max='21:00'\r\n        value={time}\r\n        onChange={updateTime}\r\n      ></input>\r\n      <br />\r\n      <label className='edition__label' htmlFor='date'>\r\n        Data\r\n      </label>\r\n      <br />\r\n      <input\r\n        type='date'\r\n        id='date'\r\n        name='date'\r\n        min='07:00'\r\n        value='16:00:00'\r\n        max='21:00'\r\n        value={date}\r\n        onChange={updateDate}\r\n      ></input>\r\n      <br />\r\n      <label className='edition__label' htmlFor='description'>\r\n        Opis\r\n      </label>\r\n      <br />\r\n      <textarea\r\n        id='description'\r\n        name='description'\r\n        rows='5'\r\n        cols='30'\r\n        placeholder='Tu wpisz opis...'\r\n        value={description}\r\n        onChange={updateDescription}\r\n      ></textarea>\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Hasło\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Hasło' onChange={updatePassword}></input>\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={closeClicked}>\r\n        Anuluj\r\n      </button>\r\n      .......................\r\n      <button className='event-adder__button--accept' onClick={acceptClicked}>\r\n        Edytuj wydarzenie\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditEventModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setChosenGroupID } from '../../../redux/slices/chosenGroupIDSlice';\r\nimport { setSettingsPopup } from '../../../redux/slices/settingsPopup';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst SettingsModal = () => {\r\n  const dispatch = useDispatch();\r\n  const groups = useSelector((state) => state.groups.value);\r\n  const choosenGroupID = useSelector((state) => state.chosenGroupID.value);\r\n\r\n  const [groupID, setGroupID] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setGroupID(choosenGroupID);\r\n  }, [choosenGroupID]);\r\n\r\n  const updateGroupID = (e) => {\r\n    setGroupID(e.target.value);\r\n  };\r\n\r\n  const acceptClicked = () => {\r\n    dispatch(setSettingsPopup(false));\r\n    dispatch(setChosenGroupID(groupID));\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Ustawienia</h2>\r\n      <label className='event-adder__label' htmlFor='group'>\r\n        Grupa\r\n      </label>\r\n      <select className='event-adder__input' id='group' value={groupID} onChange={updateGroupID}>\r\n        {groups.map((group) => (\r\n          <option key={group.id} value={group.id}>\r\n            {group.groupNumber}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button onClick={() => acceptClicked()}>Akceptuj</button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport dayjs from 'dayjs';\r\nimport { setDailyEvents } from '../../redux/slices/dailyEvents';\r\nimport { setAllEvents } from '../../redux/slices/allEvents';\r\nimport { setSubjects } from '../../redux/slices/subjects';\r\nimport { setGroups } from '../../redux/slices/groups';\r\nimport { setTypes } from '../../redux/slices/types';\r\nimport { setChosenGroupID } from '../../redux/slices/chosenGroupIDSlice';\r\n\r\nconst AdminBackgroundAPI = () => {\r\n  const dispatch = useDispatch();\r\n  const baseURL = 'https://kiedy-kolos-backend.azurewebsites.net/';\r\n\r\n  const [dataDownloaded, setDataDownloaded] = useState(false);\r\n  const [subjectsLocal, setSubjectsLocal] = useState([]);\r\n  const [groupsLocal, setGroupsLocal] = useState([]);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    downloadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(setSubjects(subjectsLocal));\r\n    dispatch(setGroups(groupsLocal));\r\n  }, [dataDownloaded]);\r\n\r\n  const getResource = async (extensionURL) => {\r\n    const URL = baseURL + extensionURL;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n    return data.result;\r\n  };\r\n\r\n  const getSubjects = async () => {\r\n    const data = await getResource(`yearCourses/${id}/subjects`);\r\n    dispatch(setSubjects(data));\r\n    return data;\r\n  };\r\n\r\n  const getGroups = async () => {\r\n    const data = await getResource(`yearCourses/${id}/groups`);\r\n    dispatch(setGroups(data));\r\n    return data;\r\n  };\r\n\r\n  const downloadData = async () => {\r\n    setSubjectsLocal(await getSubjects());\r\n    setGroupsLocal(await getGroups());\r\n    setDataDownloaded(true);\r\n  };\r\n\r\n  const getPropertyFromObjectByID = (array, searchedID, searchedProperty) => {\r\n    for (let object of array) {\r\n      if (object.id == searchedID) {\r\n        return object[searchedProperty];\r\n      }\r\n    }\r\n  };\r\n\r\n  return null;\r\n};\r\n\r\nexport default AdminBackgroundAPI;\r\n","import Header from '../Header/Header';\r\nimport MonthPagination from '../../user/MonthPagination/MonthPagination';\r\nimport Toolbar from '../Toolbar/Toolbar';\r\nimport Calendar from '../../user/Calendar/Calendar';\r\nimport DailyEvents from '../../user/DailyEvents/DailyEvents';\r\nimport Title from '../Title/Title';\r\nimport AdminPanel from '../../admin/AdminPanel/AdminPanel';\r\nimport AddEventModal from '../../user/Modals/AddEventModal';\r\nimport RemoveEventModal from '../../user/Modals/RemoveEventModal';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport './Panel.scss';\r\nimport UserBackgroundAPI from '../../API/UserBackgroundAPI';\r\nimport EditEventModal from '../../user/Modals/EditEventModal';\r\nimport SettingsModal from '../../user/Modals/SettingsModal';\r\nimport AdminBackgroundAPI from '../../API/AdminBackgroundAPI';\r\n\r\nconst Panel = () => {\r\n  const addEventsPopup = useSelector((state) => state.addEventPopup.value);\r\n  const removeEventsPopup = useSelector((state) => state.removeEventPopup.value);\r\n  const editEventPopup = useSelector((state) => state.editEventPopup.value);\r\n  const settingsPopup = useSelector((state) => state.settingsPopup.value);\r\n\r\n  return (\r\n    <div className='panel'>\r\n      <Switch>\r\n        <Route exact path='/:id'>\r\n          <UserBackgroundAPI />\r\n          <Header>\r\n            <MonthPagination />\r\n            <Toolbar />\r\n          </Header>\r\n          <Calendar />\r\n          <DailyEvents />\r\n          {addEventsPopup && <AddEventModal />}\r\n          {removeEventsPopup && <RemoveEventModal />}\r\n          {editEventPopup && <EditEventModal />}\r\n          {settingsPopup && <SettingsModal />}\r\n        </Route>\r\n        <Route path='/:id/admin'>\r\n          <AdminBackgroundAPI />\r\n          <Header>\r\n            <Title>Panel Administratora</Title>\r\n            <Toolbar />\r\n          </Header>\r\n          <AdminPanel />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import { Route, Switch } from 'react-router';\r\n\r\nimport Panel from './components/other/Panel/Panel';\r\n\r\nconst App = () => {\r\n    return <Panel />;\r\n};\r\n\r\nexport default App;\r\n","import { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { loadState, saveState } from './storage/localStorage';\r\nimport { createStore } from 'redux';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport allReducer from './reducers';\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'reduxjs-toolkit-persist/integration/react';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n// const persistedStore = loadState();\r\n// const store = createStore(\r\n//     allReducer,\r\n//     persistedStore,\r\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n// );\r\n\r\n// store.subscribe(() => {\r\n//     saveState({\r\n//         chosenGroup: store.getState().chosenGroup,\r\n//         chosenTheme: store.getState().chosenTheme,\r\n//     });\r\n// });\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter basename='/'>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}