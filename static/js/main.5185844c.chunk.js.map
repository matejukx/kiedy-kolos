{"version":3,"sources":["reducers/chosenDate.js","reducers/chosenGroup.js","reducers/addEventPopup.js","reducers/forceEventsRefresh.js","reducers/deleteEventPopup.js","reducers/chosenEvent.js","reducers/chosenTheme.js","reducers/editEventPopup.js","reducers/allEventsReducer.js","reducers/dayEventsReducer.js","reducers/eventTypesReducer.js","reducers/subjectsReducer.js","reducers/optionsPopup.js","reducers/groupsReducer.js","reducers/index.js","redux/slices/monthOffsetSlice.js","redux/slices/chosenDateSlice.js","redux/slices/dailyEvents.js","redux/slices/chosenGroupIDSlice.js","redux/slices/allEvents.js","redux/slices/addEventPopup.js","redux/slices/editEventPopup.js","redux/slices/settingsPopup.js","redux/slices/removeEventPopup.js","redux/slices/subjects.js","redux/slices/groups.js","redux/slices/types.js","redux/slices/forceEventsRefresh.js","redux/slices/chosenEvent.js","redux/slices/addSubjectPopup.js","redux/slices/chosenSubject.js","redux/slices/removeSubjectPopup.js","redux/slices/forceAdminRefresh.js","redux/slices/editSubjectPopup.js","redux/slices/addGroupPopup.js","redux/slices/editGroupPopup.js","redux/slices/removeGroupPopup.js","redux/slices/chosenGroupAdmin.js","redux/slices/yearCourseInformation.js","redux/store.js","components/other/Header/Header.jsx","components/other/Button/Button.jsx","components/other/Title/Title.jsx","components/user/MonthPagination/MonthPagination.jsx","components/other/Toolbar/Toolbar.jsx","components/user/DayNames/DayNames.jsx","components/user/DayFlags/DayFlags.jsx","components/user/DayFooter/DayFooter.jsx","components/user/Day/Day.jsx","components/user/Days/Days.jsx","components/user/Calendar/Calendar.jsx","components/other/ItemAdder/ItemAdder.jsx","components/other/ItemList/ItemList.jsx","components/user/EventCard/EventCard.jsx","components/user/DailyEvents/DailyEvents.jsx","components/admin/CourseInfo/CourseInfo.jsx","components/other/ItemBar/ItemBar.jsx","components/admin/AdminPanel/AdminPanel.jsx","components/user/Modal/Modal.jsx","components/user/Modals/AddEventModal.jsx","components/user/Modals/RemoveEventModal.jsx","components/API/UserBackgroundAPI.js","components/user/Modals/EditEventModal.jsx","components/user/Modals/SettingsModal.jsx","components/API/AdminBackgroundAPI.js","components/user/Modals/AddSubjectModal.jsx","components/user/Modals/RemoveSubjectModal.jsx","components/user/Modals/EditSubjectModal.jsx","components/user/Modals/AddGroupModal.jsx","components/user/Modals/RemoveGroupModal.jsx","components/user/Modals/EditGroupModal.jsx","components/other/NoIDPanel/NoIDPanel.jsx","components/other/Panel/Panel.jsx","App.js","index.js"],"names":["dateReducer","state","action","type","payload","groupReducer","addEventPopupReducer","forceEventsRefreshReducer","deleteEventPopupReducer","chosenEventReducer","chosenThemeReducer","editEventPopupReducer","allEventsReducer","dayEventsReducer","eventTypesReducer","subjectsReducer","optionsPopupReducer","groupsReducer","combineReducers","allEvents","dayEvents","eventTypes","subjects","chosenDate","chosenGroup","addEventPopup","deleteEventPopup","editEventPopup","forceEventsRefresh","chosenEvent","chosenTheme","optionsPopup","groups","monthOffsetSlice","createSlice","name","initialState","value","reducers","incrementMonthOffset","decrementMonthOffset","setMonthOffset","actions","chosenDateSlice","dayjs","format","setChoosenDate","dailyEventsSlice","setDailyEvents","chosenGroupIDSlice","setChosenGroupID","allEventsSlice","setAllEvents","addEventPopupSlice","setAddEventPopup","editEventPopupSlice","setEditEventPopup","settingsPopupSlice","setSettingsPopup","removeEventPopupSlice","setRemoveEventPopup","subjectsSlice","setSubjects","groupsSlice","setGroups","typesSlice","setTypes","forceEventsRefreshSlice","chosenEventSlice","setChosenEvent","addSubjectPopupSlice","setAddSubjectPopup","chosenSubjectSlice","setChosenSubject","removeSubjectPopupSlice","setRemoveSubjectPopup","forceAdminRefreshSlice","forceAdminRefresh","editSubjectPopupSlice","setEditSubjectPopup","addGroupPopupSlice","setAddGroupPopup","editGroupPopupSlice","setEditGroupPopup","removeGroupPopupSlice","setRemoveGroupPopup","chosenGroupAdminSlice","setChosenGroupAdmin","yearCourseInformationSlice","setYearCourseInformation","persistConfig","key","storage","stateReconciler","autoMergeLevel1","whitelist","monthOffset","monthOffsetReducer","chosenDateReducer","chosenGroupID","chosenGroupIDReducer","dailyEvents","dailyEventsReducer","chosenSubject","chosenSubjectReducer","yearCourseInformation","yearCourseInformationReducer","removeEventPopup","removeEventPopupReducer","settingsPopup","settingsPopupReducer","addSubjectPopup","addSubjectPopupReducer","removeSubjectPopup","removeSubjectPopupReducer","editSubjectPopup","editSubjectPopupReducer","forceAdminRefreshReducer","addGroupPopup","addGroupPopupReducer","editGroupPopup","editGroupPopupReducer","removeGroupPopup","removeGroupPopupReducer","chosenGroupAdmin","chosenGroupAdminReducer","types","typesReducer","_persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Header","props","className","children","Button","handleClick","modifier","onClick","Title","MonthPagination","dispatch","useDispatch","useSelector","useState","swipeDirection","setSwipeDirection","lastRememberedMonthOffset","setLastRememberedMonthOffset","titleVariants","hidden","opacity","x","show","transition","stiffness","damping","useEffect","motion","div","initial","animate","variants","parseInt","Toolbar","title","DayNames","DayFlags","handleResize","events","flags","useRef","calculateOtherCount","window","addEventListener","els","Array","from","current","counter","i","length","offsetTop","eventTypeDictionary","Egzamin","Kolokwium","Laboratorium","Projekt","Wyk≈Çad","Inne","ref","map","event","subjectShortName","DayFooter","day","otherCount","Day","date","active","setOtherCount","selected","setSelected","choosenDate","eventsForThisDay","seteventsForThisDay","filter","Days","daysOfWeek","days","setDays","initializeMonthDays","desiredDay","add","daysTemp","startDayOfMonth","startOf","startingDay","subtract","isDayInCurrentMonth","thisMonth","Calendar","currentMonth","lastRememberedMonth","setLastRememberedMonth","calendarVariants","ItemAdder","ItemList","items","renderComponent","addFunction","staggerChildren","item","EventCard","subjectLongName","id","time","description","itemVariants","y","DailyEvents","localEvents","setLocalEvents","setTimeout","CourseInfo","course","university","ItemBar","handleEdit","handleDelete","AdminPanel","shortName","groupName","groupNumber","Modal","errorMessage","ReactDOM","createPortal","exit","ease","scale","document","querySelector","AddEventModal","currentlyChosenGroup","useParams","subjectID","setSubjectID","groupID","setGroupID","groupIDs","setGroupIDs","typeID","setTypeID","setTime","setDescription","password","setPassword","setErrorMessage","addEvent","a","requestOptions","method","headers","body","JSON","stringify","yearCourseId","groupIds","eventTypeId","mode","fetch","ok","htmlFor","onChange","e","target","subject","groupsTemp","group","push","formAllGroupArray","min","max","rows","cols","placeholder","preventDefault","RemoveEventModal","chosenEventID","deletePressed","UserBackgroundAPI","dataDownloaded","setDataDownloaded","eventsLocal","setEventsLocal","typesLocal","setTypesLocal","subjectsLocal","setSubjectsLocal","console","log","downloadData","buildEvents","buildDayEvents","getResource","extensionURL","URL","response","json","data","result","getEvents","getSubjects","getTypes","getGroups","checkGroupCorectness","eventsConnected","eventData","getPropertyFromObjectByID","subjectId","array","searchedID","searchedProperty","object","EditEventModal","setDate","setInitialEventData","removeEvent","SettingsModal","choosenGroupID","AdminBackgroundAPI","getYearCourseInformation","AddSubjectModal","setShortName","longName","setLongName","addSubject","RemoveSubjectModal","chosenSubjectID","EditSubjectModal","setInitialSubjectData","subjectData","editSubject","AddGroupModal","setName","number","setNumber","addGroup","RemoveGroupModal","EditGroupModal","setInitialGroupData","groupData","editGroup","groupId","NoIDPanel","setItems","unjsoned","href","to","faculty","currentSemester","Panel","addEventsPopup","removeEventsPopup","exact","path","AnimatePresence","App","render","StrictMode","basename","loading","getElementById"],"mappings":"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","file":"static/js/main.5185844c.chunk.js","sourcesContent":["const dateReducer = (state = \"2020-11-01\", action) => {\r\n    switch(action.type) {\r\n        case 'SET_DATE':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dateReducer;","const groupReducer = (state = 1, action) => {\r\n    switch (action.type) {\r\n        case 'SET_GROUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default groupReducer;\r\n","const addEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_ADD_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default addEventPopupReducer;\r\n","const forceEventsRefreshReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'REFRESH':\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default forceEventsRefreshReducer;\r\n","const deleteEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_DELETE_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default deleteEventPopupReducer;\r\n","const chosenEventReducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CHOSEN_EVENT':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default chosenEventReducer;\r\n","const chosenThemeReducer = (state = 'dark', action) => {\r\n    switch (action.type) {\r\n        case 'SET_CHOSEN_THEME':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default chosenThemeReducer;\r\n","const editEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_EDIT_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default editEventPopupReducer;\r\n","const allEventsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_ALL_EVENTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default allEventsReducer;\r\n","const dayEventsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_DAY_EVENTS':\r\n            return [...action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dayEventsReducer;\r\n","const eventTypesReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_EVENT_TYPES':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default eventTypesReducer;\r\n","const subjectsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_SUBJECTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default subjectsReducer;\r\n","const optionsPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_OPTIONS_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default optionsPopupReducer;\r\n","const groupsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_GROUPS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default groupsReducer;\r\n","import dateReducer from './chosenDate';\r\nimport groupReducer from './chosenGroup';\r\nimport { combineReducers } from 'redux';\r\nimport addEventPopupReducer from './addEventPopup';\r\nimport forceEventsRefreshReducer from './forceEventsRefresh';\r\nimport deleteEventPopupReducer from './deleteEventPopup';\r\nimport chosenEventReducer from './chosenEvent';\r\nimport chosenThemeReducer from './chosenTheme';\r\nimport editEventPopupReducer from './editEventPopup';\r\nimport allEventsReducer from './allEventsReducer';\r\nimport dayEventsReducer from './dayEventsReducer';\r\nimport eventTypesReducer from './eventTypesReducer';\r\nimport subjectsReducer from './subjectsReducer';\r\nimport optionsPopupReducer from './optionsPopup';\r\nimport groupsReducer from './groupsReducer';\r\n\r\nconst allReducers = combineReducers({\r\n    allEvents: allEventsReducer,\r\n    dayEvents: dayEventsReducer,\r\n    eventTypes: eventTypesReducer,\r\n    subjects: subjectsReducer,\r\n    chosenDate: dateReducer,\r\n    chosenGroup: groupReducer,\r\n    addEventPopup: addEventPopupReducer,\r\n    deleteEventPopup: deleteEventPopupReducer,\r\n    editEventPopup: editEventPopupReducer,\r\n    forceEventsRefresh: forceEventsRefreshReducer,\r\n    chosenEvent: chosenEventReducer,\r\n    chosenTheme: chosenThemeReducer,\r\n    optionsPopup: optionsPopupReducer,\r\n    groups: groupsReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const monthOffsetSlice = createSlice({\r\n  name: 'monthOffset',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    incrementMonthOffset: (state) => {\r\n      state.value += 1;\r\n    },\r\n    decrementMonthOffset: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    setMonthOffset: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  incrementMonthOffset: incrementMonthOffset,\r\n  decrementMonthOffset: decrementMonthOffset,\r\n  setMonthOffset: setMonthOffset,\r\n} = monthOffsetSlice.actions;\r\n\r\nexport default monthOffsetSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport dayjs from 'dayjs';\r\n\r\nexport const chosenDateSlice = createSlice({\r\n    name: 'chosenDate',\r\n    initialState: {\r\n        value: dayjs().format('YYYY-MM-DD'),\r\n    },\r\n    reducers: {\r\n        setChoosenDate: (state, action) => {\r\n            state.value = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setChoosenDate: setChoosenDate } = chosenDateSlice.actions;\r\n\r\nexport default chosenDateSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const dailyEventsSlice = createSlice({\r\n  name: 'dailyEvents',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setDailyEvents: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setDailyEvents: setDailyEvents } = dailyEventsSlice.actions;\r\n\r\nexport default dailyEventsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const chosenGroupIDSlice = createSlice({\r\n  name: 'chosenGroupID',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    setChosenGroupID: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setChosenGroupID: setChosenGroupID } = chosenGroupIDSlice.actions;\r\n\r\nexport default chosenGroupIDSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const allEventsSlice = createSlice({\r\n  name: 'allEvents',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setAllEvents: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAllEvents: setAllEvents } = allEventsSlice.actions;\r\n\r\nexport default allEventsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const addEventPopupSlice = createSlice({\r\n  name: 'addEventPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setAddEventPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAddEventPopup: setAddEventPopup } = addEventPopupSlice.actions;\r\n\r\nexport default addEventPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const editEventPopupSlice = createSlice({\r\n  name: 'editEventPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setEditEventPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setEditEventPopup: setEditEventPopup } = editEventPopupSlice.actions;\r\n\r\nexport default editEventPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const settingsPopupSlice = createSlice({\r\n  name: 'settingsPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setSettingsPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setSettingsPopup: setSettingsPopup } = settingsPopupSlice.actions;\r\n\r\nexport default settingsPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const removeEventPopupSlice = createSlice({\r\n  name: 'removeEventPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setRemoveEventPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setRemoveEventPopup: setRemoveEventPopup } = removeEventPopupSlice.actions;\r\n\r\nexport default removeEventPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const subjectsSlice = createSlice({\r\n  name: 'subjects',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setSubjects: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setSubjects: setSubjects } = subjectsSlice.actions;\r\n\r\nexport default subjectsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const groupsSlice = createSlice({\r\n  name: 'groups',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setGroups: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setGroups: setGroups } = groupsSlice.actions;\r\n\r\nexport default groupsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const typesSlice = createSlice({\r\n  name: 'types',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setTypes: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setTypes: setTypes } = typesSlice.actions;\r\n\r\nexport default typesSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const forceEventsRefreshSlice = createSlice({\r\n  name: 'forceEventsRefresh',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    forceEventsRefresh: (state, action) => {\r\n      state.value = !state.value;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { forceEventsRefresh: forceEventsRefresh } = forceEventsRefreshSlice.actions;\r\n\r\nexport default forceEventsRefreshSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport dayjs from 'dayjs';\r\n\r\nexport const chosenEventSlice = createSlice({\r\n  name: 'chosenEvent',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    setChosenEvent: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setChosenEvent: setChosenEvent } = chosenEventSlice.actions;\r\n\r\nexport default chosenEventSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const addSubjectPopupSlice = createSlice({\r\n  name: 'addSubjectPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setAddSubjectPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAddSubjectPopup: setAddSubjectPopup } = addSubjectPopupSlice.actions;\r\n\r\nexport default addSubjectPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const chosenSubjectSlice = createSlice({\r\n  name: 'chosenSubject',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    setChosenSubject: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setChosenSubject: setChosenSubject } = chosenSubjectSlice.actions;\r\n\r\nexport default chosenSubjectSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const removeSubjectPopupSlice = createSlice({\r\n  name: 'removeSubjectPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setRemoveSubjectPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setRemoveSubjectPopup: setRemoveSubjectPopup } = removeSubjectPopupSlice.actions;\r\n\r\nexport default removeSubjectPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const forceAdminRefreshSlice = createSlice({\r\n  name: 'forceAdminRefresh',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    forceAdminRefresh: (state, action) => {\r\n      state.value = !state.value;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { forceAdminRefresh: forceAdminRefresh } = forceAdminRefreshSlice.actions;\r\n\r\nexport default forceAdminRefreshSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const editSubjectPopupSlice = createSlice({\r\n  name: 'editSubjectPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setEditSubjectPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setEditSubjectPopup: setEditSubjectPopup } = editSubjectPopupSlice.actions;\r\n\r\nexport default editSubjectPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const addGroupPopupSlice = createSlice({\r\n  name: 'addGroupPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setAddGroupPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAddGroupPopup: setAddGroupPopup } = addGroupPopupSlice.actions;\r\n\r\nexport default addGroupPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const editGroupPopupSlice = createSlice({\r\n  name: 'editGroupPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setEditGroupPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setEditGroupPopup: setEditGroupPopup } = editGroupPopupSlice.actions;\r\n\r\nexport default editGroupPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const removeGroupPopupSlice = createSlice({\r\n  name: 'removeGroupPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setRemoveGroupPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setRemoveGroupPopup: setRemoveGroupPopup } = removeGroupPopupSlice.actions;\r\n\r\nexport default removeGroupPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const chosenGroupAdminSlice = createSlice({\r\n  name: 'chosenGroupAdmin',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    setChosenGroupAdmin: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setChosenGroupAdmin: setChosenGroupAdmin } = chosenGroupAdminSlice.actions;\r\n\r\nexport default chosenGroupAdminSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const yearCourseInformationSlice = createSlice({\r\n  name: 'yearCourseInformation',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    setYearCourseInformation: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setYearCourseInformation: setYearCourseInformation } = yearCourseInformationSlice.actions;\r\n\r\nexport default yearCourseInformationSlice.reducer;\r\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistReducer,\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'reduxjs-toolkit-persist';\r\nimport storage from 'reduxjs-toolkit-persist/lib/storage';\r\nimport autoMergeLevel1 from 'reduxjs-toolkit-persist/lib/stateReconciler/autoMergeLevel1';\r\n\r\nimport monthOffsetReducer from './slices/monthOffsetSlice';\r\nimport chosenDateReducer from './slices/chosenDateSlice';\r\nimport dailyEventsReducer from './slices/dailyEvents';\r\nimport chosenGroupIDReducer from './slices/chosenGroupIDSlice';\r\nimport allEventsReducer from './slices/allEvents';\r\nimport addEventPopupReducer from './slices/addEventPopup';\r\nimport editEventPopupReducer from './slices/editEventPopup';\r\nimport settingsPopupReducer from './slices/settingsPopup';\r\nimport removeEventPopupReducer from './slices/removeEventPopup';\r\nimport subjectsReducer from './slices/subjects';\r\nimport groupsReducer from './slices/groups';\r\nimport typesReducer from './slices/types';\r\nimport forceEventsRefreshReducer from './slices/forceEventsRefresh';\r\nimport chosenEventReducer from './slices/chosenEvent';\r\nimport addSubjectPopupReducer from './slices/addSubjectPopup';\r\nimport chosenSubjectReducer from './slices/chosenSubject';\r\nimport removeSubjectPopupReducer from './slices/removeSubjectPopup';\r\nimport forceAdminRefreshReducer from './slices/forceAdminRefresh';\r\nimport editSubjectPopupReducer from './slices/editSubjectPopup';\r\nimport addGroupPopupReducer from './slices/addGroupPopup';\r\nimport editGroupPopupReducer from './slices/editGroupPopup';\r\nimport removeGroupPopupReducer from './slices/removeGroupPopup';\r\nimport chosenGroupAdminReducer from './slices/chosenGroupAdmin';\r\nimport yearCourseInformationReducer from './slices/yearCourseInformation';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: storage,\r\n  stateReconciler: autoMergeLevel1,\r\n  whitelist: ['chosenGroupID'],\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  monthOffset: monthOffsetReducer,\r\n  chosenDate: chosenDateReducer,\r\n  chosenGroupID: chosenGroupIDReducer,\r\n  dailyEvents: dailyEventsReducer,\r\n  allEvents: allEventsReducer,\r\n  chosenSubject: chosenSubjectReducer,\r\n  yearCourseInformation: yearCourseInformationReducer,\r\n\r\n  addEventPopup: addEventPopupReducer,\r\n  removeEventPopup: removeEventPopupReducer,\r\n  editEventPopup: editEventPopupReducer,\r\n\r\n  settingsPopup: settingsPopupReducer,\r\n  addSubjectPopup: addSubjectPopupReducer,\r\n  removeSubjectPopup: removeSubjectPopupReducer,\r\n  editSubjectPopup: editSubjectPopupReducer,\r\n  forceAdminRefresh: forceAdminRefreshReducer,\r\n\r\n  addGroupPopup: addGroupPopupReducer,\r\n  editGroupPopup: editGroupPopupReducer,\r\n  removeGroupPopup: removeGroupPopupReducer,\r\n  chosenGroupAdmin: chosenGroupAdminReducer,\r\n\r\n  subjects: subjectsReducer,\r\n  groups: groupsReducer,\r\n  types: typesReducer,\r\n  forceEventsRefresh: forceEventsRefreshReducer,\r\n  chosenEvent: chosenEventReducer,\r\n});\r\nconst _persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nconst store = configureStore({\r\n  reducer: _persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      /* ignore persistance actions */\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import './Header.scss';\r\n\r\nconst Header = (props) => <header className='header'>{props.children}</header>;\r\n\r\nexport default Header;\r\n","import './Button.scss';\r\n\r\nconst Button = ({ handleClick, children, modifier = '' }) => {\r\n    return (\r\n        <button className={`button ${modifier}`} onClick={handleClick}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import './Title.scss';\r\n\r\nconst Title = (props) => <h1 className='title'>{props.children}</h1>;\r\n\r\nexport default Title;\r\n","import dayjs from 'dayjs';\r\nimport { motion } from 'framer-motion';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { decrementMonthOffset, incrementMonthOffset } from '../../../redux/slices/monthOffsetSlice';\r\nimport Button from '../../other/Button/Button';\r\nimport Title from '../../other/Title/Title';\r\nimport './MonthPagination.scss';\r\n\r\nconst MonthPagination = () => {\r\n  const monthNames = [\r\n    'Stycze≈Ñ',\r\n    'Luty',\r\n    'Marzec',\r\n    'Kwiecie≈Ñ',\r\n    'Maj',\r\n    'Czerwiec',\r\n    'Lipiec',\r\n    'Sierpie≈Ñ',\r\n    'Wrzesie≈Ñ',\r\n    'Pa≈∫dziernik',\r\n    'Listopad',\r\n    'Grudzie≈Ñ',\r\n  ];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const monthOffset = useSelector((state) => state.monthOffset.value);\r\n  const [swipeDirection, setSwipeDirection] = useState(-1);\r\n  const [lastRememberedMonthOffset, setLastRememberedMonthOffset] = useState();\r\n\r\n  const titleVariants = {\r\n    hidden: { opacity: 0, x: swipeDirection * 50 },\r\n    show: {\r\n      opacity: 1,\r\n      x: 0,\r\n      transition: {\r\n        type: 'spring',\r\n        stiffness: 600,\r\n        damping: 50,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (monthOffset > lastRememberedMonthOffset) {\r\n      setSwipeDirection(1);\r\n    } else {\r\n      setSwipeDirection(-1);\r\n    }\r\n    setLastRememberedMonthOffset(monthOffset);\r\n  }, [monthOffset]);\r\n\r\n  return (\r\n    <div className='monthPagination'>\r\n      <Button handleClick={() => dispatch(decrementMonthOffset())}>\r\n        <span className='material-icons'>chevron_left</span>\r\n      </Button>\r\n      <Title>\r\n        <motion.div key={lastRememberedMonthOffset} initial='hidden' animate='show' variants={titleVariants}>\r\n          {monthNames[parseInt(dayjs().format('MM')) + monthOffset - 1]}\r\n        </motion.div>\r\n      </Title>\r\n      <Button handleClick={() => dispatch(incrementMonthOffset())}>\r\n        <span className='material-icons'>chevron_right</span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthPagination;\r\n","import { useDispatch } from 'react-redux';\r\nimport { setSettingsPopup } from '../../../redux/slices/settingsPopup';\r\nimport Button from '../Button/Button';\r\nimport LoginButton from '../LoginButton/LoginButton';\r\nimport './Toolbar.scss';\r\n\r\nconst Toolbar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const settingsClicked = () => {\r\n    dispatch(setSettingsPopup(true));\r\n  };\r\n\r\n  return (\r\n    <div className='toolbar'>\r\n      <Button handleClick={() => settingsClicked()}>\r\n        <span title='Ustawienia' className='material-icons'>\r\n          settings\r\n        </span>\r\n      </Button>\r\n      <Button>\r\n        <span title='Powiadomienia' className='material-icons'>\r\n          notifications\r\n        </span>\r\n      </Button>\r\n      {/* <LoginButton /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import './DayNames.scss';\r\n\r\nconst DayNames = () => (\r\n  <div className='calendar__dayNames'>\r\n    <div>pon.</div>\r\n    <div>wt.</div>\r\n    <div>≈õr.</div>\r\n    <div>czw.</div>\r\n    <div>pt.</div>\r\n    <div>sb.</div>\r\n    <div>ndz.</div>\r\n  </div>\r\n);\r\n\r\nexport default DayNames;\r\n","import './DayFlags.scss';\r\nimport { useRef, useEffect } from 'react';\r\n\r\nconst DayFlags = ({ handleResize, events }) => {\r\n  const flags = useRef(null);\r\n\r\n  useEffect(() => {\r\n    handleResize(calculateOtherCount());\r\n  }, [handleResize]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', () => {\r\n      handleResize(calculateOtherCount);\r\n    });\r\n  }, [handleResize]);\r\n\r\n  const calculateOtherCount = () => {\r\n    const els = Array.from(flags.current.children);\r\n    let counter = 1;\r\n\r\n    for (let i = 1; i < els.length; i++) {\r\n      if (els[i].offsetTop <= els[0].offsetTop) {\r\n        break;\r\n      }\r\n      counter++;\r\n    }\r\n\r\n    return els.length - counter;\r\n  };\r\n\r\n  const eventTypeDictionary = {\r\n    Egzamin: 'exam',\r\n    Kolokwium: 'exam',\r\n    Laboratorium: 'lab',\r\n    Projekt: 'project',\r\n    Wyk≈Çad: 'project',\r\n    Inne: 'other',\r\n  };\r\n\r\n  return (\r\n    <div ref={flags} className='day__flags'>\r\n      {events.length > 0 &&\r\n        events.map((event) => (\r\n          <div key={event.subjectShortName} className={`day__flag day__flag--${eventTypeDictionary[event.type]}`}>\r\n            {event.subjectShortName}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayFlags;\r\n","import './DayFooter.scss';\r\n\r\nconst DayFooter = ({ day, otherCount }) => (\r\n  <div className='day__footer'>\r\n    <div className={`day__moreFlag ${otherCount > 0 ? '' : 'hidden'}`}>\r\n      {otherCount}+\r\n    </div>\r\n    <div className='day__number'>{day}</div>\r\n  </div>\r\n);\r\n\r\nexport default DayFooter;\r\n","import { useEffect, useState, useRef } from 'react';\r\nimport dayjs from 'dayjs';\r\n\r\nimport DayFlags from '../DayFlags/DayFlags';\r\nimport DayFooter from '../DayFooter/DayFooter';\r\nimport './Day.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setChoosenDate } from '../../../redux/slices/chosenDateSlice';\r\n\r\nconst Day = ({ date, active }) => {\r\n  const dispatch = useDispatch();\r\n  const ref = useRef();\r\n\r\n  const [otherCount, setOtherCount] = useState(0);\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  const choosenDate = useSelector((state) => state.chosenDate.value);\r\n  const allEvents = useSelector((state) => state.allEvents.value);\r\n  const [eventsForThisDay, seteventsForThisDay] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (choosenDate == date) {\r\n      setSelected(true);\r\n    } else {\r\n      setSelected(false);\r\n    }\r\n  }, [choosenDate]);\r\n\r\n  useEffect(() => {\r\n    seteventsForThisDay(allEvents.filter((event) => event.date == date));\r\n  }, [allEvents]);\r\n\r\n  const classModifier = () => {\r\n    if (dayjs().format('YYYY-MM-DD') == dayjs(date).format('YYYY-MM-DD')) {\r\n      return 'day--current';\r\n    }\r\n\r\n    if (!active) {\r\n      return 'day--inactive';\r\n    }\r\n    if (dayjs(date).format('d') == 0 || dayjs(date).format('d') == 6) {\r\n      return 'day--weekend';\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    dispatch(setChoosenDate(date));\r\n  };\r\n\r\n  return (\r\n    <div onClick={handleClick} ref={ref} className={`day ${classModifier()} ${selected ? 'day--selected' : ''}`}>\r\n      <DayFlags events={eventsForThisDay} handleResize={setOtherCount} />\r\n      <DayFooter otherCount={otherCount} day={dayjs(date).format('DD')} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import React, { useEffect, useState } from 'react';\r\nimport dayjs from 'dayjs';\r\n\r\nimport Day from '../Day/Day';\r\nimport './Days.scss';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Days = () => {\r\n    const daysOfWeek = [7, 1, 2, 3, 4, 5, 6];\r\n\r\n    const monthOffset = useSelector((state) => state.monthOffset.value);\r\n\r\n    const [days, setDays] = useState([]);\r\n\r\n    useEffect(() => {\r\n        initializeMonthDays();\r\n    }, [monthOffset]);\r\n\r\n    const initializeMonthDays = () => {\r\n        const today = dayjs();\r\n        const desiredDay = today.add(monthOffset, 'month');\r\n        const daysTemp = new Array(42);\r\n        const startDayOfMonth = daysOfWeek[desiredDay.startOf('month').day()]; // 1 - monday, 7 sunday\r\n\r\n        const startingDay = desiredDay.startOf('month').subtract(startDayOfMonth - 1, 'day');\r\n\r\n        for (let i = 0; i < 42; i++) {\r\n            daysTemp[i] = startingDay.add(i, 'day').format('YYYY-MM-DD');\r\n        }\r\n\r\n        setDays(daysTemp);\r\n    };\r\n\r\n    const isDayInCurrentMonth = (day) => {\r\n        const today = dayjs();\r\n        const thisMonth = today.add(monthOffset, 'month');\r\n        return dayjs(day).format('MM') === thisMonth.format('MM');\r\n    };\r\n\r\n    return (\r\n        <div className='calendar__days'>\r\n            {days.map((day) => (\r\n                <Day key={day} date={day} active={isDayInCurrentMonth(day)} />\r\n            ))}\r\n\r\n            {/* <Day day='2' modifier='day--inactive' />\r\n            <Day day='3' modifier='day--inactive' />\r\n            <Day day='4' modifier='day--inactive' />\r\n            <Day day='5' modifier='day--inactive' />\r\n            <Day day='6' modifier='day--weekend' />\r\n            <Day day='7' modifier='day--weekend' />\r\n            <Day day='8' />\r\n            <Day day='9' />\r\n            <Day day='10' />\r\n            <Day day='11' />\r\n            <Day day='12' />\r\n            <Day day='13' modifier='day--weekend' />\r\n            <Day day='14' modifier='day--weekend' />\r\n            <Day day='15' />\r\n            <Day day='16' />\r\n            <Day day='17' />\r\n            <Day day='18' />\r\n            <Day day='19' />\r\n            <Day day='20' modifier='day--weekend' />\r\n            <Day day='21' modifier='day--weekend' />\r\n            <Day day='22' />\r\n            <Day day='23' />\r\n            <Day day='24' />\r\n            <Day day='25' />\r\n            <Day day='26' />\r\n            <Day day='27' modifier='day--weekend' />\r\n            <Day day='28' modifier='day--weekend' />\r\n            <Day day='29' />\r\n            <Day day='30' />\r\n            <Day day='31' />\r\n            <Day day='1' />\r\n            <Day day='2' />\r\n            <Day day='3' modifier='day--weekend' />\r\n            <Day day='4' modifier='day--weekend' />\r\n            <Day day='5' />\r\n            <Day day='6' modifier='day--inactive' />\r\n            <Day day='7' modifier='day--inactive' />\r\n            <Day day='8' modifier='day--inactive' />\r\n            <Day day='9' modifier='day--inactive' />\r\n            <Day day='10' modifier='day--inactive' />\r\n            <Day day='11' modifier='day--inactive' /> */}\r\n        </div>\r\n    );\r\n};\r\nexport default Days;\r\n","import { motion } from 'framer-motion';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DayNames from '../DayNames/DayNames';\r\nimport Days from '../Days/Days';\r\nimport './Calendar.scss';\r\n\r\nconst Calendar = () => {\r\n  const currentMonth = useSelector((state) => state.monthOffset.value);\r\n  const [lastRememberedMonth, setLastRememberedMonth] = useState();\r\n\r\n  const [swipeDirection, setSwipeDirection] = useState(-1);\r\n\r\n  const calendarVariants = {\r\n    hidden: { opacity: 0, x: swipeDirection * 100 },\r\n    show: {\r\n      opacity: 1,\r\n      x: 0,\r\n      transition: {\r\n        type: 'spring',\r\n        stiffness: 600,\r\n        damping: 50,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentMonth > lastRememberedMonth) {\r\n      setSwipeDirection(1);\r\n    } else {\r\n      setSwipeDirection(-1);\r\n    }\r\n    setLastRememberedMonth(currentMonth);\r\n  }, [currentMonth]);\r\n\r\n  return (\r\n    <motion.div\r\n      key={lastRememberedMonth}\r\n      className='calendar'\r\n      initial='hidden'\r\n      animate='show'\r\n      variants={calendarVariants}\r\n    >\r\n      <DayNames />\r\n      <Days />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import './ItemAdder.scss';\r\n\r\nconst ItemAdder = ({ children, handleClick }) => (\r\n  <div className='itemAdder' onClick={handleClick}>\r\n    <span className='material-icons'>add</span>\r\n    <span className='itemAdder__text'>{children}</span>\r\n  </div>\r\n);\r\n\r\nexport default ItemAdder;\r\n","import { motion } from 'framer-motion';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { setAddSubjectPopup } from '../../../redux/slices/addSubjectPopup';\r\nimport ItemAdder from '../ItemAdder/ItemAdder';\r\nimport './ItemList.scss';\r\n\r\nconst ItemList = ({ items, name, renderComponent, addFunction }) => {\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    show: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.07,\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <div className='itemList'>\r\n      <ItemAdder handleClick={() => addFunction()}>Dodaj {name}</ItemAdder>\r\n      <motion.div\r\n        className='itemList__content'\r\n        variants={containerVariants}\r\n        initial='hidden'\r\n        animate={items && items.length > 0 && 'show'}\r\n      >\r\n        {items && items.length > 0 && items.map((item) => renderComponent(item))}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemList;\r\n","import Button from '../../other/Button/Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport './EventCard.scss';\r\nimport { setRemoveEventPopup } from '../../../redux/slices/removeEventPopup';\r\nimport { setChosenEvent } from '../../../redux/slices/chosenEvent';\r\nimport { setEditEventPopup } from '../../../redux/slices/editEventPopup';\r\n\r\nconst EventCard = ({ event }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const editClicked = () => {\r\n    dispatch(setChosenEvent(event.id));\r\n    dispatch(setEditEventPopup(true));\r\n  };\r\n\r\n  const removeClicked = () => {\r\n    dispatch(setChosenEvent(event.id));\r\n    dispatch(setRemoveEventPopup(true));\r\n  };\r\n\r\n  const eventTypeDictionary = {\r\n    Egzamin: 'red',\r\n    Kolokwium: 'red',\r\n    Laboratorium: 'blue',\r\n    Projekt: 'green',\r\n    Wyk≈Çad: 'green',\r\n    Inne: 'yellow',\r\n  };\r\n\r\n  return (\r\n    <div className='eventCard'>\r\n      <div className={`eventCard__topbar eventCard__topbar--${eventTypeDictionary[event.type]}`}>\r\n        <h3 className='eventCard__title'>{event.subjectLongName}</h3>\r\n        <div className='eventCard__buttons'>\r\n          <Button modifier='button--transparent button--edit button--small' handleClick={() => editClicked()}>\r\n            <span className='material-icons'>edit</span>\r\n          </Button>\r\n          <Button modifier='button--transparent button--delete button--small' handleClick={() => removeClicked()}>\r\n            <span className='material-icons'>delete</span>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className='eventCard__panel'>\r\n        <div className='eventCard__tags'>\r\n          <div className='eventCard__tag'>\r\n            <span className='material-icons'>label</span> {event.type}\r\n          </div>\r\n          <div className='eventCard__tag'>\r\n            <span className='material-icons'>schedule</span>\r\n            {event.time}\r\n          </div>\r\n          <div className='eventCard__tag'>\r\n            <span className='material-icons'>info</span>Informacja\r\n          </div>\r\n        </div>\r\n        <div className='eventCard__description'>{event.description}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventCard;\r\n","import { motion } from 'framer-motion';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport ItemList from '../../other/ItemList/ItemList';\r\nimport EventCard from '../EventCard/EventCard';\r\nimport './DailyEvents.scss';\r\n\r\nconst itemVariants = {\r\n  hidden: { opacity: 0, y: 50 },\r\n  show: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: {\r\n      type: 'spring',\r\n      stiffness: 600,\r\n      damping: 50,\r\n    },\r\n  },\r\n};\r\n\r\nconst DailyEvents = () => {\r\n  const dispatch = useDispatch();\r\n  const [localEvents, setLocalEvents] = useState();\r\n\r\n  const renderEvent = (event) => (\r\n    <motion.div key={event.id} variants={itemVariants}>\r\n      <EventCard key={event.id} event={event} />\r\n    </motion.div>\r\n  );\r\n  const dailyEvents = useSelector((state) => state.dailyEvents.value);\r\n\r\n  useEffect(() => {\r\n    setLocalEvents([]);\r\n    setTimeout(() => {\r\n      setLocalEvents(dailyEvents);\r\n    }, 1);\r\n  }, [dailyEvents]);\r\n\r\n  return (\r\n    <div className='dailyEvents'>\r\n      <ItemList\r\n        name='Wydarzenie'\r\n        items={localEvents}\r\n        renderComponent={renderEvent}\r\n        addFunction={() => dispatch(setAddEventPopup(true))}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyEvents;\r\n","import './CourseInfo.scss';\r\n\r\nconst CourseInfo = ({ course, university }) => (\r\n  <div className='courseInfo'>\r\n    <h3 className='courseInfo__subtitle'>{university}</h3>\r\n    <h2 className='courseInfo__title'>{course}</h2>\r\n  </div>\r\n);\r\n\r\nexport default CourseInfo;\r\n","import { useDispatch } from 'react-redux';\r\nimport Button from '../Button/Button';\r\nimport './ItemBar.scss';\r\n\r\nconst ItemBar = ({ children, handleEdit, handleDelete }) => {\r\n  const editPressed = () => {\r\n    handleEdit();\r\n  };\r\n\r\n  const deletePressed = () => {\r\n    handleDelete();\r\n  };\r\n\r\n  return (\r\n    <div className='itemBar'>\r\n      <h3 className='itemBar__title'>{children}</h3>\r\n      <div className='itemBar__buttons'>\r\n        <Button modifier='button--transparent button--edit' handleClick={() => editPressed()}>\r\n          <span className='material-icons'>edit</span>\r\n        </Button>\r\n        <Button modifier='button--transparent button--delete' handleClick={() => deletePressed()}>\r\n          <span className='material-icons'>delete</span>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemBar;\r\n","import ItemList from '../../other/ItemList/ItemList';\r\nimport CourseInfo from '../CourseInfo/CourseInfo';\r\nimport ItemBar from '../../other/ItemBar/ItemBar';\r\nimport './AdminPanel.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setRemoveSubjectPopup } from '../../../redux/slices/removeSubjectPopup';\r\nimport { setChosenSubject } from '../../../redux/slices/chosenSubject';\r\nimport { setEditSubjectPopup } from '../../../redux/slices/editSubjectPopup';\r\nimport { setAddSubjectPopup } from '../../../redux/slices/addSubjectPopup';\r\nimport { setEditGroupPopup } from '../../../redux/slices/editGroupPopup';\r\nimport { setRemoveGroupPopup } from '../../../redux/slices/removeGroupPopup';\r\nimport { setAddGroupPopup } from '../../../redux/slices/addGroupPopup';\r\nimport { setChosenGroupAdmin } from '../../../redux/slices/chosenGroupAdmin';\r\n\r\nconst AdminPanel = () => {\r\n  const dispatch = useDispatch();\r\n  const subjects = useSelector((state) => state.subjects.value);\r\n  const groups = useSelector((state) => state.groups.value);\r\n  const yearCourseInformation = useSelector((state) => state.yearCourseInformation.value);\r\n\r\n  const renderBarCourses = ({ id, name, shortName }) => (\r\n    <ItemBar\r\n      key={name}\r\n      handleEdit={() => {\r\n        dispatch(setChosenSubject(id));\r\n        dispatch(setEditSubjectPopup(true));\r\n      }}\r\n      handleDelete={() => {\r\n        dispatch(setChosenSubject(id));\r\n        dispatch(setRemoveSubjectPopup(true));\r\n      }}\r\n    >\r\n      {name} ({shortName})\r\n    </ItemBar>\r\n  );\r\n\r\n  const renderBarGroups = ({ id, groupName, groupNumber }) => (\r\n    <ItemBar\r\n      key={groupName}\r\n      handleEdit={() => {\r\n        dispatch(setChosenGroupAdmin(id));\r\n        dispatch(setEditGroupPopup(true));\r\n      }}\r\n      handleDelete={() => {\r\n        dispatch(setChosenGroupAdmin(id));\r\n        dispatch(setRemoveGroupPopup(true));\r\n      }}\r\n    >\r\n      {groupName} ({groupNumber})\r\n    </ItemBar>\r\n  );\r\n\r\n  return (\r\n    <div className='adminPanel'>\r\n      <div className='scrollable'>\r\n        <ItemList\r\n          renderComponent={renderBarCourses}\r\n          items={subjects}\r\n          name='przedmiot'\r\n          addFunction={() => dispatch(setAddSubjectPopup(true))}\r\n        />\r\n      </div>\r\n      <div className='scrollable'>\r\n        <ItemList\r\n          renderComponent={renderBarGroups}\r\n          items={groups}\r\n          name='grupƒô'\r\n          addFunction={() => dispatch(setAddGroupPopup(true))}\r\n        />\r\n      </div>\r\n      <CourseInfo course={yearCourseInformation.course} university={yearCourseInformation.university} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import ReactDOM from 'react-dom';\r\nimport './Modal.scss';\r\nimport { motion } from 'framer-motion';\r\nimport React, { useState } from 'react';\r\n\r\nconst Modal = ({ children, errorMessage }) => {\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <motion.div\r\n        className='modal__background'\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ ease: [0.17, 0.67, 0.4, 0.88] }}\r\n      >\r\n        <motion.div\r\n          className='modal__body'\r\n          initial={{ y: 30, scale: 0.9 }}\r\n          animate={{ y: 0, scale: 1 }}\r\n          exit={{ y: 30, scale: 0.9 }}\r\n          transition={{ ease: [0.17, 0.67, 0.4, 0.88] }}\r\n        >\r\n          {children}\r\n          {errorMessage}\r\n        </motion.div>\r\n      </motion.div>\r\n    </>,\r\n\r\n    document.querySelector('#modal')\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport Modal from '../../user/Modal/Modal';\r\nimport './Modals.scss';\r\n\r\nconst AddEventModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const currentlyChosenGroup = useSelector((state) => state.chosenGroupID.value);\r\n  const subjects = useSelector((state) => state.subjects.value);\r\n  const groups = useSelector((state) => state.groups.value);\r\n  const types = useSelector((state) => state.types.value);\r\n  const date = useSelector((state) => state.chosenDate.value);\r\n\r\n  const { id } = useParams();\r\n  const [subjectID, setSubjectID] = useState(0);\r\n  const [groupID, setGroupID] = useState(0);\r\n  const [groupIDs, setGroupIDs] = useState([]);\r\n  const [typeID, setTypeID] = useState(0);\r\n  const [time, setTime] = useState('12:00');\r\n  const [description, setDescription] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    setTypeID(types[0].id);\r\n    setSubjectID(subjects[0].id);\r\n    setGroupID(currentlyChosenGroup);\r\n    setGroupIDs([currentlyChosenGroup]);\r\n  }, []);\r\n\r\n  const addEvent = async () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        subjectID: subjectID,\r\n        yearCourseId: id,\r\n        name: 'temporary name',\r\n        groupIds: groupIDs,\r\n        date: date + 'T' + time,\r\n        description: description,\r\n        eventTypeId: typeID,\r\n        password: password,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Events`, requestOptions);\r\n    if (response.ok) {\r\n      dispatch(setAddEventPopup(false));\r\n      dispatch(forceEventsRefresh());\r\n    } else {\r\n      setErrorMessage('Nieprawid≈Çowe has≈Ço!');\r\n    }\r\n  };\r\n\r\n  const formAllGroupArray = () => {\r\n    let groupsTemp = [];\r\n    for (let group of groups) {\r\n      groupsTemp.push(group.id);\r\n    }\r\n\r\n    return groupsTemp;\r\n  };\r\n\r\n  const updateSubjectID = (e) => {\r\n    setSubjectID(e.target.value);\r\n  };\r\n\r\n  const updateGroupID = (e) => {\r\n    setGroupID(e.target.value);\r\n\r\n    if (e.target.value == -1) {\r\n      setGroupIDs(formAllGroupArray());\r\n    } else {\r\n      setGroupIDs([e.target.value]);\r\n    }\r\n  };\r\n\r\n  const updateTypeID = (e) => {\r\n    setTypeID(e.target.value);\r\n  };\r\n\r\n  const updateTime = (e) => {\r\n    setTime(e.target.value);\r\n  };\r\n\r\n  const updateDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleAcceptClick = (e) => {\r\n    e.preventDefault();\r\n    addEvent();\r\n  };\r\n\r\n  const handleCloseClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setAddEventPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal errorMessage={errorMessage}>\r\n      <h2>Dodawanie wydarzenia</h2>\r\n      <label htmlFor='subject'>Przedmiot</label>\r\n      <br />\r\n      <select className='event-adder__input' id='subject' value={subjectID} onChange={updateSubjectID}>\r\n        {subjects.map((subject) => (\r\n          <option key={subject.id} value={subject.id}>\r\n            {subject.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='event-adder__label' htmlFor='group'>\r\n        Grupa\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='group' value={groupID} onChange={updateGroupID}>\r\n        <option key={0} value={-1}>\r\n          Wszystkie\r\n        </option>\r\n        {groups.map((group) => (\r\n          <option key={group.id} value={group.id}>\r\n            {group.groupNumber}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='event-adder__label' htmlFor='type'>\r\n        Typ\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='type' value={typeID} onChange={updateTypeID}>\r\n        {types.map((type) => (\r\n          <option key={type.id} value={type.id}>\r\n            {type.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='edition__label' htmlFor='time'>\r\n        Godzina\r\n      </label>\r\n      <br />\r\n      <input\r\n        type='time'\r\n        id='time'\r\n        name='time'\r\n        min='07:00'\r\n        value='16:00:00'\r\n        max='21:00'\r\n        value={time}\r\n        onChange={updateTime}\r\n      ></input>\r\n      <br />\r\n      <label className='edition__label' htmlFor='description'>\r\n        Opis\r\n      </label>\r\n      <br />\r\n      <textarea\r\n        id='description'\r\n        name='description'\r\n        rows='5'\r\n        cols='30'\r\n        placeholder='Tu wpisz opis...'\r\n        value={description}\r\n        onChange={updateDescription}\r\n      ></textarea>\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Has≈Ço\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Has≈Ço' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n        Utw√≥rz\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddEventModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport { setRemoveEventPopup } from '../../../redux/slices/removeEventPopup';\r\nimport Modal from '../../user/Modal/Modal';\r\n\r\nconst RemoveEventModal = () => {\r\n  const dispatch = useDispatch();\r\n  const chosenEventID = useSelector((state) => state.chosenEvent.value);\r\n\r\n  const { id } = useParams();\r\n\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const deletePressed = async () => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(\r\n      `https://kiedykolos.bieda.it/yearCourses/${id}/Events/${chosenEventID}`,\r\n      requestOptions\r\n    );\r\n\r\n    if (response.ok) {\r\n      dispatch(setRemoveEventPopup(false));\r\n      dispatch(forceEventsRefresh());\r\n    } else {\r\n      setErrorMessage('Nieprawid≈Çowe has≈Ço!');\r\n    }\r\n  };\r\n  const cancelPressed = () => {\r\n    dispatch(setRemoveEventPopup(false));\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Modal errorMessage={errorMessage}>\r\n      <h2>Usuwanie wydarzenia {chosenEventID}</h2>\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Has≈Ço\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Has≈Ço' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={cancelPressed}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={deletePressed}>\r\n        Usu≈Ñ\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveEventModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport dayjs from 'dayjs';\r\nimport { setDailyEvents } from '../../redux/slices/dailyEvents';\r\nimport { setAllEvents } from '../../redux/slices/allEvents';\r\nimport { setSubjects } from '../../redux/slices/subjects';\r\nimport { setGroups } from '../../redux/slices/groups';\r\nimport { setTypes } from '../../redux/slices/types';\r\nimport { setChosenGroupID } from '../../redux/slices/chosenGroupIDSlice';\r\n\r\nconst UserBackgroundAPI = () => {\r\n  const dispatch = useDispatch();\r\n  const baseURL = 'https://kiedykolos.bieda.it/';\r\n\r\n  const forceEventsRefresh = useSelector((state) => state.forceEventsRefresh.value);\r\n  const chosenDate = useSelector((state) => state.chosenDate.value);\r\n  const chosenGroup = useSelector((state) => state.chosenGroupID.value);\r\n\r\n  const [dataDownloaded, setDataDownloaded] = useState(false);\r\n  const [eventsLocal, setEventsLocal] = useState([]);\r\n  const [typesLocal, setTypesLocal] = useState([]);\r\n  const [subjectsLocal, setSubjectsLocal] = useState([]);\r\n  const [groupsLocal, setGroupsLocal] = useState([]);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    console.log('Downloading data...');\r\n\r\n    downloadData();\r\n  }, [forceEventsRefresh, chosenGroup]);\r\n\r\n  useEffect(() => {\r\n    buildEvents();\r\n    buildDayEvents(chosenDate);\r\n  }, [dataDownloaded]);\r\n\r\n  useEffect(async () => {\r\n    buildDayEvents(chosenDate);\r\n  }, [chosenDate]);\r\n\r\n  const getResource = async (extensionURL) => {\r\n    const URL = baseURL + extensionURL;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n    return data.result;\r\n  };\r\n\r\n  const getEvents = async () => {\r\n    const data = await getResource(`yearCourses/${id}/groups/${chosenGroup}/events`);\r\n    return data;\r\n  };\r\n\r\n  const getSubjects = async () => {\r\n    const data = await getResource(`yearCourses/${id}/subjects`);\r\n    dispatch(setSubjects(data));\r\n    return data;\r\n  };\r\n\r\n  const getTypes = async () => {\r\n    const data = await getResource(`eventTypes`);\r\n    dispatch(setTypes(data));\r\n    return data;\r\n  };\r\n\r\n  const getGroups = async () => {\r\n    const data = await getResource(`yearCourses/${id}/groups`);\r\n    dispatch(setGroups(data));\r\n    return data;\r\n  };\r\n\r\n  const downloadData = async () => {\r\n    setEventsLocal(await getEvents());\r\n    setSubjectsLocal(await getSubjects());\r\n    setTypesLocal(await getTypes());\r\n\r\n    checkGroupCorectness(await getGroups());\r\n  };\r\n\r\n  const checkGroupCorectness = (groups) => {\r\n    for (let group of groups) {\r\n      if (chosenGroup == group.id) {\r\n        setDataDownloaded(!dataDownloaded);\r\n        return;\r\n      }\r\n    }\r\n\r\n    dispatch(setChosenGroupID(groups[0].id));\r\n    console.log('Unknown group ID. Changing to default...');\r\n  };\r\n\r\n  const buildEvents = async () => {\r\n    if (eventsLocal.length == 0) {\r\n      return;\r\n    }\r\n\r\n    let eventsConnected = [];\r\n    for (let event of eventsLocal) {\r\n      let eventData = {\r\n        date: dayjs(event.date).format('YYYY-MM-DD'),\r\n        subjectLongName: getPropertyFromObjectByID(subjectsLocal, event.subjectId, 'name'),\r\n        subjectShortName: getPropertyFromObjectByID(subjectsLocal, event.subjectId, 'shortName'),\r\n        type: getPropertyFromObjectByID(typesLocal, event.eventTypeId, 'name'),\r\n      };\r\n      eventsConnected.push(eventData);\r\n    }\r\n    dispatch(setAllEvents(eventsConnected));\r\n  };\r\n\r\n  const buildDayEvents = async (date) => {\r\n    let dayEvents = [];\r\n    for (let event of eventsLocal) {\r\n      if (dayjs(event.date).format('YYYY-MM-DD') != date) {\r\n        continue;\r\n      }\r\n      let eventData = {\r\n        id: event.id,\r\n        date: dayjs(event.date).format('YYYY-MM-DD'),\r\n        description: event.description,\r\n        subjectLongName: getPropertyFromObjectByID(subjectsLocal, event.subjectId, 'name'),\r\n        type: getPropertyFromObjectByID(typesLocal, event.eventTypeId, 'name'),\r\n        time: dayjs(event.date).format('HH:mm'),\r\n      };\r\n      dayEvents.push(eventData);\r\n    }\r\n    dispatch(setDailyEvents(dayEvents));\r\n  };\r\n\r\n  const getPropertyFromObjectByID = (array, searchedID, searchedProperty) => {\r\n    for (let object of array) {\r\n      if (object.id == searchedID) {\r\n        return object[searchedProperty];\r\n      }\r\n    }\r\n  };\r\n\r\n  return null;\r\n};\r\n\r\nexport default UserBackgroundAPI;\r\n","import dayjs from 'dayjs';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { setEditEventPopup } from '../../../redux/slices/editEventPopup';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport Modal from '../../user/Modal/Modal';\r\n\r\nconst EditEventModal = () => {\r\n  const dispatch = useDispatch();\r\n  const subjects = useSelector((state) => state.subjects.value);\r\n  const groups = useSelector((state) => state.groups.value);\r\n  const types = useSelector((state) => state.types.value);\r\n  const chosenEventID = useSelector((state) => state.chosenEvent.value);\r\n\r\n  const { id } = useParams();\r\n  const [subjectID, setSubjectID] = useState(0);\r\n  const [groupID, setGroupID] = useState(0);\r\n  const [groupIDs, setGroupIDs] = useState([]);\r\n  const [typeID, setTypeID] = useState(0);\r\n  const [time, setTime] = useState('12:00');\r\n  const [date, setDate] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    setInitialEventData();\r\n    formAllGroupArray();\r\n  }, []);\r\n\r\n  const setInitialEventData = async () => {\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Events/${chosenEventID}`);\r\n    const json = await response.json();\r\n    const eventData = await json.result;\r\n\r\n    setTypeID(eventData.eventTypeId);\r\n    setSubjectID(eventData.subjectId);\r\n    setGroupID(eventData.groupIds.length > 1 ? -1 : eventData.groupIds[0]);\r\n    setGroupIDs(eventData.groupIds);\r\n\r\n    setDescription(eventData.description);\r\n    setTime(dayjs(eventData.date).format('HH:mm'));\r\n    setDate(dayjs(eventData.date).format('YYYY-MM-DD'));\r\n  };\r\n\r\n  const formAllGroupArray = () => {\r\n    let groupsTemp = [];\r\n    for (let group of groups) {\r\n      groupsTemp.push(group.id);\r\n    }\r\n\r\n    return groupsTemp;\r\n  };\r\n\r\n  const removeEvent = async () => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(\r\n      `https://kiedykolos.bieda.it/yearCourses/${id}/Events/${chosenEventID}`,\r\n      requestOptions\r\n    );\r\n\r\n    if (response.ok) {\r\n      dispatch(setEditEventPopup(false));\r\n      dispatch(forceEventsRefresh());\r\n    } else {\r\n      setErrorMessage('Nieprawid≈Çowe has≈Ço!');\r\n    }\r\n  };\r\n\r\n  const addEvent = async () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        subjectID: subjectID,\r\n        yearCourseId: id,\r\n        name: 'temporary name',\r\n        groupIds: groupIDs,\r\n        date: date + 'T' + time,\r\n        description: description,\r\n        eventTypeId: typeID,\r\n        password: password,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Events`, requestOptions);\r\n\r\n    if (response.ok) {\r\n      dispatch(setEditEventPopup(false));\r\n      dispatch(forceEventsRefresh());\r\n    }\r\n  };\r\n\r\n  const updateSubjectID = (e) => {\r\n    setSubjectID(e.target.value);\r\n  };\r\n\r\n  const updateGroupID = (e) => {\r\n    setGroupID(e.target.value);\r\n\r\n    if (e.target.value == -1) {\r\n      setGroupIDs(formAllGroupArray());\r\n    } else {\r\n      setGroupIDs([e.target.value]);\r\n    }\r\n  };\r\n\r\n  const updateTypeID = (e) => {\r\n    setTypeID(e.target.value);\r\n  };\r\n\r\n  const updateTime = (e) => {\r\n    setTime(e.target.value);\r\n  };\r\n\r\n  const updateDate = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n\r\n  const updateDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const acceptClicked = (e) => {\r\n    e.preventDefault();\r\n    removeEvent();\r\n    addEvent();\r\n  };\r\n\r\n  const closeClicked = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setEditEventPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal errorMessage={errorMessage}>\r\n      <h2>Edytowanie wydarzenia {chosenEventID}</h2>\r\n      <label htmlFor='subject'>Przedmiot</label>\r\n      <br />\r\n      <select className='event-adder__input' id='subject' value={subjectID} onChange={updateSubjectID}>\r\n        {subjects.map((subject) => (\r\n          <option key={subject.id} value={subject.id}>\r\n            {subject.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='event-adder__label' htmlFor='group'>\r\n        Grupa\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='group' value={groupID} onChange={updateGroupID}>\r\n        <option key={0} value={-1}>\r\n          Wszystkie\r\n        </option>\r\n        {groups.map((group) => (\r\n          <option key={group.id} value={group.id}>\r\n            {group.groupNumber}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='event-adder__label' htmlFor='type'>\r\n        Typ\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='type' value={typeID} onChange={updateTypeID}>\r\n        {types.map((type) => (\r\n          <option key={type.id} value={type.id}>\r\n            {type.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='edition__label' htmlFor='time'>\r\n        Godzina\r\n      </label>\r\n      <br />\r\n      <input\r\n        type='time'\r\n        id='time'\r\n        name='time'\r\n        min='07:00'\r\n        value='16:00:00'\r\n        max='21:00'\r\n        value={time}\r\n        onChange={updateTime}\r\n      ></input>\r\n      <br />\r\n      <label className='edition__label' htmlFor='date'>\r\n        Data\r\n      </label>\r\n      <br />\r\n      <input\r\n        type='date'\r\n        id='date'\r\n        name='date'\r\n        min='07:00'\r\n        value='16:00:00'\r\n        max='21:00'\r\n        value={date}\r\n        onChange={updateDate}\r\n      ></input>\r\n      <br />\r\n      <label className='edition__label' htmlFor='description'>\r\n        Opis\r\n      </label>\r\n      <br />\r\n      <textarea\r\n        id='description'\r\n        name='description'\r\n        rows='5'\r\n        cols='30'\r\n        placeholder='Tu wpisz opis...'\r\n        value={description}\r\n        onChange={updateDescription}\r\n      ></textarea>\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Has≈Ço\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Has≈Ço' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={closeClicked}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={acceptClicked}>\r\n        Edytuj wydarzenie\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditEventModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setChosenGroupID } from '../../../redux/slices/chosenGroupIDSlice';\r\nimport { setSettingsPopup } from '../../../redux/slices/settingsPopup';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst SettingsModal = () => {\r\n  const dispatch = useDispatch();\r\n  const groups = useSelector((state) => state.groups.value);\r\n  const choosenGroupID = useSelector((state) => state.chosenGroupID.value);\r\n\r\n  const [groupID, setGroupID] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setGroupID(choosenGroupID);\r\n  }, [choosenGroupID]);\r\n\r\n  const updateGroupID = (e) => {\r\n    setGroupID(e.target.value);\r\n  };\r\n\r\n  const acceptClicked = () => {\r\n    dispatch(setSettingsPopup(false));\r\n    dispatch(setChosenGroupID(groupID));\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Ustawienia</h2>\r\n      <label className='event-adder__label' htmlFor='group'>\r\n        Grupa\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='group' value={groupID} onChange={updateGroupID}>\r\n        {groups.map((group) => (\r\n          <option key={group.id} value={group.id}>\r\n            {group.groupNumber}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <br />\r\n      <button onClick={() => acceptClicked()}>Akceptuj</button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setSubjects } from '../../redux/slices/subjects';\r\nimport { setGroups } from '../../redux/slices/groups';\r\nimport { setYearCourseInformation } from '../../redux/slices/yearCourseInformation';\r\n\r\nconst AdminBackgroundAPI = () => {\r\n  const dispatch = useDispatch();\r\n  const baseURL = 'https://kiedykolos.bieda.it/';\r\n\r\n  const forceAdminRefresh = useSelector((state) => state.forceAdminRefresh.value);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    downloadData();\r\n  }, [forceAdminRefresh]);\r\n\r\n  const getResource = async (extensionURL) => {\r\n    const URL = baseURL + extensionURL;\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n    return data.result;\r\n  };\r\n\r\n  const getSubjects = async () => {\r\n    return await getResource(`yearCourses/${id}/subjects`);\r\n  };\r\n\r\n  const getGroups = async () => {\r\n    return await getResource(`yearCourses/${id}/groups`);\r\n  };\r\n\r\n  const getYearCourseInformation = async () => {\r\n    return await getResource(`yearCourses/${id}`);\r\n  };\r\n\r\n  const downloadData = async () => {\r\n    dispatch(setSubjects(await getSubjects()));\r\n    dispatch(setGroups(await getGroups()));\r\n    dispatch(setYearCourseInformation(await getYearCourseInformation()));\r\n  };\r\n\r\n  return null;\r\n};\r\n\r\nexport default AdminBackgroundAPI;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { setAddSubjectPopup } from '../../../redux/slices/addSubjectPopup';\r\nimport { forceAdminRefresh } from '../../../redux/slices/forceAdminRefresh';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport Modal from '../../user/Modal/Modal';\r\n\r\nconst AddSubjectModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { id } = useParams();\r\n\r\n  const [shortName, setShortName] = useState('');\r\n  const [longName, setLongName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const addSubject = async () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        yearCourseId: id,\r\n        name: longName,\r\n        shortName: shortName,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Subjects`, requestOptions);\r\n\r\n    if (response.ok) {\r\n      dispatch(setAddSubjectPopup(false));\r\n      dispatch(forceAdminRefresh());\r\n    } else {\r\n      setErrorMessage('Nieprawid≈Çowe has≈Ço!');\r\n    }\r\n  };\r\n\r\n  const updateShortName = (e) => {\r\n    setShortName(e.target.value);\r\n  };\r\n\r\n  const updateLongName = (e) => {\r\n    setLongName(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleAcceptClick = (e) => {\r\n    e.preventDefault();\r\n    addSubject();\r\n  };\r\n\r\n  const handleCloseClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setAddSubjectPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal errorMessage={errorMessage}>\r\n      <h2>Dodawanie przedmiotu</h2>\r\n      <label htmlFor='shortName'>Pe≈Çna nazwa</label>\r\n      <br />\r\n      <input type='text' id='shortName' value={longName} onChange={updateLongName} />\r\n      <br />\r\n      <br />\r\n      <label htmlFor='shortName'>Kr√≥tka nazwa</label>\r\n      <br />\r\n      <input type='text' id='shortName' value={shortName} onChange={updateShortName} />\r\n      <br />\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Has≈Ço\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Has≈Ço' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n        Utw√≥rz przedmiot\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddSubjectModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { forceAdminRefresh } from '../../../redux/slices/forceAdminRefresh';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport { setRemoveEventPopup } from '../../../redux/slices/removeEventPopup';\r\nimport { setRemoveSubjectPopup } from '../../../redux/slices/removeSubjectPopup';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst RemoveSubjectModal = () => {\r\n  const dispatch = useDispatch();\r\n  const chosenSubjectID = useSelector((state) => state.chosenSubject.value);\r\n\r\n  const { id } = useParams();\r\n\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const deletePressed = async () => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(\r\n      `https://kiedykolos.bieda.it/yearCourses/${id}/Subjects/${chosenSubjectID}`,\r\n      requestOptions\r\n    );\r\n\r\n    if (response.ok) {\r\n      dispatch(setRemoveSubjectPopup(false));\r\n      dispatch(forceAdminRefresh());\r\n    } else {\r\n      setErrorMessage('Nieprawid≈Çowe has≈Ço!');\r\n    }\r\n  };\r\n  const cancelPressed = () => {\r\n    dispatch(setRemoveSubjectPopup(false));\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Modal errorMessage={errorMessage}>\r\n      <h2>Usuwanie przedmiotu {chosenSubjectID}</h2>\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Has≈Ço\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Has≈Ço' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={cancelPressed}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={deletePressed}>\r\n        Usu≈Ñ\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveSubjectModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { setAddSubjectPopup } from '../../../redux/slices/addSubjectPopup';\r\nimport { setEditSubjectPopup } from '../../../redux/slices/editSubjectPopup';\r\nimport { forceAdminRefresh } from '../../../redux/slices/forceAdminRefresh';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst EditSubjectModal = () => {\r\n  const dispatch = useDispatch();\r\n  const chosenSubjectID = useSelector((state) => state.chosenSubject.value);\r\n\r\n  const { id } = useParams();\r\n\r\n  const [shortName, setShortName] = useState('');\r\n  const [longName, setLongName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    setInitialSubjectData();\r\n  }, []);\r\n\r\n  const setInitialSubjectData = async () => {\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Subjects/${chosenSubjectID}`);\r\n\r\n    const json = await response.json();\r\n    const subjectData = await json.result;\r\n\r\n    setShortName(subjectData.shortName);\r\n    setLongName(subjectData.name);\r\n  };\r\n\r\n  const editSubject = async () => {\r\n    const requestOptions = {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        subjectId: chosenSubjectID,\r\n        yearCourseId: id,\r\n        name: longName,\r\n        shortName: shortName,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Subjects`, requestOptions);\r\n\r\n    if (response.ok) {\r\n      dispatch(setEditSubjectPopup(false));\r\n      dispatch(forceAdminRefresh());\r\n    } else {\r\n      setErrorMessage('Nieprawid≈Çowe has≈Ço!');\r\n    }\r\n  };\r\n\r\n  const updateShortName = (e) => {\r\n    setShortName(e.target.value);\r\n  };\r\n\r\n  const updateLongName = (e) => {\r\n    setLongName(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleAcceptClick = (e) => {\r\n    e.preventDefault();\r\n    editSubject();\r\n  };\r\n\r\n  const handleCloseClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setEditSubjectPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal errorMessage={errorMessage}>\r\n      <h2>Edytowanie przedmiotu {chosenSubjectID} </h2>\r\n      <label htmlFor='shortName'>Pe≈Çna nazwa</label>\r\n      <br />\r\n      <input type='text' id='shortName' value={longName} onChange={updateLongName} />\r\n      <br />\r\n      <br />\r\n      <label htmlFor='shortName'>Kr√≥tka nazwa</label>\r\n      <br />\r\n      <input type='text' id='shortName' value={shortName} onChange={updateShortName} />\r\n      <br />\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Has≈Ço\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Has≈Ço' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n        Edytuj\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditSubjectModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddGroupPopup } from '../../../redux/slices/addGroupPopup';\r\nimport { forceAdminRefresh } from '../../../redux/slices/forceAdminRefresh';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst AddGroupModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { id } = useParams();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const addGroup = async () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        yearCourseId: id,\r\n        groupName: name,\r\n        groupNumber: number,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Groups`, requestOptions);\r\n\r\n    if (response.ok) {\r\n      dispatch(setAddGroupPopup(false));\r\n      dispatch(forceAdminRefresh());\r\n    } else {\r\n      setErrorMessage('Nieprawid≈Çowe has≈Ço!');\r\n    }\r\n  };\r\n\r\n  const updateName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const updateNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleAcceptClick = (e) => {\r\n    e.preventDefault();\r\n    addGroup();\r\n  };\r\n\r\n  const handleCloseClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setAddGroupPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal errorMessage={errorMessage}>\r\n      <h2>Dodawanie grupy</h2>\r\n      <label htmlFor='shortName'>Nazwa</label>\r\n      <br />\r\n      <input type='text' id='groupName' value={name} onChange={updateName} />\r\n      <br />\r\n      <br />\r\n      <label htmlFor='shortName'>Numer grupy</label>\r\n      <br />\r\n      <input type='text' id='groupNumber' value={number} onChange={updateNumber} />\r\n      <br />\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Has≈Ço\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Has≈Ço' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n        Utw√≥rz\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddGroupModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { forceAdminRefresh } from '../../../redux/slices/forceAdminRefresh';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport { setRemoveEventPopup } from '../../../redux/slices/removeEventPopup';\r\nimport { setRemoveGroupPopup } from '../../../redux/slices/removeGroupPopup';\r\nimport { setRemoveSubjectPopup } from '../../../redux/slices/removeSubjectPopup';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst RemoveGroupModal = () => {\r\n  const dispatch = useDispatch();\r\n  const chosenGroup = useSelector((state) => state.chosenGroupAdmin.value);\r\n\r\n  const { id } = useParams();\r\n\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const deletePressed = async () => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Groups/${chosenGroup}`, requestOptions);\r\n\r\n    if (response.ok) {\r\n      dispatch(setRemoveGroupPopup(false));\r\n      dispatch(forceAdminRefresh());\r\n    } else {\r\n      setErrorMessage('Nieprawid≈Çowe has≈Ço!');\r\n    }\r\n  };\r\n  const cancelPressed = () => {\r\n    dispatch(setRemoveGroupPopup(false));\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Modal errorMessage={errorMessage}>\r\n      <h2>Usuwanie grupy {chosenGroup}</h2>\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Has≈Ço\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Has≈Ço' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={cancelPressed}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={deletePressed}>\r\n        Usu≈Ñ\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveGroupModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setEditGroupPopup } from '../../../redux/slices/editGroupPopup';\r\nimport { forceAdminRefresh } from '../../../redux/slices/forceAdminRefresh';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst EditGroupModal = () => {\r\n  const dispatch = useDispatch();\r\n  const chosenGroup = useSelector((state) => state.chosenGroupAdmin.value);\r\n\r\n  const { id } = useParams();\r\n\r\n  const [number, setNumber] = useState(0);\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    setInitialGroupData();\r\n  }, []);\r\n\r\n  const setInitialGroupData = async () => {\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Groups/${chosenGroup}`);\r\n\r\n    const json = await response.json();\r\n    const groupData = await json.result;\r\n\r\n    setNumber(groupData.groupNumber);\r\n    setName(groupData.groupName);\r\n  };\r\n\r\n  const editGroup = async () => {\r\n    const requestOptions = {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        groupId: chosenGroup,\r\n        yearCourseId: id,\r\n        groupNumber: number,\r\n        groupName: name,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Groups`, requestOptions);\r\n\r\n    if (response.ok) {\r\n      dispatch(setEditGroupPopup(false));\r\n      dispatch(forceAdminRefresh());\r\n    } else {\r\n      setErrorMessage('Nieprawid≈Çowe has≈Ço!');\r\n    }\r\n  };\r\n\r\n  const updateName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const updateNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleAcceptClick = (e) => {\r\n    e.preventDefault();\r\n    editGroup();\r\n  };\r\n\r\n  const handleCloseClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setEditGroupPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal errorMessage={errorMessage}>\r\n      <h2>Edytowanie groupy {chosenGroup} </h2>\r\n      <label htmlFor='shortName'>Nazwa</label>\r\n      <br />\r\n      <input type='text' id='shortName' value={name} onChange={updateName} />\r\n      <br />\r\n      <br />\r\n      <label htmlFor='shortName'>Numer grupy</label>\r\n      <br />\r\n      <input type='text' id='shortName' value={number} onChange={updateNumber} />\r\n      <br />\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Has≈Ço\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Has≈Ço' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n        Edytuj\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditGroupModal;\r\n","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ItemList from '../ItemList/ItemList';\r\nimport './NoIDPanel.scss';\r\n\r\nconst NoIDPanel = () => {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    const data = await fetch('https://kiedykolos.bieda.it/YearCourses');\r\n    const unjsoned = await data.json();\r\n    let result = unjsoned.result;\r\n    result = result.filter((item) => item.course != 'Test');\r\n    setItems(result);\r\n    console.log(result);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className='noIdContainer'>\r\n        <h1>To jest strona g≈Ç√≥wna</h1>\r\n        <p>Aby dostaƒá siƒô na stronƒô kierunku, podaj w linku ID (kiedy-kolos/#/{'{id}'})</p>\r\n\r\n        <h1>Je≈ºeli jeste≈õ starostƒÖ:</h1>\r\n        <p>\r\n          Skontaktuj siƒô z nami z pro≈õbƒÖ o otwarcie kierunku. Wy≈õlemy ci unikalny link, kt√≥rym podzielisz siƒô ze\r\n          studentami swojego kierunku. Od teraz Wasz kalendarz na sta≈Çe bƒôdzie dostƒôpny pod tym linkiem. Dostaniesz\r\n          r√≥wnie≈º has≈Ço, dziƒôki kt√≥remu bƒôdziesz m√≥g≈Ç tworzyƒá/edytowaƒá/usuwaƒá wydarzenia/przedmioty/grupy za pomocƒÖ\r\n          bardzo intuicyjnego panelu wbudowanego w stronƒô.\r\n        </p>\r\n\r\n        <h1>Je≈ºeli jeste≈õ studentem:</h1>\r\n        <p>\r\n          Po otrzymaniu linku od starosty twojego kierunku uzyskasz dostƒôp do kalendarza. Po klikniƒôciu ikonki ustawie≈Ñ\r\n          mo≈ºesz wybraƒá grupƒô. Wydarzenia zostanƒÖ przefiltrowane, dziƒôki czemu zobaczysz tylko te, kt√≥re ciebie dotyczƒÖ.\r\n          Twoje ustawienia zostanƒÖ zapamiƒôtane, umo≈ºliwiajƒÖc ci szybki i wygodny dostƒôp do wybranego kalendarza za\r\n          ka≈ºdym razem, gdy odwiedzisz kiedy kolos.\r\n        </p>\r\n\r\n        <h1>Kontakt</h1>\r\n        <a href='https://www.facebook.com/kiedykolos/' target='_blank'>\r\n          Facebook\r\n        </a>\r\n      </div>\r\n      <div className='yearCoursesList'>\r\n        <h2>Dostƒôpne kierunki:</h2>\r\n        <ul>\r\n          {items.length > 0 &&\r\n            items.map((item) => (\r\n              <Link to={`./${item.id}`}>\r\n                <li>\r\n                  {item.university}, {item.faculty}, {item.course}, Semestr {item.currentSemester}\r\n                </li>\r\n              </Link>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoIDPanel;\r\n","import Header from '../Header/Header';\r\nimport MonthPagination from '../../user/MonthPagination/MonthPagination';\r\nimport Toolbar from '../Toolbar/Toolbar';\r\nimport Calendar from '../../user/Calendar/Calendar';\r\nimport DailyEvents from '../../user/DailyEvents/DailyEvents';\r\nimport Title from '../Title/Title';\r\nimport AdminPanel from '../../admin/AdminPanel/AdminPanel';\r\nimport AddEventModal from '../../user/Modals/AddEventModal';\r\nimport RemoveEventModal from '../../user/Modals/RemoveEventModal';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport './Panel.scss';\r\nimport UserBackgroundAPI from '../../API/UserBackgroundAPI';\r\nimport EditEventModal from '../../user/Modals/EditEventModal';\r\nimport SettingsModal from '../../user/Modals/SettingsModal';\r\nimport AdminBackgroundAPI from '../../API/AdminBackgroundAPI';\r\nimport AddSubjectModal from '../../user/Modals/AddSubjectModal';\r\nimport RemoveSubjectModal from '../../user/Modals/RemoveSubjectModal';\r\nimport EditSubjectModal from '../../user/Modals/EditSubjectModal';\r\nimport AddGroupModal from '../../user/Modals/AddGroupModal';\r\nimport RemoveGroupModal from '../../user/Modals/RemoveGroupModal';\r\nimport EditGroupModal from '../../user/Modals/EditGroupModal';\r\nimport NoIDPanel from '../NoIDPanel/NoIDPanel';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport Modal from '../../user/Modal/Modal';\r\n\r\nconst Panel = () => {\r\n  const addEventsPopup = useSelector((state) => state.addEventPopup.value);\r\n  const removeEventsPopup = useSelector((state) => state.removeEventPopup.value);\r\n  const editEventPopup = useSelector((state) => state.editEventPopup.value);\r\n  const settingsPopup = useSelector((state) => state.settingsPopup.value);\r\n\r\n  const addSubjectPopup = useSelector((state) => state.addSubjectPopup.value);\r\n  const removeSubjectPopup = useSelector((state) => state.removeSubjectPopup.value);\r\n  const editSubjectPopup = useSelector((state) => state.editSubjectPopup.value);\r\n\r\n  const addGroupPopup = useSelector((state) => state.addGroupPopup.value);\r\n  const removeGroupPopup = useSelector((state) => state.removeGroupPopup.value);\r\n  const editGroupPopup = useSelector((state) => state.editGroupPopup.value);\r\n\r\n  return (\r\n    <div className='panel'>\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <NoIDPanel />\r\n        </Route>\r\n        <Route exact path='/:id'>\r\n          <UserBackgroundAPI />\r\n          <Header>\r\n            <MonthPagination />\r\n            <Toolbar />\r\n          </Header>\r\n          <Calendar />\r\n          <DailyEvents />\r\n          <AnimatePresence>\r\n            {addEventsPopup && <AddEventModal />}\r\n            {removeEventsPopup && <RemoveEventModal />}\r\n            {editEventPopup && <EditEventModal />}\r\n            {settingsPopup && <SettingsModal />}\r\n          </AnimatePresence>\r\n        </Route>\r\n        <Route path='/:id/admin'>\r\n          <AdminBackgroundAPI />\r\n          <Header>\r\n            <Title>Panel Administratora</Title>\r\n          </Header>\r\n          <AdminPanel />\r\n          <AnimatePresence>\r\n            {addSubjectPopup && <AddSubjectModal />}\r\n            {removeSubjectPopup && <RemoveSubjectModal />}\r\n            {editSubjectPopup && <EditSubjectModal />}\r\n\r\n            {addGroupPopup && <AddGroupModal />}\r\n            {removeGroupPopup && <RemoveGroupModal />}\r\n            {editGroupPopup && <EditGroupModal />}\r\n          </AnimatePresence>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import { Route, Switch } from 'react-router';\r\n\r\nimport Panel from './components/other/Panel/Panel';\r\n\r\nconst App = () => {\r\n    return <Panel />;\r\n};\r\n\r\nexport default App;\r\n","import { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { loadState, saveState } from './storage/localStorage';\r\nimport { createStore } from 'redux';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport allReducer from './reducers';\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'reduxjs-toolkit-persist/integration/react';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter basename='/'>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}