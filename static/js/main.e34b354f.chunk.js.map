{"version":3,"sources":["reducers/chosenDate.js","reducers/chosenGroup.js","reducers/addEventPopup.js","reducers/forceEventsRefresh.js","reducers/deleteEventPopup.js","reducers/chosenEvent.js","reducers/chosenTheme.js","reducers/editEventPopup.js","reducers/allEventsReducer.js","reducers/dayEventsReducer.js","reducers/eventTypesReducer.js","reducers/subjectsReducer.js","reducers/optionsPopup.js","reducers/groupsReducer.js","reducers/index.js","redux/slices/monthOffsetSlice.js","redux/slices/chosenDateSlice.js","redux/slices/dailyEvents.js","redux/slices/chosenGroupIDSlice.js","redux/slices/allEvents.js","redux/slices/addEventPopup.js","redux/slices/editEventPopup.js","redux/slices/settingsPopup.js","redux/slices/removeEventPopup.js","redux/slices/subjects.js","redux/slices/groups.js","redux/slices/types.js","redux/slices/forceEventsRefresh.js","redux/slices/chosenEvent.js","redux/slices/addSubjectPopup.js","redux/slices/chosenSubject.js","redux/slices/removeSubjectPopup.js","redux/slices/forceAdminRefresh.js","redux/slices/editSubjectPopup.js","redux/slices/addGroupPopup.js","redux/slices/editGroupPopup.js","redux/slices/removeGroupPopup.js","redux/slices/chosenGroupAdmin.js","redux/store.js","components/other/Header/Header.jsx","components/other/Button/Button.jsx","components/other/Title/Title.jsx","components/user/MonthPagination/MonthPagination.jsx","components/other/Toolbar/Toolbar.jsx","components/user/DayNames/DayNames.jsx","components/user/DayFlags/DayFlags.jsx","components/user/DayFooter/DayFooter.jsx","components/user/Day/Day.jsx","components/user/Days/Days.jsx","components/user/Calendar/Calendar.jsx","components/other/ItemAdder/ItemAdder.jsx","components/other/ItemList/ItemList.jsx","components/user/EventCard/EventCard.jsx","components/user/DailyEvents/DailyEvents.jsx","components/admin/CourseInfo/CourseInfo.jsx","components/other/ItemBar/ItemBar.jsx","components/admin/AdminPanel/AdminPanel.jsx","components/user/Modal/Modal.jsx","components/user/Modals/AddEventModal.jsx","components/user/Modals/RemoveEventModal.jsx","components/API/UserBackgroundAPI.js","components/user/Modals/EditEventModal.jsx","components/user/Modals/SettingsModal.jsx","components/API/AdminBackgroundAPI.js","components/user/Modals/AddSubjectModal.jsx","components/user/Modals/RemoveSubjectModal.jsx","components/user/Modals/EditSubjectModal.jsx","components/user/Modals/AddGroupModal.jsx","components/user/Modals/RemoveGroupModal.jsx","components/user/Modals/EditGroupModal.jsx","components/other/NoIDPanel/NoIDPanel.jsx","components/other/Panel/Panel.jsx","App.js","index.js"],"names":["dateReducer","state","action","type","payload","groupReducer","addEventPopupReducer","forceEventsRefreshReducer","deleteEventPopupReducer","chosenEventReducer","chosenThemeReducer","editEventPopupReducer","allEventsReducer","dayEventsReducer","eventTypesReducer","subjectsReducer","optionsPopupReducer","groupsReducer","combineReducers","allEvents","dayEvents","eventTypes","subjects","chosenDate","chosenGroup","addEventPopup","deleteEventPopup","editEventPopup","forceEventsRefresh","chosenEvent","chosenTheme","optionsPopup","groups","monthOffsetSlice","createSlice","name","initialState","value","reducers","incrementMonthOffset","decrementMonthOffset","setMonthOffset","actions","chosenDateSlice","dayjs","format","setChoosenDate","dailyEventsSlice","setDailyEvents","chosenGroupIDSlice","setChosenGroupID","allEventsSlice","setAllEvents","addEventPopupSlice","setAddEventPopup","editEventPopupSlice","setEditEventPopup","settingsPopupSlice","setSettingsPopup","removeEventPopupSlice","setRemoveEventPopup","subjectsSlice","setSubjects","groupsSlice","setGroups","typesSlice","setTypes","forceEventsRefreshSlice","chosenEventSlice","setChosenEvent","addSubjectPopupSlice","setAddSubjectPopup","chosenSubjectSlice","setChosenSubject","removeSubjectPopupSlice","setRemoveSubjectPopup","forceAdminRefreshSlice","forceAdminRefresh","editSubjectPopupSlice","setEditSubjectPopup","addGroupPopupSlice","setAddGroupPopup","editGroupPopupSlice","setEditGroupPopup","removeGroupPopupSlice","setRemoveGroupPopup","chosenGroupAdminSlice","setChosenGroupAdmin","persistConfig","key","storage","stateReconciler","autoMergeLevel1","whitelist","monthOffset","monthOffsetReducer","chosenDateReducer","chosenGroupID","chosenGroupIDReducer","dailyEvents","dailyEventsReducer","chosenSubject","chosenSubjectReducer","removeEventPopup","removeEventPopupReducer","settingsPopup","settingsPopupReducer","addSubjectPopup","addSubjectPopupReducer","removeSubjectPopup","removeSubjectPopupReducer","editSubjectPopup","editSubjectPopupReducer","forceAdminRefreshReducer","addGroupPopup","addGroupPopupReducer","editGroupPopup","editGroupPopupReducer","removeGroupPopup","removeGroupPopupReducer","chosenGroupAdmin","chosenGroupAdminReducer","types","typesReducer","_persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Header","props","className","children","Button","handleClick","modifier","onClick","Title","MonthPagination","dispatch","useDispatch","useSelector","useState","swipeDirection","setSwipeDirection","lastRememberedMonthOffset","setLastRememberedMonthOffset","titleVariants","hidden","opacity","x","show","transition","stiffness","damping","useEffect","motion","div","initial","animate","variants","parseInt","Toolbar","title","DayNames","DayFlags","handleResize","events","flags","useRef","calculateOtherCount","window","addEventListener","els","Array","from","current","counter","i","length","offsetTop","ref","map","event","subjectShortName","DayFooter","day","otherCount","Day","date","active","setOtherCount","selected","setSelected","choosenDate","filter","Days","daysOfWeek","days","setDays","initializeMonthDays","desiredDay","add","daysTemp","startDayOfMonth","startOf","startingDay","subtract","isDayInCurrentMonth","thisMonth","Calendar","currentMonth","lastRememberedMonth","setLastRememberedMonth","calendarVariants","ItemAdder","ItemList","items","renderComponent","addFunction","staggerChildren","item","EventCard","subjectLongName","id","time","description","itemVariants","y","DailyEvents","localEvents","setLocalEvents","setTimeout","CourseInfo","course","university","ItemBar","handleEdit","handleDelete","AdminPanel","shortName","groupName","groupNumber","Modal","ReactDOM","createPortal","exit","ease","scale","document","querySelector","AddEventModal","currentlyChosenGroup","useParams","subjectID","setSubjectID","groupID","setGroupID","groupIDs","setGroupIDs","typeID","setTypeID","setTime","setDescription","password","setPassword","addEvent","a","requestOptions","method","headers","body","JSON","stringify","yearCourseId","groupIds","eventTypeId","mode","fetch","ok","htmlFor","onChange","e","target","subject","groupsTemp","group","push","formAllGroupArray","min","max","rows","cols","placeholder","preventDefault","RemoveEventModal","chosenEventID","deletePressed","UserBackgroundAPI","dataDownloaded","setDataDownloaded","eventsLocal","setEventsLocal","typesLocal","setTypesLocal","subjectsLocal","setSubjectsLocal","console","log","downloadData","buildEvents","buildDayEvents","getResource","extensionURL","URL","response","json","data","result","getEvents","getSubjects","getTypes","getGroups","checkGroupCorectness","eventsConnected","eventData","getPropertyFromObjectByID","subjectId","array","searchedID","searchedProperty","object","EditEventModal","setDate","setInitialEventData","removeEvent","SettingsModal","choosenGroupID","AdminBackgroundAPI","groupsLocal","setGroupsLocal","AddSubjectModal","setShortName","longName","setLongName","addSubject","RemoveSubjectModal","chosenSubjectID","EditSubjectModal","setInitialSubjectData","subjectData","editSubject","AddGroupModal","setName","number","setNumber","addGroup","RemoveGroupModal","EditGroupModal","setInitialGroupData","groupData","editGroup","groupId","NoIDPanel","Panel","addEventsPopup","removeEventsPopup","exact","path","AnimatePresence","App","render","StrictMode","basename","loading","getElementById"],"mappings":"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","file":"static/js/main.e34b354f.chunk.js","sourcesContent":["const dateReducer = (state = \"2020-11-01\", action) => {\r\n    switch(action.type) {\r\n        case 'SET_DATE':\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dateReducer;","const groupReducer = (state = 1, action) => {\r\n    switch (action.type) {\r\n        case 'SET_GROUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default groupReducer;\r\n","const addEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_ADD_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default addEventPopupReducer;\r\n","const forceEventsRefreshReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'REFRESH':\r\n            return !state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default forceEventsRefreshReducer;\r\n","const deleteEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_DELETE_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default deleteEventPopupReducer;\r\n","const chosenEventReducer = (state = 0, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CHOSEN_EVENT':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default chosenEventReducer;\r\n","const chosenThemeReducer = (state = 'dark', action) => {\r\n    switch (action.type) {\r\n        case 'SET_CHOSEN_THEME':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default chosenThemeReducer;\r\n","const editEventPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_EDIT_EVENT_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default editEventPopupReducer;\r\n","const allEventsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_ALL_EVENTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default allEventsReducer;\r\n","const dayEventsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_DAY_EVENTS':\r\n            return [...action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dayEventsReducer;\r\n","const eventTypesReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_EVENT_TYPES':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default eventTypesReducer;\r\n","const subjectsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_SUBJECTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default subjectsReducer;\r\n","const optionsPopupReducer = (state = false, action) => {\r\n    switch (action.type) {\r\n        case 'SET_OPTIONS_POPUP':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default optionsPopupReducer;\r\n","const groupsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_GROUPS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default groupsReducer;\r\n","import dateReducer from './chosenDate';\r\nimport groupReducer from './chosenGroup';\r\nimport { combineReducers } from 'redux';\r\nimport addEventPopupReducer from './addEventPopup';\r\nimport forceEventsRefreshReducer from './forceEventsRefresh';\r\nimport deleteEventPopupReducer from './deleteEventPopup';\r\nimport chosenEventReducer from './chosenEvent';\r\nimport chosenThemeReducer from './chosenTheme';\r\nimport editEventPopupReducer from './editEventPopup';\r\nimport allEventsReducer from './allEventsReducer';\r\nimport dayEventsReducer from './dayEventsReducer';\r\nimport eventTypesReducer from './eventTypesReducer';\r\nimport subjectsReducer from './subjectsReducer';\r\nimport optionsPopupReducer from './optionsPopup';\r\nimport groupsReducer from './groupsReducer';\r\n\r\nconst allReducers = combineReducers({\r\n    allEvents: allEventsReducer,\r\n    dayEvents: dayEventsReducer,\r\n    eventTypes: eventTypesReducer,\r\n    subjects: subjectsReducer,\r\n    chosenDate: dateReducer,\r\n    chosenGroup: groupReducer,\r\n    addEventPopup: addEventPopupReducer,\r\n    deleteEventPopup: deleteEventPopupReducer,\r\n    editEventPopup: editEventPopupReducer,\r\n    forceEventsRefresh: forceEventsRefreshReducer,\r\n    chosenEvent: chosenEventReducer,\r\n    chosenTheme: chosenThemeReducer,\r\n    optionsPopup: optionsPopupReducer,\r\n    groups: groupsReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const monthOffsetSlice = createSlice({\r\n  name: 'monthOffset',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    incrementMonthOffset: (state) => {\r\n      state.value += 1;\r\n    },\r\n    decrementMonthOffset: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    setMonthOffset: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  incrementMonthOffset: incrementMonthOffset,\r\n  decrementMonthOffset: decrementMonthOffset,\r\n  setMonthOffset: setMonthOffset,\r\n} = monthOffsetSlice.actions;\r\n\r\nexport default monthOffsetSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport dayjs from 'dayjs';\r\n\r\nexport const chosenDateSlice = createSlice({\r\n    name: 'chosenDate',\r\n    initialState: {\r\n        value: dayjs().format('YYYY-MM-DD'),\r\n    },\r\n    reducers: {\r\n        setChoosenDate: (state, action) => {\r\n            state.value = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setChoosenDate: setChoosenDate } = chosenDateSlice.actions;\r\n\r\nexport default chosenDateSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const dailyEventsSlice = createSlice({\r\n  name: 'dailyEvents',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setDailyEvents: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setDailyEvents: setDailyEvents } = dailyEventsSlice.actions;\r\n\r\nexport default dailyEventsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const chosenGroupIDSlice = createSlice({\r\n  name: 'chosenGroupID',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    setChosenGroupID: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setChosenGroupID: setChosenGroupID } = chosenGroupIDSlice.actions;\r\n\r\nexport default chosenGroupIDSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const allEventsSlice = createSlice({\r\n  name: 'allEvents',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setAllEvents: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAllEvents: setAllEvents } = allEventsSlice.actions;\r\n\r\nexport default allEventsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const addEventPopupSlice = createSlice({\r\n  name: 'addEventPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setAddEventPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAddEventPopup: setAddEventPopup } = addEventPopupSlice.actions;\r\n\r\nexport default addEventPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const editEventPopupSlice = createSlice({\r\n  name: 'editEventPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setEditEventPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setEditEventPopup: setEditEventPopup } = editEventPopupSlice.actions;\r\n\r\nexport default editEventPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const settingsPopupSlice = createSlice({\r\n  name: 'settingsPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setSettingsPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setSettingsPopup: setSettingsPopup } = settingsPopupSlice.actions;\r\n\r\nexport default settingsPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const removeEventPopupSlice = createSlice({\r\n  name: 'removeEventPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setRemoveEventPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setRemoveEventPopup: setRemoveEventPopup } = removeEventPopupSlice.actions;\r\n\r\nexport default removeEventPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const subjectsSlice = createSlice({\r\n  name: 'subjects',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setSubjects: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setSubjects: setSubjects } = subjectsSlice.actions;\r\n\r\nexport default subjectsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const groupsSlice = createSlice({\r\n  name: 'groups',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setGroups: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setGroups: setGroups } = groupsSlice.actions;\r\n\r\nexport default groupsSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const typesSlice = createSlice({\r\n  name: 'types',\r\n  initialState: {\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    setTypes: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setTypes: setTypes } = typesSlice.actions;\r\n\r\nexport default typesSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const forceEventsRefreshSlice = createSlice({\r\n  name: 'forceEventsRefresh',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    forceEventsRefresh: (state, action) => {\r\n      state.value = !state.value;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { forceEventsRefresh: forceEventsRefresh } = forceEventsRefreshSlice.actions;\r\n\r\nexport default forceEventsRefreshSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport dayjs from 'dayjs';\r\n\r\nexport const chosenEventSlice = createSlice({\r\n  name: 'chosenEvent',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    setChosenEvent: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setChosenEvent: setChosenEvent } = chosenEventSlice.actions;\r\n\r\nexport default chosenEventSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const addSubjectPopupSlice = createSlice({\r\n  name: 'addSubjectPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setAddSubjectPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAddSubjectPopup: setAddSubjectPopup } = addSubjectPopupSlice.actions;\r\n\r\nexport default addSubjectPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const chosenSubjectSlice = createSlice({\r\n  name: 'chosenSubject',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    setChosenSubject: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setChosenSubject: setChosenSubject } = chosenSubjectSlice.actions;\r\n\r\nexport default chosenSubjectSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const removeSubjectPopupSlice = createSlice({\r\n  name: 'removeSubjectPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setRemoveSubjectPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setRemoveSubjectPopup: setRemoveSubjectPopup } = removeSubjectPopupSlice.actions;\r\n\r\nexport default removeSubjectPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const forceAdminRefreshSlice = createSlice({\r\n  name: 'forceAdminRefresh',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    forceAdminRefresh: (state, action) => {\r\n      state.value = !state.value;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { forceAdminRefresh: forceAdminRefresh } = forceAdminRefreshSlice.actions;\r\n\r\nexport default forceAdminRefreshSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const editSubjectPopupSlice = createSlice({\r\n  name: 'editSubjectPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setEditSubjectPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setEditSubjectPopup: setEditSubjectPopup } = editSubjectPopupSlice.actions;\r\n\r\nexport default editSubjectPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const addGroupPopupSlice = createSlice({\r\n  name: 'addGroupPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setAddGroupPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAddGroupPopup: setAddGroupPopup } = addGroupPopupSlice.actions;\r\n\r\nexport default addGroupPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const editGroupPopupSlice = createSlice({\r\n  name: 'editGroupPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setEditGroupPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setEditGroupPopup: setEditGroupPopup } = editGroupPopupSlice.actions;\r\n\r\nexport default editGroupPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const removeGroupPopupSlice = createSlice({\r\n  name: 'removeGroupPopup',\r\n  initialState: {\r\n    value: false,\r\n  },\r\n  reducers: {\r\n    setRemoveGroupPopup: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setRemoveGroupPopup: setRemoveGroupPopup } = removeGroupPopupSlice.actions;\r\n\r\nexport default removeGroupPopupSlice.reducer;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const chosenGroupAdminSlice = createSlice({\r\n  name: 'chosenGroupAdmin',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    setChosenGroupAdmin: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setChosenGroupAdmin: setChosenGroupAdmin } = chosenGroupAdminSlice.actions;\r\n\r\nexport default chosenGroupAdminSlice.reducer;\r\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistReducer,\r\n  persistStore,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'reduxjs-toolkit-persist';\r\nimport storage from 'reduxjs-toolkit-persist/lib/storage';\r\nimport autoMergeLevel1 from 'reduxjs-toolkit-persist/lib/stateReconciler/autoMergeLevel1';\r\n\r\nimport monthOffsetReducer from './slices/monthOffsetSlice';\r\nimport chosenDateReducer from './slices/chosenDateSlice';\r\nimport dailyEventsReducer from './slices/dailyEvents';\r\nimport chosenGroupIDReducer from './slices/chosenGroupIDSlice';\r\nimport allEventsReducer from './slices/allEvents';\r\nimport addEventPopupReducer from './slices/addEventPopup';\r\nimport editEventPopupReducer from './slices/editEventPopup';\r\nimport settingsPopupReducer from './slices/settingsPopup';\r\nimport removeEventPopupReducer from './slices/removeEventPopup';\r\nimport subjectsReducer from './slices/subjects';\r\nimport groupsReducer from './slices/groups';\r\nimport typesReducer from './slices/types';\r\nimport forceEventsRefreshReducer from './slices/forceEventsRefresh';\r\nimport chosenEventReducer from './slices/chosenEvent';\r\nimport addSubjectPopupReducer from './slices/addSubjectPopup';\r\nimport chosenSubjectReducer from './slices/chosenSubject';\r\nimport removeSubjectPopupReducer from './slices/removeSubjectPopup';\r\nimport forceAdminRefreshReducer from './slices/forceAdminRefresh';\r\nimport editSubjectPopupReducer from './slices/editSubjectPopup';\r\nimport addGroupPopupReducer from './slices/addGroupPopup';\r\nimport editGroupPopupReducer from './slices/editGroupPopup';\r\nimport removeGroupPopupReducer from './slices/removeGroupPopup';\r\nimport chosenGroupAdminReducer from './slices/chosenGroupAdmin';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: storage,\r\n  stateReconciler: autoMergeLevel1,\r\n  whitelist: ['chosenGroupID'],\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  monthOffset: monthOffsetReducer,\r\n  chosenDate: chosenDateReducer,\r\n  chosenGroupID: chosenGroupIDReducer,\r\n  dailyEvents: dailyEventsReducer,\r\n  allEvents: allEventsReducer,\r\n  chosenSubject: chosenSubjectReducer,\r\n\r\n  addEventPopup: addEventPopupReducer,\r\n  removeEventPopup: removeEventPopupReducer,\r\n  editEventPopup: editEventPopupReducer,\r\n\r\n  settingsPopup: settingsPopupReducer,\r\n  addSubjectPopup: addSubjectPopupReducer,\r\n  removeSubjectPopup: removeSubjectPopupReducer,\r\n  editSubjectPopup: editSubjectPopupReducer,\r\n  forceAdminRefresh: forceAdminRefreshReducer,\r\n\r\n  addGroupPopup: addGroupPopupReducer,\r\n  editGroupPopup: editGroupPopupReducer,\r\n  removeGroupPopup: removeGroupPopupReducer,\r\n  chosenGroupAdmin: chosenGroupAdminReducer,\r\n\r\n  subjects: subjectsReducer,\r\n  groups: groupsReducer,\r\n  types: typesReducer,\r\n  forceEventsRefresh: forceEventsRefreshReducer,\r\n  chosenEvent: chosenEventReducer,\r\n});\r\nconst _persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nconst store = configureStore({\r\n  reducer: _persistedReducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      /* ignore persistance actions */\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import './Header.scss';\r\n\r\nconst Header = (props) => <header className='header'>{props.children}</header>;\r\n\r\nexport default Header;\r\n","import './Button.scss';\r\n\r\nconst Button = ({ handleClick, children, modifier = '' }) => {\r\n    return (\r\n        <button className={`button ${modifier}`} onClick={handleClick}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import './Title.scss';\r\n\r\nconst Title = (props) => <h1 className='title'>{props.children}</h1>;\r\n\r\nexport default Title;\r\n","import dayjs from 'dayjs';\r\nimport { motion } from 'framer-motion';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { decrementMonthOffset, incrementMonthOffset } from '../../../redux/slices/monthOffsetSlice';\r\nimport Button from '../../other/Button/Button';\r\nimport Title from '../../other/Title/Title';\r\nimport './MonthPagination.scss';\r\n\r\nconst MonthPagination = () => {\r\n  const monthNames = [\r\n    'Styczeń',\r\n    'Luty',\r\n    'Marzec',\r\n    'Kwiecień',\r\n    'Maj',\r\n    'Czerwiec',\r\n    'Lipiec',\r\n    'Sierpień',\r\n    'Wrzesień',\r\n    'Październik',\r\n    'Listopad',\r\n    'Grudzień',\r\n  ];\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const monthOffset = useSelector((state) => state.monthOffset.value);\r\n  const [swipeDirection, setSwipeDirection] = useState(-1);\r\n  const [lastRememberedMonthOffset, setLastRememberedMonthOffset] = useState();\r\n\r\n  const titleVariants = {\r\n    hidden: { opacity: 0, x: swipeDirection * 50 },\r\n    show: {\r\n      opacity: 1,\r\n      x: 0,\r\n      transition: {\r\n        type: 'spring',\r\n        stiffness: 600,\r\n        damping: 50,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (monthOffset > lastRememberedMonthOffset) {\r\n      setSwipeDirection(1);\r\n    } else {\r\n      setSwipeDirection(-1);\r\n    }\r\n    setLastRememberedMonthOffset(monthOffset);\r\n  }, [monthOffset]);\r\n\r\n  return (\r\n    <div className='monthPagination'>\r\n      <Button handleClick={() => dispatch(decrementMonthOffset())}>\r\n        <span className='material-icons'>chevron_left</span>\r\n      </Button>\r\n      <Title>\r\n        <motion.div key={lastRememberedMonthOffset} initial='hidden' animate='show' variants={titleVariants}>\r\n          {monthNames[parseInt(dayjs().format('MM')) + monthOffset - 1]}\r\n        </motion.div>\r\n      </Title>\r\n      <Button handleClick={() => dispatch(incrementMonthOffset())}>\r\n        <span className='material-icons'>chevron_right</span>\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonthPagination;\r\n","import { useDispatch } from 'react-redux';\r\nimport { setSettingsPopup } from '../../../redux/slices/settingsPopup';\r\nimport Button from '../Button/Button';\r\nimport LoginButton from '../LoginButton/LoginButton';\r\nimport './Toolbar.scss';\r\n\r\nconst Toolbar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const settingsClicked = () => {\r\n    dispatch(setSettingsPopup(true));\r\n  };\r\n\r\n  return (\r\n    <div className='toolbar'>\r\n      <Button handleClick={() => settingsClicked()}>\r\n        <span title='Ustawienia' className='material-icons'>\r\n          settings\r\n        </span>\r\n      </Button>\r\n      <Button>\r\n        <span title='Powiadomienia' className='material-icons'>\r\n          notifications\r\n        </span>\r\n      </Button>\r\n      {/* <LoginButton /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import './DayNames.scss';\r\n\r\nconst DayNames = () => (\r\n  <div className='calendar__dayNames'>\r\n    <div>pon.</div>\r\n    <div>wt.</div>\r\n    <div>śr.</div>\r\n    <div>czw.</div>\r\n    <div>pt.</div>\r\n    <div>sb.</div>\r\n    <div>ndz.</div>\r\n  </div>\r\n);\r\n\r\nexport default DayNames;\r\n","import './DayFlags.scss';\r\nimport { useRef, useEffect } from 'react';\r\n\r\nconst DayFlags = ({ handleResize, events }) => {\r\n  const flags = useRef(null);\r\n\r\n  useEffect(() => {\r\n    handleResize(calculateOtherCount());\r\n  }, [handleResize]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', () => {\r\n      handleResize(calculateOtherCount);\r\n    });\r\n  }, [handleResize]);\r\n\r\n  const calculateOtherCount = () => {\r\n    const els = Array.from(flags.current.children);\r\n    let counter = 1;\r\n\r\n    for (let i = 1; i < els.length; i++) {\r\n      if (els[i].offsetTop <= els[0].offsetTop) {\r\n        break;\r\n      }\r\n\r\n      counter++;\r\n    }\r\n\r\n    return els.length - counter;\r\n  };\r\n\r\n  return (\r\n    <div ref={flags} className='day__flags'>\r\n      {events.length > 0 &&\r\n        events.map((event) => <div className={`day__flag day__flag--${event.type}`}>{event.subjectShortName}</div>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DayFlags;\r\n","import './DayFooter.scss';\r\n\r\nconst DayFooter = ({ day, otherCount }) => (\r\n  <div className='day__footer'>\r\n    <div className={`day__moreFlag ${otherCount > 0 ? '' : 'hidden'}`}>\r\n      {otherCount}+\r\n    </div>\r\n    <div className='day__number'>{day}</div>\r\n  </div>\r\n);\r\n\r\nexport default DayFooter;\r\n","import { useEffect, useState, useRef } from 'react';\r\nimport dayjs from 'dayjs';\r\n\r\nimport DayFlags from '../DayFlags/DayFlags';\r\nimport DayFooter from '../DayFooter/DayFooter';\r\nimport './Day.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setChoosenDate } from '../../../redux/slices/chosenDateSlice';\r\n\r\nconst Day = ({ date, active }) => {\r\n  const dispatch = useDispatch();\r\n  const ref = useRef();\r\n\r\n  const [otherCount, setOtherCount] = useState(0);\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  const choosenDate = useSelector((state) => state.chosenDate.value);\r\n  const allEvents = useSelector((state) => state.allEvents.value);\r\n\r\n  useEffect(() => {\r\n    if (choosenDate == date) {\r\n      setSelected(true);\r\n    } else {\r\n      setSelected(false);\r\n    }\r\n  }, [choosenDate]);\r\n\r\n  const classModifier = () => {\r\n    if (dayjs().format('YYYY-MM-DD') == dayjs(date).format('YYYY-MM-DD')) {\r\n      return 'day--current';\r\n    }\r\n\r\n    if (!active) {\r\n      return 'day--inactive';\r\n    }\r\n    if (dayjs(date).format('d') == 0 || dayjs(date).format('d') == 6) {\r\n      return 'day--weekend';\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    dispatch(setChoosenDate(date));\r\n  };\r\n\r\n  const eventsForThisDay = () => {\r\n    return allEvents.filter((event) => event.date == date);\r\n  };\r\n\r\n  return (\r\n    <div onClick={handleClick} ref={ref} className={`day ${classModifier()} ${selected ? 'day--selected' : ''}`}>\r\n      <DayFlags events={eventsForThisDay()} handleResize={setOtherCount} />\r\n      <DayFooter otherCount={otherCount} day={dayjs(date).format('DD')} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Day;\r\n","import React, { useEffect, useState } from 'react';\r\nimport dayjs from 'dayjs';\r\n\r\nimport Day from '../Day/Day';\r\nimport './Days.scss';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Days = () => {\r\n    const daysOfWeek = [7, 1, 2, 3, 4, 5, 6];\r\n\r\n    const monthOffset = useSelector((state) => state.monthOffset.value);\r\n\r\n    const [days, setDays] = useState([]);\r\n\r\n    useEffect(() => {\r\n        initializeMonthDays();\r\n    }, [monthOffset]);\r\n\r\n    const initializeMonthDays = () => {\r\n        const today = dayjs();\r\n        const desiredDay = today.add(monthOffset, 'month');\r\n        const daysTemp = new Array(42);\r\n        const startDayOfMonth = daysOfWeek[desiredDay.startOf('month').day()]; // 1 - monday, 7 sunday\r\n\r\n        const startingDay = desiredDay.startOf('month').subtract(startDayOfMonth - 1, 'day');\r\n\r\n        for (let i = 0; i < 42; i++) {\r\n            daysTemp[i] = startingDay.add(i, 'day').format('YYYY-MM-DD');\r\n        }\r\n\r\n        setDays(daysTemp);\r\n    };\r\n\r\n    const isDayInCurrentMonth = (day) => {\r\n        const today = dayjs();\r\n        const thisMonth = today.add(monthOffset, 'month');\r\n        return dayjs(day).format('MM') === thisMonth.format('MM');\r\n    };\r\n\r\n    return (\r\n        <div className='calendar__days'>\r\n            {days.map((day) => (\r\n                <Day key={day} date={day} active={isDayInCurrentMonth(day)} />\r\n            ))}\r\n\r\n            {/* <Day day='2' modifier='day--inactive' />\r\n            <Day day='3' modifier='day--inactive' />\r\n            <Day day='4' modifier='day--inactive' />\r\n            <Day day='5' modifier='day--inactive' />\r\n            <Day day='6' modifier='day--weekend' />\r\n            <Day day='7' modifier='day--weekend' />\r\n            <Day day='8' />\r\n            <Day day='9' />\r\n            <Day day='10' />\r\n            <Day day='11' />\r\n            <Day day='12' />\r\n            <Day day='13' modifier='day--weekend' />\r\n            <Day day='14' modifier='day--weekend' />\r\n            <Day day='15' />\r\n            <Day day='16' />\r\n            <Day day='17' />\r\n            <Day day='18' />\r\n            <Day day='19' />\r\n            <Day day='20' modifier='day--weekend' />\r\n            <Day day='21' modifier='day--weekend' />\r\n            <Day day='22' />\r\n            <Day day='23' />\r\n            <Day day='24' />\r\n            <Day day='25' />\r\n            <Day day='26' />\r\n            <Day day='27' modifier='day--weekend' />\r\n            <Day day='28' modifier='day--weekend' />\r\n            <Day day='29' />\r\n            <Day day='30' />\r\n            <Day day='31' />\r\n            <Day day='1' />\r\n            <Day day='2' />\r\n            <Day day='3' modifier='day--weekend' />\r\n            <Day day='4' modifier='day--weekend' />\r\n            <Day day='5' />\r\n            <Day day='6' modifier='day--inactive' />\r\n            <Day day='7' modifier='day--inactive' />\r\n            <Day day='8' modifier='day--inactive' />\r\n            <Day day='9' modifier='day--inactive' />\r\n            <Day day='10' modifier='day--inactive' />\r\n            <Day day='11' modifier='day--inactive' /> */}\r\n        </div>\r\n    );\r\n};\r\nexport default Days;\r\n","import { motion } from 'framer-motion';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DayNames from '../DayNames/DayNames';\r\nimport Days from '../Days/Days';\r\nimport './Calendar.scss';\r\n\r\nconst Calendar = () => {\r\n  const currentMonth = useSelector((state) => state.monthOffset.value);\r\n  const [lastRememberedMonth, setLastRememberedMonth] = useState();\r\n\r\n  const [swipeDirection, setSwipeDirection] = useState(-1);\r\n\r\n  const calendarVariants = {\r\n    hidden: { opacity: 0, x: swipeDirection * 100 },\r\n    show: {\r\n      opacity: 1,\r\n      x: 0,\r\n      transition: {\r\n        type: 'spring',\r\n        stiffness: 600,\r\n        damping: 50,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentMonth > lastRememberedMonth) {\r\n      setSwipeDirection(1);\r\n    } else {\r\n      setSwipeDirection(-1);\r\n    }\r\n    setLastRememberedMonth(currentMonth);\r\n  }, [currentMonth]);\r\n\r\n  return (\r\n    <motion.div\r\n      key={lastRememberedMonth}\r\n      className='calendar'\r\n      initial='hidden'\r\n      animate='show'\r\n      variants={calendarVariants}\r\n    >\r\n      <DayNames />\r\n      <Days />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import './ItemAdder.scss';\r\n\r\nconst ItemAdder = ({ children, handleClick }) => (\r\n  <div className='itemAdder' onClick={handleClick}>\r\n    <span className='material-icons'>add</span>\r\n    <span className='itemAdder__text'>{children}</span>\r\n  </div>\r\n);\r\n\r\nexport default ItemAdder;\r\n","import { motion } from 'framer-motion';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { setAddSubjectPopup } from '../../../redux/slices/addSubjectPopup';\r\nimport ItemAdder from '../ItemAdder/ItemAdder';\r\nimport './ItemList.scss';\r\n\r\nconst ItemList = ({ items, name, renderComponent, addFunction }) => {\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    show: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.07,\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <div className='itemList'>\r\n      <ItemAdder handleClick={() => addFunction()}>Dodaj {name}</ItemAdder>\r\n      <motion.div\r\n        className='itemList__content'\r\n        variants={containerVariants}\r\n        initial='hidden'\r\n        animate={items && items.length > 0 && 'show'}\r\n      >\r\n        {items && items.length > 0 && items.map((item) => renderComponent(item))}\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemList;\r\n","import Button from '../../other/Button/Button';\r\nimport { useDispatch } from 'react-redux';\r\nimport './EventCard.scss';\r\nimport { setRemoveEventPopup } from '../../../redux/slices/removeEventPopup';\r\nimport { setChosenEvent } from '../../../redux/slices/chosenEvent';\r\nimport { setEditEventPopup } from '../../../redux/slices/editEventPopup';\r\n\r\nconst EventCard = ({ event }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const editClicked = () => {\r\n    dispatch(setChosenEvent(event.id));\r\n    dispatch(setEditEventPopup(true));\r\n  };\r\n\r\n  const removeClicked = () => {\r\n    dispatch(setChosenEvent(event.id));\r\n    dispatch(setRemoveEventPopup(true));\r\n  };\r\n\r\n  return (\r\n    <div className='eventCard'>\r\n      <div className='eventCard__topbar eventCard__topbar--blue'>\r\n        <h3 className='eventCard__title'>{event.subjectLongName}</h3>\r\n        <div className='eventCard__buttons'>\r\n          <Button modifier='button--transparent button--edit button--small' handleClick={() => editClicked()}>\r\n            <span className='material-icons'>edit</span>\r\n          </Button>\r\n          <Button modifier='button--transparent button--delete button--small' handleClick={() => removeClicked()}>\r\n            <span className='material-icons'>delete</span>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className='eventCard__panel'>\r\n        <div className='eventCard__tags'>\r\n          <div className='eventCard__tag'>\r\n            <span className='material-icons'>label</span> {event.type}\r\n          </div>\r\n          <div className='eventCard__tag'>\r\n            <span className='material-icons'>schedule</span>\r\n            {event.time}\r\n          </div>\r\n          <div className='eventCard__tag'>\r\n            <span className='material-icons'>info</span>Informacja\r\n          </div>\r\n        </div>\r\n        <div className='eventCard__description'>{event.description}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventCard;\r\n","import { motion } from 'framer-motion';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport ItemList from '../../other/ItemList/ItemList';\r\nimport EventCard from '../EventCard/EventCard';\r\nimport './DailyEvents.scss';\r\n\r\nconst objs = [\r\n  { name: 'Wytwarzanie Aplikacji Internetowych' },\r\n  { name: 'Grafika Komputerowa' },\r\n  { name: 'Architektura Komputerów' },\r\n  { name: 'Fizyka Współczesna' },\r\n  { name: 'Metody Numeryczne' },\r\n  { name: 'Metody Probabilistyczne' },\r\n  { name: 'Matematyka Elementarna' },\r\n  { name: 'Systemy Wbudowane i Mikroprocesory' },\r\n  { name: 'Heja' },\r\n  { name: 'Okej' },\r\n  { name: 'Siema' },\r\n];\r\n\r\nconst itemVariants = {\r\n  hidden: { opacity: 0, y: 50 },\r\n  show: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: {\r\n      type: 'spring',\r\n      stiffness: 600,\r\n      damping: 50,\r\n    },\r\n  },\r\n};\r\n\r\nconst DailyEvents = () => {\r\n  const dispatch = useDispatch();\r\n  const [localEvents, setLocalEvents] = useState();\r\n\r\n  const renderEvent = (event) => (\r\n    <motion.div variants={itemVariants}>\r\n      <EventCard key={event.id} event={event} />\r\n    </motion.div>\r\n  );\r\n  const dailyEvents = useSelector((state) => state.dailyEvents.value);\r\n\r\n  useEffect(() => {\r\n    setLocalEvents([]);\r\n    setTimeout(() => {\r\n      setLocalEvents(dailyEvents);\r\n    }, 1);\r\n  }, [dailyEvents]);\r\n\r\n  return (\r\n    <div className='dailyEvents'>\r\n      <ItemList\r\n        name='Wydarzenie'\r\n        items={localEvents}\r\n        renderComponent={renderEvent}\r\n        addFunction={() => dispatch(setAddEventPopup(true))}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyEvents;\r\n","import './CourseInfo.scss';\r\n\r\nconst CourseInfo = ({ course, university }) => (\r\n  <div className='courseInfo'>\r\n    <h3 className='courseInfo__subtitle'>{university}</h3>\r\n    <h2 className='courseInfo__title'>{course}</h2>\r\n  </div>\r\n);\r\n\r\nexport default CourseInfo;\r\n","import { useDispatch } from 'react-redux';\r\nimport Button from '../Button/Button';\r\nimport './ItemBar.scss';\r\n\r\nconst ItemBar = ({ children, handleEdit, handleDelete }) => {\r\n  const editPressed = () => {\r\n    handleEdit();\r\n  };\r\n\r\n  const deletePressed = () => {\r\n    handleDelete();\r\n  };\r\n\r\n  return (\r\n    <div className='itemBar'>\r\n      <h3 className='itemBar__title'>{children}</h3>\r\n      <div className='itemBar__buttons'>\r\n        <Button modifier='button--transparent button--edit' handleClick={() => editPressed()}>\r\n          <span className='material-icons'>edit</span>\r\n        </Button>\r\n        <Button modifier='button--transparent button--delete' handleClick={() => deletePressed()}>\r\n          <span className='material-icons'>delete</span>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemBar;\r\n","import ItemList from '../../other/ItemList/ItemList';\r\nimport CourseInfo from '../CourseInfo/CourseInfo';\r\nimport ItemBar from '../../other/ItemBar/ItemBar';\r\nimport './AdminPanel.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setRemoveSubjectPopup } from '../../../redux/slices/removeSubjectPopup';\r\nimport { setChosenSubject } from '../../../redux/slices/chosenSubject';\r\nimport { setEditSubjectPopup } from '../../../redux/slices/editSubjectPopup';\r\nimport { setAddSubjectPopup } from '../../../redux/slices/addSubjectPopup';\r\nimport { setEditGroupPopup } from '../../../redux/slices/editGroupPopup';\r\nimport { setRemoveGroupPopup } from '../../../redux/slices/removeGroupPopup';\r\nimport { setAddGroupPopup } from '../../../redux/slices/addGroupPopup';\r\nimport { setChosenGroupAdmin } from '../../../redux/slices/chosenGroupAdmin';\r\n\r\nconst AdminPanel = () => {\r\n  const dispatch = useDispatch();\r\n  const subjects = useSelector((state) => state.subjects.value);\r\n  const groups = useSelector((state) => state.groups.value);\r\n\r\n  const renderBarCourses = ({ id, name, shortName }) => (\r\n    <ItemBar\r\n      key={name}\r\n      handleEdit={() => {\r\n        dispatch(setChosenSubject(id));\r\n        dispatch(setEditSubjectPopup(true));\r\n      }}\r\n      handleDelete={() => {\r\n        dispatch(setChosenSubject(id));\r\n        dispatch(setRemoveSubjectPopup(true));\r\n      }}\r\n    >\r\n      {name} ({shortName})\r\n    </ItemBar>\r\n  );\r\n\r\n  const renderBarGroups = ({ id, groupName, groupNumber }) => (\r\n    <ItemBar\r\n      key={groupName}\r\n      handleEdit={() => {\r\n        dispatch(setChosenGroupAdmin(id));\r\n        dispatch(setEditGroupPopup(true));\r\n      }}\r\n      handleDelete={() => {\r\n        dispatch(setChosenGroupAdmin(id));\r\n        dispatch(setRemoveGroupPopup(true));\r\n      }}\r\n    >\r\n      {groupName} ({groupNumber})\r\n    </ItemBar>\r\n  );\r\n\r\n  return (\r\n    <div className='adminPanel'>\r\n      <div className='scrollable'>\r\n        <ItemList\r\n          renderComponent={renderBarCourses}\r\n          items={subjects}\r\n          name='przedmiot'\r\n          addFunction={() => dispatch(setAddSubjectPopup(true))}\r\n        />\r\n      </div>\r\n      <div className='scrollable'>\r\n        <ItemList\r\n          renderComponent={renderBarGroups}\r\n          items={groups}\r\n          name='grupę'\r\n          addFunction={() => dispatch(setAddGroupPopup(true))}\r\n        />\r\n      </div>\r\n      <CourseInfo course='Informatyka' university='Politechnika Gdańska' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import ReactDOM from 'react-dom';\r\nimport './Modal.scss';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({ children }) => {\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <motion.div\r\n        className='modal__background'\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ ease: [0.05, 0.75, 0.25, 0.95] }}\r\n      >\r\n        <motion.div\r\n          className='modal__body'\r\n          initial={{ y: 30, scale: 0.9 }}\r\n          animate={{ y: 0, scale: 1 }}\r\n          exit={{ y: 0, scale: 0.9 }}\r\n          transition={{ ease: [0.05, 0.75, 0.25, 0.95] }}\r\n        >\r\n          {children}\r\n        </motion.div>\r\n      </motion.div>\r\n    </>,\r\n\r\n    document.querySelector('#modal')\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport Modal from '../../user/Modal/Modal';\r\nimport './Modals.scss';\r\n\r\nconst AddEventModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const currentlyChosenGroup = useSelector((state) => state.chosenGroupID.value);\r\n  const subjects = useSelector((state) => state.subjects.value);\r\n  const groups = useSelector((state) => state.groups.value);\r\n  const types = useSelector((state) => state.types.value);\r\n  const date = useSelector((state) => state.chosenDate.value);\r\n\r\n  const { id } = useParams();\r\n  const [subjectID, setSubjectID] = useState(0);\r\n  const [groupID, setGroupID] = useState(0);\r\n  const [groupIDs, setGroupIDs] = useState([]);\r\n  const [typeID, setTypeID] = useState(0);\r\n  const [time, setTime] = useState('12:00');\r\n  const [description, setDescription] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    setTypeID(types[0].id);\r\n    setSubjectID(subjects[0].id);\r\n    setGroupID(currentlyChosenGroup);\r\n    setGroupIDs([currentlyChosenGroup]);\r\n  }, []);\r\n\r\n  const addEvent = async () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        subjectID: subjectID,\r\n        yearCourseId: id,\r\n        name: 'temporary name',\r\n        groupIds: groupIDs,\r\n        date: date + 'T' + time,\r\n        description: description,\r\n        eventTypeId: typeID,\r\n        password: password,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Events`, requestOptions);\r\n\r\n    if (response.ok) {\r\n      dispatch(setAddEventPopup(false));\r\n      dispatch(forceEventsRefresh());\r\n    }\r\n  };\r\n\r\n  const formAllGroupArray = () => {\r\n    let groupsTemp = [];\r\n    for (let group of groups) {\r\n      groupsTemp.push(group.id);\r\n    }\r\n\r\n    return groupsTemp;\r\n  };\r\n\r\n  const updateSubjectID = (e) => {\r\n    setSubjectID(e.target.value);\r\n  };\r\n\r\n  const updateGroupID = (e) => {\r\n    setGroupID(e.target.value);\r\n\r\n    if (e.target.value == -1) {\r\n      setGroupIDs(formAllGroupArray());\r\n    } else {\r\n      setGroupIDs([e.target.value]);\r\n    }\r\n  };\r\n\r\n  const updateTypeID = (e) => {\r\n    setTypeID(e.target.value);\r\n  };\r\n\r\n  const updateTime = (e) => {\r\n    setTime(e.target.value);\r\n  };\r\n\r\n  const updateDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleAcceptClick = (e) => {\r\n    e.preventDefault();\r\n    addEvent();\r\n  };\r\n\r\n  const handleCloseClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setAddEventPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Dodawanie wydarzenia</h2>\r\n      <label htmlFor='subject'>Przedmiot</label>\r\n      <br />\r\n      <select className='event-adder__input' id='subject' value={subjectID} onChange={updateSubjectID}>\r\n        {subjects.map((subject) => (\r\n          <option key={subject.id} value={subject.id}>\r\n            {subject.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='event-adder__label' htmlFor='group'>\r\n        Grupa\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='group' value={groupID} onChange={updateGroupID}>\r\n        <option key={0} value={-1}>\r\n          Wszystkie\r\n        </option>\r\n        {groups.map((group) => (\r\n          <option key={group.id} value={group.id}>\r\n            {group.groupNumber}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='event-adder__label' htmlFor='type'>\r\n        Typ\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='type' value={typeID} onChange={updateTypeID}>\r\n        {types.map((type) => (\r\n          <option key={type.id} value={type.id}>\r\n            {type.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='edition__label' htmlFor='time'>\r\n        Godzina\r\n      </label>\r\n      <br />\r\n      <input\r\n        type='time'\r\n        id='time'\r\n        name='time'\r\n        min='07:00'\r\n        value='16:00:00'\r\n        max='21:00'\r\n        value={time}\r\n        onChange={updateTime}\r\n      ></input>\r\n      <br />\r\n      <label className='edition__label' htmlFor='description'>\r\n        Opis\r\n      </label>\r\n      <br />\r\n      <textarea\r\n        id='description'\r\n        name='description'\r\n        rows='5'\r\n        cols='30'\r\n        placeholder='Tu wpisz opis...'\r\n        value={description}\r\n        onChange={updateDescription}\r\n      ></textarea>\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Hasło\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Hasło' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n        Utwórz\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddEventModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport { setRemoveEventPopup } from '../../../redux/slices/removeEventPopup';\r\nimport Modal from '../../user/Modal/Modal';\r\n\r\nconst RemoveEventModal = () => {\r\n  const dispatch = useDispatch();\r\n  const chosenEventID = useSelector((state) => state.chosenEvent.value);\r\n\r\n  const { id } = useParams();\r\n\r\n  const [password, setPassword] = useState('');\r\n\r\n  const deletePressed = async () => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(\r\n      `https://kiedykolos.bieda.it/yearCourses/${id}/Events/${chosenEventID}`,\r\n      requestOptions\r\n    );\r\n\r\n    if (response.ok) {\r\n      dispatch(setRemoveEventPopup(false));\r\n      dispatch(forceEventsRefresh());\r\n    }\r\n  };\r\n  const cancelPressed = () => {\r\n    dispatch(setRemoveEventPopup(false));\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Usuwanie wydarzenia {chosenEventID}</h2>\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Hasło\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Hasło' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={cancelPressed}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={deletePressed}>\r\n        Usuń\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveEventModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport dayjs from 'dayjs';\r\nimport { setDailyEvents } from '../../redux/slices/dailyEvents';\r\nimport { setAllEvents } from '../../redux/slices/allEvents';\r\nimport { setSubjects } from '../../redux/slices/subjects';\r\nimport { setGroups } from '../../redux/slices/groups';\r\nimport { setTypes } from '../../redux/slices/types';\r\nimport { setChosenGroupID } from '../../redux/slices/chosenGroupIDSlice';\r\n\r\nconst UserBackgroundAPI = () => {\r\n  const dispatch = useDispatch();\r\n  const baseURL = 'https://kiedykolos.bieda.it/';\r\n\r\n  const forceEventsRefresh = useSelector((state) => state.forceEventsRefresh.value);\r\n  const chosenDate = useSelector((state) => state.chosenDate.value);\r\n  const chosenGroup = useSelector((state) => state.chosenGroupID.value);\r\n\r\n  const [dataDownloaded, setDataDownloaded] = useState(false);\r\n  const [eventsLocal, setEventsLocal] = useState([]);\r\n  const [typesLocal, setTypesLocal] = useState([]);\r\n  const [subjectsLocal, setSubjectsLocal] = useState([]);\r\n  const [groupsLocal, setGroupsLocal] = useState([]);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    console.log('Downloading data...');\r\n\r\n    downloadData();\r\n  }, [forceEventsRefresh, chosenGroup]);\r\n\r\n  useEffect(() => {\r\n    buildEvents();\r\n    buildDayEvents(chosenDate);\r\n  }, [dataDownloaded]);\r\n\r\n  useEffect(async () => {\r\n    buildDayEvents(chosenDate);\r\n  }, [chosenDate]);\r\n\r\n  const getResource = async (extensionURL) => {\r\n    const URL = baseURL + extensionURL;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n    return data.result;\r\n  };\r\n\r\n  const getEvents = async () => {\r\n    const data = await getResource(`yearCourses/${id}/groups/${chosenGroup}/events`);\r\n    return data;\r\n  };\r\n\r\n  const getSubjects = async () => {\r\n    const data = await getResource(`yearCourses/${id}/subjects`);\r\n    dispatch(setSubjects(data));\r\n    return data;\r\n  };\r\n\r\n  const getTypes = async () => {\r\n    const data = await getResource(`eventTypes`);\r\n    dispatch(setTypes(data));\r\n    return data;\r\n  };\r\n\r\n  const getGroups = async () => {\r\n    const data = await getResource(`yearCourses/${id}/groups`);\r\n    dispatch(setGroups(data));\r\n    return data;\r\n  };\r\n\r\n  const downloadData = async () => {\r\n    setEventsLocal(await getEvents());\r\n    setSubjectsLocal(await getSubjects());\r\n    setTypesLocal(await getTypes());\r\n\r\n    checkGroupCorectness(await getGroups());\r\n  };\r\n\r\n  const checkGroupCorectness = (groups) => {\r\n    for (let group of groups) {\r\n      if (chosenGroup == group.id) {\r\n        setDataDownloaded(!dataDownloaded);\r\n        return;\r\n      }\r\n    }\r\n\r\n    dispatch(setChosenGroupID(groups[0].id));\r\n    console.log('Unknown group ID. Changing to default...');\r\n  };\r\n\r\n  const buildEvents = async () => {\r\n    if (eventsLocal.length == 0) {\r\n      return;\r\n    }\r\n\r\n    let eventsConnected = [];\r\n    for (let event of eventsLocal) {\r\n      let eventData = {\r\n        date: dayjs(event.date).format('YYYY-MM-DD'),\r\n        subjectLongName: getPropertyFromObjectByID(subjectsLocal, event.subjectId, 'name'),\r\n        subjectShortName: getPropertyFromObjectByID(subjectsLocal, event.subjectId, 'shortName'),\r\n        type: getPropertyFromObjectByID(typesLocal, event.eventTypeId, 'name'),\r\n      };\r\n      eventsConnected.push(eventData);\r\n    }\r\n    dispatch(setAllEvents(eventsConnected));\r\n  };\r\n\r\n  const buildDayEvents = async (date) => {\r\n    let dayEvents = [];\r\n    for (let event of eventsLocal) {\r\n      if (dayjs(event.date).format('YYYY-MM-DD') != date) {\r\n        continue;\r\n      }\r\n      let eventData = {\r\n        id: event.id,\r\n        date: dayjs(event.date).format('YYYY-MM-DD'),\r\n        description: event.description,\r\n        subjectLongName: getPropertyFromObjectByID(subjectsLocal, event.subjectId, 'name'),\r\n        type: getPropertyFromObjectByID(typesLocal, event.eventTypeId, 'name'),\r\n        time: dayjs(event.date).format('HH:mm'),\r\n      };\r\n      dayEvents.push(eventData);\r\n    }\r\n    dispatch(setDailyEvents(dayEvents));\r\n  };\r\n\r\n  const getPropertyFromObjectByID = (array, searchedID, searchedProperty) => {\r\n    for (let object of array) {\r\n      if (object.id == searchedID) {\r\n        return object[searchedProperty];\r\n      }\r\n    }\r\n  };\r\n\r\n  return null;\r\n};\r\n\r\nexport default UserBackgroundAPI;\r\n","import dayjs from 'dayjs';\r\nimport { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { setEditEventPopup } from '../../../redux/slices/editEventPopup';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport Modal from '../../user/Modal/Modal';\r\n\r\nconst EditEventModal = () => {\r\n  const dispatch = useDispatch();\r\n  const subjects = useSelector((state) => state.subjects.value);\r\n  const groups = useSelector((state) => state.groups.value);\r\n  const types = useSelector((state) => state.types.value);\r\n  const chosenEventID = useSelector((state) => state.chosenEvent.value);\r\n\r\n  const { id } = useParams();\r\n  const [subjectID, setSubjectID] = useState(0);\r\n  const [groupID, setGroupID] = useState(0);\r\n  const [groupIDs, setGroupIDs] = useState([]);\r\n  const [typeID, setTypeID] = useState(0);\r\n  const [time, setTime] = useState('12:00');\r\n  const [date, setDate] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    setInitialEventData();\r\n    formAllGroupArray();\r\n  }, []);\r\n\r\n  const setInitialEventData = async () => {\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Events/${chosenEventID}`);\r\n    const json = await response.json();\r\n    const eventData = await json.result;\r\n\r\n    setTypeID(eventData.eventTypeId);\r\n    setSubjectID(eventData.subjectId);\r\n    setGroupID(eventData.groupIds[0]);\r\n    setGroupIDs([eventData.groupIds[0]]);\r\n\r\n    setDescription(eventData.description);\r\n    setTime(dayjs(eventData.date).format('HH:mm'));\r\n    setDate(dayjs(eventData.date).format('YYYY-MM-DD'));\r\n  };\r\n\r\n  const formAllGroupArray = () => {\r\n    let groupsTemp = [];\r\n    for (let group of groups) {\r\n      groupsTemp.push(group.id);\r\n    }\r\n\r\n    return groupsTemp;\r\n  };\r\n\r\n  const removeEvent = async () => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(\r\n      `https://kiedykolos.bieda.it/yearCourses/${id}/Events/${chosenEventID}`,\r\n      requestOptions\r\n    );\r\n\r\n    if (response.ok) {\r\n      dispatch(setEditEventPopup(false));\r\n      dispatch(forceEventsRefresh());\r\n    }\r\n  };\r\n\r\n  const addEvent = async () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        subjectID: subjectID,\r\n        yearCourseId: id,\r\n        name: 'temporary name',\r\n        groupIds: groupIDs,\r\n        date: date + 'T' + time,\r\n        description: description,\r\n        eventTypeId: typeID,\r\n        password: password,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Events`, requestOptions);\r\n\r\n    if (response.ok) {\r\n      dispatch(setEditEventPopup(false));\r\n      dispatch(forceEventsRefresh());\r\n    }\r\n  };\r\n\r\n  const updateSubjectID = (e) => {\r\n    setSubjectID(e.target.value);\r\n  };\r\n\r\n  const updateGroupID = (e) => {\r\n    setGroupID(e.target.value);\r\n\r\n    if (e.target.value == -1) {\r\n      setGroupIDs(formAllGroupArray());\r\n    } else {\r\n      setGroupIDs([e.target.value]);\r\n    }\r\n  };\r\n\r\n  const updateTypeID = (e) => {\r\n    setTypeID(e.target.value);\r\n  };\r\n\r\n  const updateTime = (e) => {\r\n    setTime(e.target.value);\r\n  };\r\n\r\n  const updateDate = (e) => {\r\n    setDate(e.target.value);\r\n  };\r\n\r\n  const updateDescription = (e) => {\r\n    setDescription(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const acceptClicked = (e) => {\r\n    e.preventDefault();\r\n    removeEvent();\r\n    addEvent();\r\n  };\r\n\r\n  const closeClicked = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setEditEventPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Edytowanie wydarzenia {chosenEventID}</h2>\r\n      <label htmlFor='subject'>Przedmiot</label>\r\n      <br />\r\n      <select className='event-adder__input' id='subject' value={subjectID} onChange={updateSubjectID}>\r\n        {subjects.map((subject) => (\r\n          <option key={subject.id} value={subject.id}>\r\n            {subject.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='event-adder__label' htmlFor='group'>\r\n        Grupa\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='group' value={groupID} onChange={updateGroupID}>\r\n        <option key={0} value={-1}>\r\n          Wszystkie\r\n        </option>\r\n        {groups.map((group) => (\r\n          <option key={group.id} value={group.id}>\r\n            {group.groupNumber}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='event-adder__label' htmlFor='type'>\r\n        Typ\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='type' value={typeID} onChange={updateTypeID}>\r\n        {types.map((type) => (\r\n          <option key={type.id} value={type.id}>\r\n            {type.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <label className='edition__label' htmlFor='time'>\r\n        Godzina\r\n      </label>\r\n      <br />\r\n      <input\r\n        type='time'\r\n        id='time'\r\n        name='time'\r\n        min='07:00'\r\n        value='16:00:00'\r\n        max='21:00'\r\n        value={time}\r\n        onChange={updateTime}\r\n      ></input>\r\n      <br />\r\n      <label className='edition__label' htmlFor='date'>\r\n        Data\r\n      </label>\r\n      <br />\r\n      <input\r\n        type='date'\r\n        id='date'\r\n        name='date'\r\n        min='07:00'\r\n        value='16:00:00'\r\n        max='21:00'\r\n        value={date}\r\n        onChange={updateDate}\r\n      ></input>\r\n      <br />\r\n      <label className='edition__label' htmlFor='description'>\r\n        Opis\r\n      </label>\r\n      <br />\r\n      <textarea\r\n        id='description'\r\n        name='description'\r\n        rows='5'\r\n        cols='30'\r\n        placeholder='Tu wpisz opis...'\r\n        value={description}\r\n        onChange={updateDescription}\r\n      ></textarea>\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Hasło\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Hasło' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={closeClicked}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={acceptClicked}>\r\n        Edytuj wydarzenie\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditEventModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setChosenGroupID } from '../../../redux/slices/chosenGroupIDSlice';\r\nimport { setSettingsPopup } from '../../../redux/slices/settingsPopup';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst SettingsModal = () => {\r\n  const dispatch = useDispatch();\r\n  const groups = useSelector((state) => state.groups.value);\r\n  const choosenGroupID = useSelector((state) => state.chosenGroupID.value);\r\n\r\n  const [groupID, setGroupID] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setGroupID(choosenGroupID);\r\n  }, [choosenGroupID]);\r\n\r\n  const updateGroupID = (e) => {\r\n    setGroupID(e.target.value);\r\n  };\r\n\r\n  const acceptClicked = () => {\r\n    dispatch(setSettingsPopup(false));\r\n    dispatch(setChosenGroupID(groupID));\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Ustawienia</h2>\r\n      <label className='event-adder__label' htmlFor='group'>\r\n        Grupa\r\n      </label>\r\n      <br />\r\n      <select className='event-adder__input' id='group' value={groupID} onChange={updateGroupID}>\r\n        {groups.map((group) => (\r\n          <option key={group.id} value={group.id}>\r\n            {group.groupNumber}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <br />\r\n      <br />\r\n      <button onClick={() => acceptClicked()}>Akceptuj</button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport dayjs from 'dayjs';\r\nimport { setDailyEvents } from '../../redux/slices/dailyEvents';\r\nimport { setAllEvents } from '../../redux/slices/allEvents';\r\nimport { setSubjects } from '../../redux/slices/subjects';\r\nimport { setGroups } from '../../redux/slices/groups';\r\nimport { setTypes } from '../../redux/slices/types';\r\nimport { setChosenGroupID } from '../../redux/slices/chosenGroupIDSlice';\r\n\r\nconst AdminBackgroundAPI = () => {\r\n  const dispatch = useDispatch();\r\n  const baseURL = 'https://kiedykolos.bieda.it/';\r\n\r\n  const forceAdminRefresh = useSelector((state) => state.forceAdminRefresh.value);\r\n\r\n  const [dataDownloaded, setDataDownloaded] = useState(false);\r\n  const [subjectsLocal, setSubjectsLocal] = useState([]);\r\n  const [groupsLocal, setGroupsLocal] = useState([]);\r\n\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    downloadData();\r\n  }, [forceAdminRefresh]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setSubjects(subjectsLocal));\r\n    dispatch(setGroups(groupsLocal));\r\n  }, [dataDownloaded]);\r\n\r\n  const getResource = async (extensionURL) => {\r\n    const URL = baseURL + extensionURL;\r\n\r\n    const response = await fetch(URL);\r\n    const data = await response.json();\r\n    return data.result;\r\n  };\r\n\r\n  const getSubjects = async () => {\r\n    const data = await getResource(`yearCourses/${id}/subjects`);\r\n    dispatch(setSubjects(data));\r\n    return data;\r\n  };\r\n\r\n  const getGroups = async () => {\r\n    const data = await getResource(`yearCourses/${id}/groups`);\r\n    dispatch(setGroups(data));\r\n    return data;\r\n  };\r\n\r\n  const downloadData = async () => {\r\n    setSubjectsLocal(await getSubjects());\r\n    setGroupsLocal(await getGroups());\r\n    setDataDownloaded(true);\r\n  };\r\n\r\n  const getPropertyFromObjectByID = (array, searchedID, searchedProperty) => {\r\n    for (let object of array) {\r\n      if (object.id == searchedID) {\r\n        return object[searchedProperty];\r\n      }\r\n    }\r\n  };\r\n\r\n  return null;\r\n};\r\n\r\nexport default AdminBackgroundAPI;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { setAddSubjectPopup } from '../../../redux/slices/addSubjectPopup';\r\nimport { forceAdminRefresh } from '../../../redux/slices/forceAdminRefresh';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport Modal from '../../user/Modal/Modal';\r\n\r\nconst AddSubjectModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { id } = useParams();\r\n\r\n  const [shortName, setShortName] = useState('');\r\n  const [longName, setLongName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const addSubject = async () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        yearCourseId: id,\r\n        name: longName,\r\n        shortName: shortName,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Subjects`, requestOptions);\r\n\r\n    if (response.ok) {\r\n      dispatch(setAddSubjectPopup(false));\r\n      dispatch(forceAdminRefresh());\r\n    }\r\n  };\r\n\r\n  const updateShortName = (e) => {\r\n    setShortName(e.target.value);\r\n  };\r\n\r\n  const updateLongName = (e) => {\r\n    setLongName(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleAcceptClick = (e) => {\r\n    e.preventDefault();\r\n    addSubject();\r\n  };\r\n\r\n  const handleCloseClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setAddSubjectPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Dodawanie przedmiotu</h2>\r\n      <label htmlFor='shortName'>Pełna nazwa</label>\r\n      <br />\r\n      <input type='text' id='shortName' value={longName} onChange={updateLongName} />\r\n      <br />\r\n      <br />\r\n      <label htmlFor='shortName'>Krótka nazwa</label>\r\n      <br />\r\n      <input type='text' id='shortName' value={shortName} onChange={updateShortName} />\r\n      <br />\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Hasło\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Hasło' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n        Utwórz przedmiot\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddSubjectModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { forceAdminRefresh } from '../../../redux/slices/forceAdminRefresh';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport { setRemoveEventPopup } from '../../../redux/slices/removeEventPopup';\r\nimport { setRemoveSubjectPopup } from '../../../redux/slices/removeSubjectPopup';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst RemoveSubjectModal = () => {\r\n  const dispatch = useDispatch();\r\n  const chosenSubjectID = useSelector((state) => state.chosenSubject.value);\r\n\r\n  const { id } = useParams();\r\n\r\n  const [password, setPassword] = useState('');\r\n\r\n  const deletePressed = async () => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(\r\n      `https://kiedykolos.bieda.it/yearCourses/${id}/Subjects/${chosenSubjectID}`,\r\n      requestOptions\r\n    );\r\n\r\n    if (response.ok) {\r\n      dispatch(setRemoveSubjectPopup(false));\r\n      dispatch(forceAdminRefresh());\r\n    }\r\n  };\r\n  const cancelPressed = () => {\r\n    dispatch(setRemoveSubjectPopup(false));\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Usuwanie przedmiotu {chosenSubjectID}</h2>\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Hasło\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Hasło' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={cancelPressed}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={deletePressed}>\r\n        Usuń\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveSubjectModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { setAddSubjectPopup } from '../../../redux/slices/addSubjectPopup';\r\nimport { setEditSubjectPopup } from '../../../redux/slices/editSubjectPopup';\r\nimport { forceAdminRefresh } from '../../../redux/slices/forceAdminRefresh';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst EditSubjectModal = () => {\r\n  const dispatch = useDispatch();\r\n  const chosenSubjectID = useSelector((state) => state.chosenSubject.value);\r\n\r\n  const { id } = useParams();\r\n\r\n  const [shortName, setShortName] = useState('');\r\n  const [longName, setLongName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    setInitialSubjectData();\r\n  }, []);\r\n\r\n  const setInitialSubjectData = async () => {\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Subjects/${chosenSubjectID}`);\r\n\r\n    const json = await response.json();\r\n    const subjectData = await json.result;\r\n\r\n    setShortName(subjectData.shortName);\r\n    setLongName(subjectData.name);\r\n  };\r\n\r\n  const editSubject = async () => {\r\n    const requestOptions = {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        subjectId: chosenSubjectID,\r\n        yearCourseId: id,\r\n        name: longName,\r\n        shortName: shortName,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Subjects`, requestOptions);\r\n\r\n    if (response.ok) {\r\n      dispatch(setEditSubjectPopup(false));\r\n      dispatch(forceAdminRefresh());\r\n    }\r\n  };\r\n\r\n  const updateShortName = (e) => {\r\n    setShortName(e.target.value);\r\n  };\r\n\r\n  const updateLongName = (e) => {\r\n    setLongName(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleAcceptClick = (e) => {\r\n    e.preventDefault();\r\n    editSubject();\r\n  };\r\n\r\n  const handleCloseClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setEditSubjectPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Edytowanie przedmiotu {chosenSubjectID} </h2>\r\n      <label htmlFor='shortName'>Pełna nazwa</label>\r\n      <br />\r\n      <input type='text' id='shortName' value={longName} onChange={updateLongName} />\r\n      <br />\r\n      <br />\r\n      <label htmlFor='shortName'>Krótka nazwa</label>\r\n      <br />\r\n      <input type='text' id='shortName' value={shortName} onChange={updateShortName} />\r\n      <br />\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Hasło\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Hasło' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n        Edytuj\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditSubjectModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { setAddGroupPopup } from '../../../redux/slices/addGroupPopup';\r\nimport { setAddSubjectPopup } from '../../../redux/slices/addSubjectPopup';\r\nimport { forceAdminRefresh } from '../../../redux/slices/forceAdminRefresh';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst AddGroupModal = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { id } = useParams();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const addGroup = async () => {\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        yearCourseId: id,\r\n        groupName: name,\r\n        groupNumber: number,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Groups`, requestOptions);\r\n\r\n    if (response.ok) {\r\n      dispatch(setAddGroupPopup(false));\r\n      dispatch(forceAdminRefresh());\r\n    }\r\n  };\r\n\r\n  const updateName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const updateNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleAcceptClick = (e) => {\r\n    e.preventDefault();\r\n    addGroup();\r\n  };\r\n\r\n  const handleCloseClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setAddGroupPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Dodawanie grupy</h2>\r\n      <label htmlFor='shortName'>Nazwa</label>\r\n      <br />\r\n      <input type='text' id='groupName' value={name} onChange={updateName} />\r\n      <br />\r\n      <br />\r\n      <label htmlFor='shortName'>Numer grupy</label>\r\n      <br />\r\n      <input type='text' id='groupNumber' value={number} onChange={updateNumber} />\r\n      <br />\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Hasło\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Hasło' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n        Utwórz\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddGroupModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setAddEventPopup } from '../../../redux/slices/addEventPopup';\r\nimport { forceAdminRefresh } from '../../../redux/slices/forceAdminRefresh';\r\nimport { forceEventsRefresh } from '../../../redux/slices/forceEventsRefresh';\r\nimport { setRemoveEventPopup } from '../../../redux/slices/removeEventPopup';\r\nimport { setRemoveGroupPopup } from '../../../redux/slices/removeGroupPopup';\r\nimport { setRemoveSubjectPopup } from '../../../redux/slices/removeSubjectPopup';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst RemoveGroupModal = () => {\r\n  const dispatch = useDispatch();\r\n  const chosenGroup = useSelector((state) => state.chosenGroupAdmin.value);\r\n\r\n  const { id } = useParams();\r\n\r\n  const [password, setPassword] = useState('');\r\n\r\n  const deletePressed = async () => {\r\n    const requestOptions = {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Groups/${chosenGroup}`, requestOptions);\r\n\r\n    if (response.ok) {\r\n      dispatch(setRemoveGroupPopup(false));\r\n      dispatch(forceAdminRefresh());\r\n    }\r\n  };\r\n  const cancelPressed = () => {\r\n    dispatch(setRemoveGroupPopup(false));\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Usuwanie grupy {chosenGroup}</h2>\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Hasło\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Hasło' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={cancelPressed}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={deletePressed}>\r\n        Usuń\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default RemoveGroupModal;\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setEditGroupPopup } from '../../../redux/slices/editGroupPopup';\r\nimport { forceAdminRefresh } from '../../../redux/slices/forceAdminRefresh';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst EditGroupModal = () => {\r\n  const dispatch = useDispatch();\r\n  const chosenGroup = useSelector((state) => state.chosenGroupAdmin.value);\r\n\r\n  const { id } = useParams();\r\n\r\n  const [number, setNumber] = useState(0);\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    setInitialGroupData();\r\n  }, []);\r\n\r\n  const setInitialGroupData = async () => {\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Groups/${chosenGroup}`);\r\n\r\n    const json = await response.json();\r\n    const groupData = await json.result;\r\n\r\n    setNumber(groupData.groupNumber);\r\n    setName(groupData.groupName);\r\n  };\r\n\r\n  const editGroup = async () => {\r\n    const requestOptions = {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Api-Key': password,\r\n      },\r\n      body: JSON.stringify({\r\n        groupId: chosenGroup,\r\n        yearCourseId: id,\r\n        groupNumber: number,\r\n        groupName: name,\r\n      }),\r\n      mode: 'cors',\r\n    };\r\n    const response = await fetch(`https://kiedykolos.bieda.it/yearCourses/${id}/Groups`, requestOptions);\r\n\r\n    if (response.ok) {\r\n      dispatch(setEditGroupPopup(false));\r\n      dispatch(forceAdminRefresh());\r\n    }\r\n  };\r\n\r\n  const updateName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const updateNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const updatePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleAcceptClick = (e) => {\r\n    e.preventDefault();\r\n    editGroup();\r\n  };\r\n\r\n  const handleCloseClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setEditGroupPopup(false));\r\n  };\r\n\r\n  return (\r\n    <Modal>\r\n      <h2>Edytowanie groupy {chosenGroup} </h2>\r\n      <label htmlFor='shortName'>Nazwa</label>\r\n      <br />\r\n      <input type='text' id='shortName' value={name} onChange={updateName} />\r\n      <br />\r\n      <br />\r\n      <label htmlFor='shortName'>Numer grupy</label>\r\n      <br />\r\n      <input type='text' id='shortName' value={number} onChange={updateNumber} />\r\n      <br />\r\n      <br />\r\n      <label className='edition__label' htmlFor='password'>\r\n        Hasło\r\n      </label>\r\n      <br />\r\n      <input type='password' id='password' name='password' placeholder='Hasło' onChange={updatePassword}></input>\r\n      <br />\r\n      <br />\r\n      <button className='event-adder__button--reject' onClick={handleCloseClick}>\r\n        Anuluj\r\n      </button>\r\n      <button className='event-adder__button--accept' onClick={handleAcceptClick}>\r\n        Edytuj\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditGroupModal;\r\n","import './NoIDPanel.scss';\r\n\r\nconst NoIDPanel = () => {\r\n  return (\r\n    <>\r\n      <div className='noIdText'>Podaj w linku ID (kiedy-kolos/#/{'{id}'})</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NoIDPanel;\r\n","import Header from '../Header/Header';\r\nimport MonthPagination from '../../user/MonthPagination/MonthPagination';\r\nimport Toolbar from '../Toolbar/Toolbar';\r\nimport Calendar from '../../user/Calendar/Calendar';\r\nimport DailyEvents from '../../user/DailyEvents/DailyEvents';\r\nimport Title from '../Title/Title';\r\nimport AdminPanel from '../../admin/AdminPanel/AdminPanel';\r\nimport AddEventModal from '../../user/Modals/AddEventModal';\r\nimport RemoveEventModal from '../../user/Modals/RemoveEventModal';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport './Panel.scss';\r\nimport UserBackgroundAPI from '../../API/UserBackgroundAPI';\r\nimport EditEventModal from '../../user/Modals/EditEventModal';\r\nimport SettingsModal from '../../user/Modals/SettingsModal';\r\nimport AdminBackgroundAPI from '../../API/AdminBackgroundAPI';\r\nimport AddSubjectModal from '../../user/Modals/AddSubjectModal';\r\nimport RemoveSubjectModal from '../../user/Modals/RemoveSubjectModal';\r\nimport EditSubjectModal from '../../user/Modals/EditSubjectModal';\r\nimport AddGroupModal from '../../user/Modals/AddGroupModal';\r\nimport RemoveGroupModal from '../../user/Modals/RemoveGroupModal';\r\nimport EditGroupModal from '../../user/Modals/EditGroupModal';\r\nimport NoIDPanel from '../NoIDPanel/NoIDPanel';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport Modal from '../../user/Modal/Modal';\r\n\r\nconst Panel = () => {\r\n  const addEventsPopup = useSelector((state) => state.addEventPopup.value);\r\n  const removeEventsPopup = useSelector((state) => state.removeEventPopup.value);\r\n  const editEventPopup = useSelector((state) => state.editEventPopup.value);\r\n  const settingsPopup = useSelector((state) => state.settingsPopup.value);\r\n\r\n  const addSubjectPopup = useSelector((state) => state.addSubjectPopup.value);\r\n  const removeSubjectPopup = useSelector((state) => state.removeSubjectPopup.value);\r\n  const editSubjectPopup = useSelector((state) => state.editSubjectPopup.value);\r\n\r\n  const addGroupPopup = useSelector((state) => state.addGroupPopup.value);\r\n  const removeGroupPopup = useSelector((state) => state.removeGroupPopup.value);\r\n  const editGroupPopup = useSelector((state) => state.editGroupPopup.value);\r\n\r\n  return (\r\n    <div className='panel'>\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          <NoIDPanel />\r\n        </Route>\r\n        <Route exact path='/:id'>\r\n          <UserBackgroundAPI />\r\n          <Header>\r\n            <MonthPagination />\r\n            <Toolbar />\r\n          </Header>\r\n          <Calendar />\r\n          <DailyEvents />\r\n          <AnimatePresence>\r\n            {addEventsPopup && <AddEventModal />}\r\n            {removeEventsPopup && <RemoveEventModal />}\r\n            {editEventPopup && <EditEventModal />}\r\n            {settingsPopup && <SettingsModal />}\r\n          </AnimatePresence>\r\n        </Route>\r\n        <Route path='/:id/admin'>\r\n          <AdminBackgroundAPI />\r\n          <Header>\r\n            <Title>Panel Administratora</Title>\r\n          </Header>\r\n          <AdminPanel />\r\n          <AnimatePresence>\r\n            {addSubjectPopup && <AddSubjectModal />}\r\n            {removeSubjectPopup && <RemoveSubjectModal />}\r\n            {editSubjectPopup && <EditSubjectModal />}\r\n\r\n            {addGroupPopup && <AddGroupModal />}\r\n            {removeGroupPopup && <RemoveGroupModal />}\r\n            {editGroupPopup && <EditGroupModal />}\r\n          </AnimatePresence>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Panel;\r\n","import { Route, Switch } from 'react-router';\r\n\r\nimport Panel from './components/other/Panel/Panel';\r\n\r\nconst App = () => {\r\n    return <Panel />;\r\n};\r\n\r\nexport default App;\r\n","import { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { loadState, saveState } from './storage/localStorage';\r\nimport { createStore } from 'redux';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport allReducer from './reducers';\r\nimport { store, persistor } from './redux/store';\r\nimport { PersistGate } from 'reduxjs-toolkit-persist/integration/react';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter basename='/'>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}